[{"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\index.js":"1","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\App.js":"2","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\store.js":"3","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\auth.js":"4","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\utils\\setdefaultxauth.js":"5","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\layouts\\Navbar.js":"6","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\auth\\Register.js":"7","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\layouts\\Landing.js":"8","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\auth\\Login.js":"9","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\layouts\\Alert.js":"10","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\Dashboard.js":"11","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\AcceptedApplications.js":"12","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\AddSOP.js":"13","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\AddJob.js":"14","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\AddEducation.js":"15","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\Profile.js":"16","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\ViewJob.js":"17","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\MyApplications.js":"18","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\EditProfile.js":"19","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\routes\\PrivateRoute\\Privateroute.js":"20","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\EditJob.js":"21","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\types.js":"22","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\alert.js":"23","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\profile.js":"24","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\applications.js":"25","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\TemplateRecruiter.js":"26","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\TemplateApplicant.js":"27","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\jobs.js":"28","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\DisplayRecruiterSide.js":"29","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\DisplayApplications.js":"30","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\TemplateForProfile.js":"31","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\TemplateForEducation.js":"32","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\index.js":"33","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\alert.js":"34","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\jobs.js":"35","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\applications.js":"36","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\authReducer.js":"37","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\profile.js":"38","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\index.js":"39","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\App.js":"40","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\store.js":"41","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\utils\\setdefaultxauth.js":"42","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\auth.js":"43","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Login.js":"44","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\Dashboard.js":"45","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\ViewJob.js":"46","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\EditJob.js":"47","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Register.js":"48","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddSOP.js":"49","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Landing.js":"50","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddJob.js":"51","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Alert.js":"52","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\MyApplications.js":"53","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\Profile.js":"54","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\EditProfile.js":"55","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AcceptedApplications.js":"56","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\AddEducation.js":"57","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\routes\\PrivateRoute\\Privateroute.js":"58","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\types.js":"59","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\profile.js":"60","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\alert.js":"61","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\applications.js":"62","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateApplicant.js":"63","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateRecruiter.js":"64","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\jobs.js":"65","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayRecruiterSide.js":"66","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForProfile.js":"67","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForEducation.js":"68","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayApplications.js":"69","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\index.js":"70","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\jobs.js":"71","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\profile.js":"72","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\alert.js":"73","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\applications.js":"74","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\authReducer.js":"75","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\HomePage\\HomePage.js":"76","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\utils\\requests.js":"77","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\constants\\constants.js":"78","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\CreateRoom\\CreateRoom.js":"79","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoom\\ChatRoom.js":"80","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoomPage\\ChatRoomPage.js":"81","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\salary\\salaryChart.js":"82","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\salary\\SalaryChart.js":"83","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\AllApplicants.js":"84","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\DashboardApplicants.js":"85","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\NavM.js":"86","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\Footer\\Footer.js":"87","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\filters.js":"88","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\index.js":"89","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\App.js":"90","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\store.js":"91","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\auth.js":"92","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\utils\\setdefaultxauth.js":"93","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Login.js":"94","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Register.js":"95","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Landing.js":"96","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Alert.js":"97","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\Dashboard.js":"98","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\NavM.js":"99","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\MyApplications.js":"100","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddSOP.js":"101","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\ViewJob.js":"102","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\Profile.js":"103","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddJob.js":"104","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\EditJob.js":"105","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\Footer\\Footer.js":"106","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AcceptedApplications.js":"107","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\EditProfile.js":"108","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\routes\\PrivateRoute\\Privateroute.js":"109","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\salary\\SalaryChart.js":"110","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\AddEducation.js":"111","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\AllApplicants.js":"112","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\DashboardApplicants.js":"113","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoom\\ChatRoom.js":"114","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoomPage\\ChatRoomPage.js":"115","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\CreateRoom\\CreateRoom.js":"116","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\HomePage\\HomePage.js":"117","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\alert.js":"118","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateRecruiter.js":"119","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\profile.js":"120","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\jobs.js":"121","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateApplicant.js":"122","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\types.js":"123","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\applications.js":"124","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayApplications.js":"125","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\utils\\requests.js":"126","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\constants\\constants.js":"127","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\index.js":"128","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForProfile.js":"129","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForEducation.js":"130","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayRecruiterSide.js":"131","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\alert.js":"132","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\jobs.js":"133","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\authReducer.js":"134","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\profile.js":"135","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\applications.js":"136"},{"size":151,"mtime":1615256240000,"results":"137","hashOfConfig":"138"},{"size":2626,"mtime":1615256240000,"results":"139","hashOfConfig":"138"},{"size":375,"mtime":1615256240000,"results":"140","hashOfConfig":"138"},{"size":3000,"mtime":1615256240000,"results":"141","hashOfConfig":"138"},{"size":249,"mtime":1615256240000,"results":"142","hashOfConfig":"138"},{"size":1864,"mtime":1641928614324,"results":"143","hashOfConfig":"138"},{"size":3423,"mtime":1615256240000,"results":"144","hashOfConfig":"138"},{"size":796,"mtime":1615256240000,"results":"145","hashOfConfig":"138"},{"size":2048,"mtime":1615256240000,"results":"146","hashOfConfig":"138"},{"size":728,"mtime":1615256240000,"results":"147","hashOfConfig":"138"},{"size":2219,"mtime":1615256240000,"results":"148","hashOfConfig":"138"},{"size":2240,"mtime":1615256240000,"results":"149","hashOfConfig":"138"},{"size":2283,"mtime":1615256240000,"results":"150","hashOfConfig":"138"},{"size":4967,"mtime":1615256240000,"results":"151","hashOfConfig":"138"},{"size":2483,"mtime":1615256240000,"results":"152","hashOfConfig":"138"},{"size":1760,"mtime":1615256240000,"results":"153","hashOfConfig":"138"},{"size":2539,"mtime":1615256240000,"results":"154","hashOfConfig":"138"},{"size":1442,"mtime":1615256240000,"results":"155","hashOfConfig":"138"},{"size":3456,"mtime":1615256240000,"results":"156","hashOfConfig":"138"},{"size":615,"mtime":1615256240000,"results":"157","hashOfConfig":"138"},{"size":2689,"mtime":1615256240000,"results":"158","hashOfConfig":"138"},{"size":2126,"mtime":1615256240000,"results":"159","hashOfConfig":"138"},{"size":367,"mtime":1615256240000,"results":"160","hashOfConfig":"138"},{"size":4163,"mtime":1615256240000,"results":"161","hashOfConfig":"138"},{"size":4217,"mtime":1615256240000,"results":"162","hashOfConfig":"138"},{"size":2910,"mtime":1615256240000,"results":"163","hashOfConfig":"138"},{"size":2448,"mtime":1615256240000,"results":"164","hashOfConfig":"138"},{"size":4987,"mtime":1615256240000,"results":"165","hashOfConfig":"138"},{"size":2671,"mtime":1641930573635,"results":"166","hashOfConfig":"138"},{"size":1867,"mtime":1615256240000,"results":"167","hashOfConfig":"138"},{"size":1706,"mtime":1615256240000,"results":"168","hashOfConfig":"138"},{"size":1385,"mtime":1615256240000,"results":"169","hashOfConfig":"138"},{"size":319,"mtime":1615256240000,"results":"170","hashOfConfig":"138"},{"size":445,"mtime":1615256240000,"results":"171","hashOfConfig":"138"},{"size":1073,"mtime":1615256240000,"results":"172","hashOfConfig":"138"},{"size":894,"mtime":1615256240000,"results":"173","hashOfConfig":"138"},{"size":1032,"mtime":1615256240000,"results":"174","hashOfConfig":"138"},{"size":1304,"mtime":1615256240000,"results":"175","hashOfConfig":"138"},{"size":151,"mtime":1615256240000,"results":"176","hashOfConfig":"177"},{"size":3749,"mtime":1646419666966,"results":"178","hashOfConfig":"177"},{"size":375,"mtime":1615256240000,"results":"179","hashOfConfig":"177"},{"size":249,"mtime":1615256240000,"results":"180","hashOfConfig":"177"},{"size":3000,"mtime":1615256240000,"results":"181","hashOfConfig":"177"},{"size":3568,"mtime":1647267384879,"results":"182","hashOfConfig":"177"},{"size":2232,"mtime":1646852355383,"results":"183","hashOfConfig":"177"},{"size":2679,"mtime":1646853682497,"results":"184","hashOfConfig":"177"},{"size":2808,"mtime":1646853314083,"results":"185","hashOfConfig":"177"},{"size":6481,"mtime":1647267658095,"results":"186","hashOfConfig":"177"},{"size":2283,"mtime":1615256240000,"results":"187","hashOfConfig":"177"},{"size":1817,"mtime":1647267228863,"results":"188","hashOfConfig":"177"},{"size":5133,"mtime":1647029249447,"results":"189","hashOfConfig":"177"},{"size":728,"mtime":1615256240000,"results":"190","hashOfConfig":"177"},{"size":1444,"mtime":1646851126258,"results":"191","hashOfConfig":"177"},{"size":1795,"mtime":1646851592142,"results":"192","hashOfConfig":"177"},{"size":3573,"mtime":1647028529096,"results":"193","hashOfConfig":"177"},{"size":2325,"mtime":1647030142282,"results":"194","hashOfConfig":"177"},{"size":2483,"mtime":1615256240000,"results":"195","hashOfConfig":"177"},{"size":615,"mtime":1615256240000,"results":"196","hashOfConfig":"177"},{"size":2126,"mtime":1615256240000,"results":"197","hashOfConfig":"177"},{"size":4163,"mtime":1615256240000,"results":"198","hashOfConfig":"177"},{"size":367,"mtime":1615256240000,"results":"199","hashOfConfig":"177"},{"size":4217,"mtime":1615256240000,"results":"200","hashOfConfig":"177"},{"size":4177,"mtime":1647112810932,"results":"201","hashOfConfig":"177"},{"size":3168,"mtime":1646853059035,"results":"202","hashOfConfig":"177"},{"size":4987,"mtime":1615256240000,"results":"203","hashOfConfig":"177"},{"size":2787,"mtime":1647113461151,"results":"204","hashOfConfig":"177"},{"size":4127,"mtime":1646854628063,"results":"205","hashOfConfig":"177"},{"size":1437,"mtime":1647113780237,"results":"206","hashOfConfig":"177"},{"size":1933,"mtime":1647030233888,"results":"207","hashOfConfig":"177"},{"size":319,"mtime":1615256240000,"results":"208","hashOfConfig":"177"},{"size":1073,"mtime":1615256240000,"results":"209","hashOfConfig":"177"},{"size":1304,"mtime":1615256240000,"results":"210","hashOfConfig":"177"},{"size":445,"mtime":1615256240000,"results":"211","hashOfConfig":"177"},{"size":894,"mtime":1615256240000,"results":"212","hashOfConfig":"177"},{"size":1032,"mtime":1615256240000,"results":"213","hashOfConfig":"177"},{"size":6066,"mtime":1643829524387,"results":"214","hashOfConfig":"177"},{"size":938,"mtime":1643563114834,"results":"215","hashOfConfig":"177"},{"size":432,"mtime":1645211176628,"results":"216","hashOfConfig":"177"},{"size":4573,"mtime":1643828824878,"results":"217","hashOfConfig":"177"},{"size":12341,"mtime":1645131752857,"results":"218","hashOfConfig":"177"},{"size":3639,"mtime":1643824399202,"results":"219","hashOfConfig":"177"},{"size":2128,"mtime":1644168150306,"results":"220","hashOfConfig":"177"},{"size":24077,"mtime":1647263570096,"results":"221","hashOfConfig":"177"},{"size":2812,"mtime":1647113410176,"results":"222","hashOfConfig":"177"},{"size":1588,"mtime":1646852173444,"results":"223","hashOfConfig":"177"},{"size":3369,"mtime":1647267730391,"results":"224","hashOfConfig":"177"},{"size":563,"mtime":1647268883732,"results":"225","hashOfConfig":"177"},{"size":0,"mtime":1646836993226,"results":"226","hashOfConfig":"177"},{"size":151,"mtime":1615256240000,"results":"227","hashOfConfig":"228"},{"size":3749,"mtime":1646419666966,"results":"229","hashOfConfig":"228"},{"size":375,"mtime":1615256240000,"results":"230","hashOfConfig":"228"},{"size":3000,"mtime":1615256240000,"results":"231","hashOfConfig":"228"},{"size":249,"mtime":1615256240000,"results":"232","hashOfConfig":"228"},{"size":3568,"mtime":1649938746945,"results":"233","hashOfConfig":"228"},{"size":6553,"mtime":1649687531439,"results":"234","hashOfConfig":"228"},{"size":1893,"mtime":1650199823106,"results":"235","hashOfConfig":"228"},{"size":728,"mtime":1615256240000,"results":"236","hashOfConfig":"228"},{"size":2232,"mtime":1646852355383,"results":"237","hashOfConfig":"228"},{"size":3369,"mtime":1647267730391,"results":"238","hashOfConfig":"228"},{"size":1444,"mtime":1646851126258,"results":"239","hashOfConfig":"228"},{"size":2326,"mtime":1649679608161,"results":"240","hashOfConfig":"228"},{"size":2680,"mtime":1650050474684,"results":"241","hashOfConfig":"228"},{"size":1795,"mtime":1646851592142,"results":"242","hashOfConfig":"228"},{"size":5133,"mtime":1647029249447,"results":"243","hashOfConfig":"228"},{"size":2808,"mtime":1646853314083,"results":"244","hashOfConfig":"228"},{"size":563,"mtime":1647268883732,"results":"245","hashOfConfig":"228"},{"size":2496,"mtime":1649955451659,"results":"246","hashOfConfig":"228"},{"size":3573,"mtime":1647028529096,"results":"247","hashOfConfig":"228"},{"size":615,"mtime":1615256240000,"results":"248","hashOfConfig":"228"},{"size":22895,"mtime":1650547442970,"results":"249","hashOfConfig":"228"},{"size":2662,"mtime":1649353349183,"results":"250","hashOfConfig":"228"},{"size":2819,"mtime":1649680352054,"results":"251","hashOfConfig":"228"},{"size":1588,"mtime":1646852173444,"results":"252","hashOfConfig":"228"},{"size":12341,"mtime":1645131752857,"results":"253","hashOfConfig":"228"},{"size":3639,"mtime":1643824399202,"results":"254","hashOfConfig":"228"},{"size":4573,"mtime":1643828824878,"results":"255","hashOfConfig":"228"},{"size":6066,"mtime":1643829524387,"results":"256","hashOfConfig":"228"},{"size":367,"mtime":1615256240000,"results":"257","hashOfConfig":"228"},{"size":3173,"mtime":1650050176556,"results":"258","hashOfConfig":"228"},{"size":4163,"mtime":1615256240000,"results":"259","hashOfConfig":"228"},{"size":4987,"mtime":1615256240000,"results":"260","hashOfConfig":"228"},{"size":4272,"mtime":1649953852805,"results":"261","hashOfConfig":"228"},{"size":2126,"mtime":1615256240000,"results":"262","hashOfConfig":"228"},{"size":4217,"mtime":1615256240000,"results":"263","hashOfConfig":"228"},{"size":1934,"mtime":1650048096082,"results":"264","hashOfConfig":"228"},{"size":938,"mtime":1643563114834,"results":"265","hashOfConfig":"228"},{"size":432,"mtime":1645211176628,"results":"266","hashOfConfig":"228"},{"size":319,"mtime":1615256240000,"results":"267","hashOfConfig":"228"},{"size":4210,"mtime":1650200572091,"results":"268","hashOfConfig":"228"},{"size":1437,"mtime":1647113780237,"results":"269","hashOfConfig":"228"},{"size":2807,"mtime":1649954797175,"results":"270","hashOfConfig":"228"},{"size":445,"mtime":1615256240000,"results":"271","hashOfConfig":"228"},{"size":1073,"mtime":1615256240000,"results":"272","hashOfConfig":"228"},{"size":1032,"mtime":1615256240000,"results":"273","hashOfConfig":"228"},{"size":1304,"mtime":1615256240000,"results":"274","hashOfConfig":"228"},{"size":894,"mtime":1615256240000,"results":"275","hashOfConfig":"228"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},"17x6zk5",{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"278"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"278"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"278"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"278"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"278"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"278"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"278"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"278"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"278"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"278"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"278"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"278"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"278"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"278"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},"1q54lin",{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"370"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"370"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"370"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"370"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"370"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"370"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"370"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"370"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"370"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"370"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"370"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"370"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"370"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"370"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"370"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"370"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"370"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"370"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"370"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"370"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"370"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},"1j3c2cd",{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"487"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"487"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"487"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"487"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"487"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"487"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"487"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"487"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"487"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"487"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"487"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"487"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"487"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"487"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":65,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"487"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"487"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"487"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"487"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"487"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"487"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"487"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"487"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"487"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"487"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"487"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"487"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"487"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"595"},"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\index.js",[],["596","597"],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\App.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\store.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\auth.js",["598"],"import { CLEAR_PROFILE,  REG_SUCC, REG_FAIL, Applicant , USER_LOADED, AUTH_FAILED, LOGIN_FAIL, LOGIN_SUCC, LOGOUT} from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport {setDefaultXAuthForToken} from '../utils/setdefaultxauth';\nimport {getUserProfile} from './profile';\n\nexport const loaduserusingtoken = () => async dispatch => {\n    setDefaultXAuthForToken(localStorage.getItem('token'));\n    try {\n        const response = await axios.get('/profile/me');\n        dispatch({\n            type: USER_LOADED,\n            payload: response.data\n        });\n        // dispatch(getUserProfile);\n    } catch (err) {\n        dispatch({\n            type: AUTH_FAILED\n        });\n    }\n};\n\nexport const loginuser = ({password, email}) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n          };\n        //   console.log(password);\n        //   console.log(email);\n        const newUser = {\n            password,\n            email\n        };\n        const userData = JSON.stringify(newUser);\n        const response = await axios.post('/auth/login', userData, config);\n        dispatch({\n            type: LOGIN_SUCC,\n            payload: response.data\n        });\n        dispatch(loaduserusingtoken());\n    } catch (err) {\n        let errors;\n        if (err.response && err.response.data)\n        {\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: LOGIN_FAIL\n        });\n        dispatch(loaduserusingtoken());\n    }\n};\n\n\n\nexport const registeruser = ({name, email, password, who}) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n          };\n        const newUser = {\n            name,\n            email,\n            password,\n            who\n        };\n        const userData = JSON.stringify(newUser);\n        let response;          \n        if(who === Applicant){\n            response = await axios.post('/applicant', userData, config);\n        }\n        else{\n            response = await axios.post('/recruiter', userData, config);\n        }\n        dispatch({\n            type: REG_SUCC,\n            payload: response.data\n        });\n        dispatch(loaduserusingtoken());\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: REG_FAIL\n        });\n        dispatch(loaduserusingtoken());\n    }\n};\n\n\nexport const logoutuser = () => dispatch => {\n    // console.log('I am here');\n    dispatch({\n        type: CLEAR_PROFILE\n    })\n    dispatch({\n        type: LOGOUT\n    });\n};","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\utils\\setdefaultxauth.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\layouts\\Navbar.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\auth\\Register.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\layouts\\Landing.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\auth\\Login.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\layouts\\Alert.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\Dashboard.js",["599"],"import React , {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getJobs } from '../../actions/jobs';\nimport { Applicant } from '../../actions/types';\nimport {Link} from 'react-router-dom';\nimport {loaduserusingtoken} from '../../actions/auth';\nimport TemplateRecruiter from './TemplateRecruiter';\nimport TemplateApplicant from './TemplateApplicant';\nimport {getApplications} from '../../actions/applications';\n\n\nconst Dashboard = ({ getJobs, auth, jobs: {jobs, loading, cjob},applications, getApplications, loaduserusingtoken}) => {\n    \n    useEffect(()=> {\n        loaduserusingtoken();\n        getJobs();\n        getApplications();\n      }, []);\n    return (<Fragment>\n            {loading || auth.loading || !auth.user || cjob!=null || (auth.user.who === 'Recruiter' && !jobs) || applications.loading ? <Fragment>Loading...</Fragment> : \n    <Fragment>\n\n        <h1>Dashboard</h1>\n            {auth.user && auth.user.who === Applicant ? \n            <Fragment>\n                <h3> \n                    <i className=\"fas fa-user\"></i>\n                    Applicants Dashboard\n                </h3>\n                <TemplateApplicant jobs={jobs}/>\n            </Fragment>\n            :\n            <Fragment>\n                <h3>\n                    <i className=\"fas fa-user\"></i>\n                    Recruiter Dashborad\n                </h3>\n                <Link to=\"/addjob\" className=\"btn btn-light\"\n                    ><i className=\"fas fa-user-circle text-primary\"></i>Add New Job </Link>\n                <TemplateRecruiter jobs={jobs}/>\n            </Fragment>\n            }\n    </Fragment>}\n    </Fragment>);\n};\n\nDashboard.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    jobs: PropTypes.object.isRequired,\n    loaduserusingtoken: PropTypes.func.isRequired,\n    applications: PropTypes.object.isRequired,\n    getApplications: PropTypes.func.isRequired,\n}\nconst mapStateToProps = (state) => ({\n    auth: state.authReducer,\n    jobs: state.jobs,\n    applications: state.applications, \n});\n\nexport default connect(mapStateToProps, { getJobs ,loaduserusingtoken, getApplications})(Dashboard);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\AcceptedApplications.js",["600","601","602"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus, getApplications} from '../../actions/applications';\n\n\nconst AcceptedApplications = ({loading , applicationjobs, changeStatus, getApplications}) => {\n    useEffect(()=>{\n        getApplications();\n    },[]);\n    // console.log(applicationjobs);\n    if(loading){\n        return <Fragment><p>loading...</p></Fragment>\n    }\n    if(applicationjobs==null){\n        return <h2>Employees Of recruiter</h2>\n    }\n    applicationjobs =  applicationjobs.filter((val) => val.status === 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        typeOfJob,\n        title,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Name Of Applicant</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Date Of Joining</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Type Of Job</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{title ? \n<Fragment>\n    <tr>\n        <th>Title Of Job</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n<tr>\n    <td>\n        <button type=\"submit\" className='btn btn-warning'>Rate</button>\n    </td>\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Employess of recruiter</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nAcceptedApplications.propTypes = {\n    applicationjobs: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n    loading: PropTypes.bool,\n    getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationjobs: state.applications.applications,\n    loading: state.applications.loading\n});\nexport default connect(mapStateToProps, {changeStatus, getApplications})(AcceptedApplications\n);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\AddSOP.js",["603","604","605","606","607","608","609","610","611","612","613"],"import React, {Fragment, useEffect, useState, Redirect} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {newApplication} from '../../actions/applications';\n\nconst AddSOP = ({match, jobs: {cjob, loading}, loadJobWithId, newApplication}) => {\n    const job = match.params.id;\n\n    // console.log(job);\n    const [formData, setFormData] = useState({\n        recruiter: '',\n        status: 'Applied',\n        sop: '',\n        title: '',\n        salary: '',\n        typeOfJob: '',\n        rating: '',\n        job_id: '',\n        deadline: ''\n      });\n      \n    const {\n        recruiter,\n        status,\n        sop,\n        recruiter_id,\n        title,\n        salary,\n        typeOfJob,\n        rating,\n        deadline,\n        job_id\n    } = formData;\n    useEffect(()=>{\n        loadJobWithId(job);\n    },[loadJobWithId]);\n    if(!cjob || loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    // console.log(deadline);\n        const onChange = (e) => {\n            console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value,\n              recruiter: cjob.recruiter_id, title: cjob.title, salary: cjob.salary, typeOfJob: cjob.typeOfJob, job_id: job, deadline: cjob.deadline\n            });\n          };\n      \n        const onSubmit =  (e) => {\n            e.preventDefault();\n            newApplication(formData);\n          }\n    return (\n        <Fragment>\n        <h1>Submit Application</h1>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <label for=\"id1\">Statement Of Purpose</label>\n          <textarea type=\"text\" id='id1' className=\"form-control\" rows='5' placeholder=\"SOP\"  name=\"sop\"  value={sop} onChange={e => onChange(e)} required></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Application\" />\n      </form>\n        </Fragment>\n    )\n}\n\nAddSOP.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    loadJobWithId: PropTypes.array,\n    newApplication: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n});\n\nexport default connect(mapStateToProps, {newApplication, loadJobWithId})(AddSOP);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\AddJob.js",["614"],"import React ,{useState, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addNewJob} from '../../actions/jobs';\nimport {Link} from 'react-router-dom';\nimport { setalert } from '../../actions/alert';\n\nconst AddJob = ({addNewJob, setalert}) => {\n    const [formData, setFormData] = useState({\n        title: '',\n            applications: '',\n            positions: '',\n            skills: '',\n            typeOfJob: '',\n            duration: '',\n            salary: '',\n            deadline: ''\n      });\n    const {title,\n        applications,\n        positions,\n        deadline,\n        skills,\n        typeOfJob,\n        duration,\n        salary,} = formData;\n        const onChange = (e) => {\n            // console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value});\n          };\n      \n          const onSubmit = async (e) => {\n            e.preventDefault();\n\n            if(typeOfJob !== 'Full-time' && typeOfJob!=='Part-time' && typeOfJob!=='Work from Home'){\n              setalert('Please select type of job', 'danger');\n            }\n            else{\n              addNewJob(formData);\n            }\n            \n          }\n    return (\n        <Fragment>\n        <h1>Add New Job</h1>\n      <form onSubmit={e => onSubmit(e)}>\n      \n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of applications\" name=\"applications\" min='0' value={applications} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of positions\" name=\"positions\" min='0' value={positions} onChange={e => onChange(e)} required />\n        </div>\n\n        {/* <div className=\"form-group\">\n          <input type=\"date\" className=\"form-control\" placeholder=\"date of posting\" max={Date.now} name=\"date_of_posting\"  value={date_of_posting} onChange={e => onChange(e)} required />\n        </div> */}\n\n        <div className=\"form-group\">\n          <input type=\"datetime-local\" className=\"form-control\" placeholder=\"deadline\" min={Date.now} name=\"deadline\"  value={deadline} onChange={e => onChange(e)} required />\n        </div>\n\n        {/* <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"day of deadline\" name=\"day\" value={day} max='31' min='1' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"month of deadline\" name=\"month\" value={month} min='1' max='12' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"year of deadline\" name=\"year\" value={year} min='0' max='2021' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"hour of deadline\" name=\"hour\" value={hour} min='0' max='23' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"minute of deadline\" name=\"minute\" value={minute} min='0' max='59' onChange={e => onChange(e)} required />\n        </div> */}\n\n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <select class=\"custom-select\" name=\"typeOfJob\" value={typeOfJob} onChange={e => onChange(e)} required>\n       <option selected>Type of Job</option>\n        <option value=\"Full-time\">Full-time</option>\n        <option value=\"Part-time\">Part-time</option>\n        <option value=\"Work from Home\">Work from Home</option>\n        </select>\n        </div>\n        \n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"duration\" name=\"duration\" value={duration} min='1' max='6' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"salary\" name=\"salary\" value={salary} onChange={e => onChange(e)} min='0' required />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Add New Job\" />\n      </form>\n        </Fragment>\n    )\n}\n\nAddJob.propTypes = {\n    addNewJob: PropTypes.func.isRequired,\n    setalert: PropTypes.func.isRequired,\n}\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(mapStateToProps, {addNewJob, setalert})(AddJob);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\AddEducation.js",["615","616","617"],"import React, {Fragment,  Link, useState, Redirect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addEducation} from '../../actions/profile';\nimport { Applicant } from '../../actions/types';\n\nconst AddEducation = ({auth: {loading, user}, addEducation}) => {\n    const [formData , setFormData] = useState({\n        to: '',\n        from : '',\n        institute: '',\n    });\n    const {\n        to,\n        from,\n        institute\n    } = formData;\n    const onChange = (e) => {\n        // console.log(e.target.value);\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        addEducation(formData);\n    }\n    if(loading || !user){\n        return (<Fragment>loading....</Fragment>)\n    }\n    return (\n        <Fragment>\n        <h1 className=\"large text-primary\">\n        Add Education\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-graduation-cap\"></i> Add any Institute \n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit= {e => onSubmit(e)}>\n        <div className=\"form-group\">\n        <label for=\"insid\">Institute</label>\n          <input\n          id='insid'\n          className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Institute\"\n            name=\"institute\"\n            value={institute} onChange={e => onChange(e)} required\n          />\n        </div>\n        <div className=\"form-group\">\n        <label for=\"id1\">Start Year (YYYY)</label>\n          <input type=\"number\" name=\"from\" id='id1'\n            placeholder=\"Start year\"\n            className=\"form-control\"\n            value={from} min='1950' max='2021' onChange={e => onChange(e)} required\n          />\n        </div>\n        <div className=\"form-group\">\n        <label for=\"id2\">End Year (YYYY)</label>\n          <input type=\"number\" name=\"to\" id='id2'\n            placeholder=\"End Year\"\n            className=\"form-control\"\n            value={to} min='1950' max='2021' onChange={e => onChange(e)}\n            />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n      </form>\n      {/* <Link  to='/profile'>Go Back</Link> */}\n\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth : state.authReducer\n});\n\n\nexport default connect(mapStateToProps, {addEducation})(AddEducation);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\Profile.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\ViewJob.js",["618","619"],"import React, {Fragment, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId, editJob } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport DisplayRecruiterSide from './DisplayRecruiterSide';\nimport {getApplicationsById} from '../../actions/applications';\n\n\nconst ViewJob = ({match, jobs: {cjob, loading}, editJob, loadJobWithId, applicationjobs, getApplicationsById}) => {\n    const id = match.params.id;\n    useEffect(()=>{\n        loadJobWithId(id);\n        getApplicationsById(id);\n    },[]);\n    \n    if(!cjob || loading || applicationjobs.loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    const {\n        title,\n            applications,\n            positions,\n            deadline,\n            skills,\n            typeOfJob,\n            duration,\n            salary,\n            date_of_posting\n    } = cjob;\n    return (\n        <Fragment>\n        <h1>Job</h1>\n        <table className='table'>\n    <tr>\n        <th>Title</th>\n        <td>{title}</td>\n    </tr> \n    <tr>\n        <th>Number of Applications</th>\n        <td>{applications}</td>\n    </tr>\n\n    <tr>\n        <th>Number of positions</th>\n        <td>{positions}</td>\n    </tr>\n        <tr>\n            <th>date of posting</th>\n            <td>{moment(date_of_posting).format('LLL')}</td>\n        </tr>\n    <tr>\n        <th>Deadline of application</th>\n        <td>{moment(deadline).format('LLL')}</td>\n    </tr>\n    <tr>\n        <th>salary</th>\n        <td>{salary}</td>\n    </tr>\n    <tr>\n        <th>skills</th>\n        <td>{skills}</td>\n    </tr>\n    <tr>\n        <th>Type Of Jobs</th>\n        <td>{typeOfJob}</td>\n    </tr>\n    <tr>\n        <th>duration</th>\n        <td>{duration}</td>\n    </tr>\n    <tr>\n    <td><Link className='btn btn-primary' to={`/editjob/${id}`} >Edit Job</Link></td>\n    </tr>\n    \n</table>\n        <h2>Applications For this Job</h2>\n\n        <DisplayRecruiterSide applicationjobs={applicationjobs.applications}/>\n        </Fragment>\n    )\n}\n\nViewJob.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    editJob: PropTypes.func.isRequired,\n    loadJobWithId: PropTypes.func.isRequired,\n    getApplicationsById: PropTypes.func.isRequired,\n    applicationjobs: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n    applicationjobs: state.applications\n});\n\nexport default connect(mapStateToProps, {editJob, loadJobWithId, getApplicationsById})(ViewJob);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\MyApplications.js",["620","621","622"],"import React , {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getJobs } from '../../actions/jobs';\nimport { Applicant } from '../../actions/types';\nimport {Link} from 'react-router-dom';\nimport {loaduserusingtoken} from '../../actions/auth';\nimport {getApplications} from '../../actions/applications';\nimport DisplayApplications from './DisplayApplications';\n\nconst MyApplications = ({ auth,applications, getApplications, loaduserusingtoken}) => {\n    \n    useEffect(()=> {\n        loaduserusingtoken();\n        getApplications();\n      }, []);\n    return (<Fragment>\n            {auth.loading || !auth.user || applications.loading ? <Fragment>Loading...</Fragment> : \n    <Fragment>\n\n        <h1>My Applications</h1>\n            <DisplayApplications applicationjobs={applications.applications}/>\n    </Fragment>}\n    </Fragment>);\n};\n\nMyApplications.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    jobs: PropTypes.object.isRequired,\n    loaduserusingtoken: PropTypes.func.isRequired,\n    applications: PropTypes.object.isRequired,\n    getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.authReducer,\n    jobs: state.jobs,\n    applications: state.applications, \n});\n\nexport default connect(mapStateToProps, { getJobs ,loaduserusingtoken, getApplications})(MyApplications);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\EditProfile.js",["623","624"],"import {connect} from 'react-redux';\nimport React, {useState, Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {updateProfile, getUserProfile} from '../../actions/profile';\nimport { Applicant } from '../../actions/types';\n\n\nconst EditProfile = ({updateProfile, auth, profile: {profile, loading}, getUserProfile}) => {\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        skills: '',\n        who: '',\n        contactnumber: '',\n        bio: '',\n        email: ''\n    });\n    const  {\n        email,\n        name,\n        skills,\n        who,\n        contactnumber,\n        bio\n    } = formData;\n\n      useEffect(() => {\n        getUserProfile();\n        setFormData({\n          name: loading || !profile.name  ? '' : profile.name,\n          skills: loading || !profile.skills  ? '' : profile.skills,\n          who: loading || !profile.who  ? '' : profile.who,\n          contactnumber: loading || !profile.contactnumber  ? '' : profile.contactnumber,\n          bio: loading || !profile.bio  ? '' : profile.bio,\n          email: loading || !profile.email  ? '' : profile.email,\n        });\n    },[loading, getUserProfile]);\n    \n    if(auth.loading || !auth.user || loading || !profile)\n    {\n      return (<Fragment>Loading...</Fragment>)\n    }\n    // setFormData({who: auth.who});\n    const onChange = (e) => {\n        // console.log(e.target.value);\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setFormData({ ...formData, email: auth.user.email});\n        updateProfile(formData, {who});\n    };\n    \n    return (\n        <Fragment>\n        <h1>Edit Profile</h1>\n      <p><i className=\"fas fa-user\"></i> Edit your profile</p>\n      <form onSubmit={e => onSubmit(e)}>\n        \n        <div className=\"form-group\">\n        <label for=\"nameid\">Name</label>\n          <input id=\"nameid\" type=\"name\" className=\"form-control\" placeholder=\"*Name\" name=\"name\" value={name} onChange={e => onChange(e)} required/>\n        </div>\n        {auth.user.who === Applicant ? <Fragment>\n          <div className=\"form-group\">\n        <label for=\"skillid\">Skills</label>\n          <input id=\"skillid\" type=\"skills\" className=\"form-control\" placeholder=\"Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n        </div>  \n        </Fragment>: \n        <Fragment>\n          <div className=\"form-group\">\n        <label for=\"contactid\">Contact Number</label>\n          <input id=\"contactid\" type=\"number\" className=\"form-control\" placeholder=\"*Mobile Number\" name=\"contactnumber\" value={contactnumber} onChange={e => onChange(e)} required/>\n        </div>\n        <div class=\"form-group\">\n      <label for=\"Textarea1\">Bio</label>\n      <textarea class=\"form-control\" id=\"area1\" rows=\"3\" name=\"bio\" value={bio} onChange={e => onChange(e)} required></textarea>\n    </div>\n        </Fragment>\n        }\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Update Profile\" />\n      </form>\n      </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n\n    updateProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    getUserProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state =>({\n    auth: state.authReducer,\n    profile: state.profile,\n});\nexport default connect(mapStateToProps, {updateProfile, getUserProfile})(EditProfile); \n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\routes\\PrivateRoute\\Privateroute.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\EditJob.js",["625"],"import React, {Fragment, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId, editJob } from '../../actions/jobs';\nimport {connect} from 'react-redux';\n\n\nconst EditJob = ({match, jobs: {cjob, loading}, editJob, loadJobWithId}) => {\n    const id = match.params.id;\n    // console.log(id);\n    const [formData, setFormData] = useState({\n            applications: '',\n            positions: '',\n            deadline: '',\n      });\n      \n    const {\n        applications,\n        positions,\n        deadline,\n    } = formData;\n    useEffect(()=>{\n        loadJobWithId(id);\n        setFormData({\n            applications: loading || !cjob || !cjob.applications ? '' : cjob.applications,\n            positions: loading || !cjob || !cjob.positions  ? '' : cjob.positions,\n            deadline: loading || !cjob || !cjob.deadline ? '' : cjob.deadline,\n        });\n    },[loading, loadJobWithId]);\n    \n    if(!cjob || loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    // console.log(deadline);\n        const onChange = (e) => {\n            // console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value});\n          };\n      \n        const onSubmit = (e) => {\n            e.preventDefault();\n            editJob({...formData,...{id}});\n          }\n    return (\n        <Fragment>\n        <h1>Edit Job Details</h1>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <label for=\"id1\">Number Of Applications</label>\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of applications\" name=\"applications\" min='0' value={applications} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n        <label for=\"id1\">Number Of Positions</label>\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of positions\" name=\"positions\" min='0' value={positions} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n        <label for=\"id1\">Deadline of Applications</label>\n          <input type=\"datetime-local\" className=\"form-control\" placeholder=\"deadline\" name=\"deadline\"  value={deadline} onChange={e => onChange(e)} required />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Edit Job\" />\n      </form>\n        </Fragment>\n    )\n}\n\nEditJob.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    editJob: PropTypes.func.isRequired,\n    loadJobWithId: PropTypes.array,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n});\n\nexport default connect(mapStateToProps, {editJob, loadJobWithId})(EditJob);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\types.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\alert.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\profile.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\applications.js",["626"],"import {ADDED_NEW_APPLICATION, FAILED_TO_ADD_NEW_APPLICATION, GOT_ALL_APPLICATION, FAILED_TO_GET_ALL_APPLICATION, GOT_ALL_APPLICATION_STATUS, FAILED_TO_GET_ALL_APPLICATION_STATUS } from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport {loaduserusingtoken} from './auth';\n\n\nexport const newApplication = (formData) => async dispatch => {\n    try {\n        // console.log('Trinadh Is Great');\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n        // console.log('Trinadh Is Great');\n            const data = JSON.stringify(formData);\n            const response = await axios.post('/appjobs', data, config);\n            dispatch({\n                type: ADDED_NEW_APPLICATION,\n                payload: response.data\n            });\n            dispatch(setalert('New Application Created', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_ADD_NEW_APPLICATION,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} \n\n\nexport const getApplications = () => async dispatch => {\n    try {\n            const response = await axios.get('/appjobs');\n            dispatch({\n                type: GOT_ALL_APPLICATION,\n                payload: response.data\n            });\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_GET_ALL_APPLICATION,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} \n\n\nexport const getApplicationsById = (id) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n                    const data = JSON.stringify({id});\n            const response = await axios.post('/appjobs/id', data, config);        \n            dispatch({\n                type: GOT_ALL_APPLICATION,\n                payload: response.data\n            });\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_GET_ALL_APPLICATION,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} \n\n\n\nexport const changeStatus = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n                    const data = JSON.stringify(formData);\n            const response = await axios.post('/appjobs/statusupdate', data, config);        \n            dispatch({\n                type: GOT_ALL_APPLICATION_STATUS,\n                payload: response.data\n            });\n        dispatch(setalert('Status is changed', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_TO_GET_ALL_APPLICATION_STATUS,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n} ","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\TemplateRecruiter.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\TemplateApplicant.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\actions\\jobs.js",["627","628","629"],"import { DELETE_JOB, ERROR_WHILE_DELETING_JOB, ERROR_LOADING_JOB, LOADED_JOB, ADD_NEW_JOB, ERROR_ADDING_JOB, GOT_JOBS, ERROR_GETTING_JOB, EDITED_JOB, FAILED_EDITING_JOB, GET_ALL_JOBS} from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport {loaduserusingtoken} from './auth';\n\n\nexport const addNewJob = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        };\n        let response;\n        const data = JSON.stringify(formData);\n        response = await axios.post('/jobs', data, config);\n        dispatch({\n            type: ADD_NEW_JOB,\n            payload: response.data\n        });\n        dispatch(setalert('Added Job Sucesfully', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_ADDING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n};\n\n\nexport const getJobs = () => async dispatch => {\n    try {\n        const response = await axios.get('/jobs');\n        dispatch({\n            type: GOT_JOBS,\n            payload: response.data\n        });\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_GETTING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n}\n\nexport const deleteJob = (id) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        };\n        let response;\n        let data = JSON.stringify({id});\n        response = await axios.post('/jobs/delete', data, config);\n        \n        dispatch({\n            type: DELETE_JOB,\n            payload: response.data\n        });\n        dispatch(setalert('Deleted Job', 'danger'));\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_GETTING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        }); \n    }\n}\n\nexport const loadJobWithId = (id) => async dispatch => {\n    try {\n        // console.log('jelo');\n        const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n    }\n        const data = JSON.stringify({id});\n        let response = await axios.post('/jobs/id',data, config);\n        // console.log(response.data);\n        dispatch({\n            type: LOADED_JOB,\n            payload: response.data\n        });\n        // console.log(response.data);\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_LOADING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n\n    }\n} \n\nexport const editJob = (formdata) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        }\n            const data = JSON.stringify(formdata);\n            const response = await axios.post('/jobs/update', data, config);\n            dispatch({\n                type: EDITED_JOB,\n                payload: response.data\n            })\n            dispatch(setalert('Edited Profile Sucessfully', 'danger'));\n        \n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: FAILED_EDITING_JOB,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n}\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\DisplayRecruiterSide.js",["630","631"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus} from '../../actions/applications';\n\n\nconst DisplayRecruiterSide = ({applicationjobs, changeStatus}) => {\n    \n    applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        dateOfApplication,\n        sop,\n        status,\n        job_id,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Name Of Applicant</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{skills ? \n<Fragment>\n    <tr>\n        <th>Skills of Applicant</th>\n        <td>{skills}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfApplication ? \n<Fragment>\n    <tr>\n        <th>Date Of Application</th>\n        <td>{dateOfApplication}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{sop ? \n<Fragment>\n    <tr>\n        <th>Statement Of Purpose</th>\n        <td>{sop}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Stage of application</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n    <td>\n    \n    {\n    status === 'Applied' ? \n    <Fragment>\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Shortlist</button>\n    </Fragment>\n    :\n    (\n        status === 'Shortlist' ? \n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Accept</button>\n        :\n        <Fragment/>\n    )\n    }    \n    </td>\n    {status !== 'Accepted' ? <td>\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Reject</button>\n    </td>\n    :\n    <Fragment/>\n}\n    \n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            \n            {code}\n        </Fragment>\n    );\n}\n\nDisplayRecruiterSide.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, {changeStatus})(DisplayRecruiterSide\n);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\dashboard\\DisplayApplications.js",["632","633"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\n\n\nconst DisplayApplications = ({applicationjobs}) => {\n    const code = applicationjobs.map(({\n            title,\n            dateOfJoining,\n            salary,\n            recruiter: {name},\n            status,\n            typeOfJob,\n            _id\n        }) => <table className='table' key={_id}>\n        {title ? \n<Fragment>\n    <tr>\n        <th>Title</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{name ? \n<Fragment>\n    <tr>\n        <th>Name Of Recruiter</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Date Of Joining</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{salary ? \n<Fragment>\n    <tr>\n        <th>salary</th>\n        <td>{salary}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Type Of Jobs</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Status of application</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n<input type=\"submit\" className=\"btn btn-warning\" value=\"Rate Job\" />\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Jobs</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nDisplayApplications.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, null)(DisplayApplications\n);\n","D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\TemplateForProfile.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\components\\profile\\TemplateForEducation.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\index.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\alert.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\jobs.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\applications.js",[],["634","635"],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\authReducer.js",[],"D:\\1Examples Job Portal MERN\\Job-Portal-main\\frontend\\src\\reducers\\profile.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\index.js",[],["636","637"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\App.js",["638"],"import React, { Fragment , useEffect} from 'react';\nimport { BrowserRouter as Router , Route , Switch } from 'react-router-dom';\nimport './App.css';\nimport NavM from './components/layouts/NavM';\nimport Landing from './components/layouts/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Alert from './components/layouts/Alert';\nimport {setDefaultXAuthForToken} from './utils/setdefaultxauth';\nimport { loaduserusingtoken } from './actions/auth';\n// Renaming Privateroute component to PrivateRoute\nimport PrivateRoute from './routes/PrivateRoute/Privateroute';\nimport EditProfile from './components/profile/EditProfile';\nimport Profile from './components/profile/Profile';\nimport AddEducation from './components/profile/AddEducation';\nimport AddJob from './components/dashboard/AddJob';\nimport EditJob from './components/dashboard/EditJob';\nimport ViewJob from './components/dashboard/ViewJob';\nimport AddSOP from './components/dashboard/AddSOP';\nimport MyApplications from './components/dashboard/MyApplications';\nimport AcceptedApplications from './components/dashboard/AcceptedApplications';\nimport HomePage from './components/chat/HomePage/HomePage'\nimport CreateRoom from \"../src/components/chat/CreateRoom/CreateRoom\";\nimport ChatRoom from \"../src/components/chat/ChatRoom/ChatRoom\";\nimport ChatRoomPage from \"../src/components/chat/ChatRoomPage/ChatRoomPage\";\nimport SalaryChart from './components/salary/SalaryChart';\nimport AllApplicants from './components/applicants/AllApplicants'\nimport DashboardApplicants from './components/applicants/DashboardApplicants'\nimport Footer from './components/Footer/Footer';\n\n\nsetDefaultXAuthForToken(localStorage.getItem('token'));\n\nconst App = () => {\n  \n  useEffect(()=> {\n    store.dispatch(loaduserusingtoken());\n  }, []);\n\n  return (\n    <Provider store ={store}>\n      <Router>\n    <Fragment className=\"App\">\n    <NavM/>\n      <Route exact path='/' component={Landing} />\n      <section className= 'container'>\n        <Alert/>\n        <Switch>\n\n      <Route exact path='/register' component={Register} />\n      <Route exact path='/login' component={Login} />\n      <PrivateRoute exact path='/dashboard' component={Dashboard} />\n      <PrivateRoute exact path='/editprofile' component={EditProfile} />\n      <PrivateRoute exact path='/profile' component={Profile} />\n      <PrivateRoute exact path='/addeducation' component={AddEducation} />\n      <PrivateRoute exact path='/addjob' component={AddJob} />\n      <PrivateRoute exact path='/viewapplication/:id' component={ViewJob} />\n      <PrivateRoute exact path='/editjob/:id' component={EditJob} />\n      <PrivateRoute exact path='/sop/:id' component={AddSOP} />\n      <PrivateRoute exact path='/myapplication' component={MyApplications} />\n      <PrivateRoute exact path='/successjob' component={AcceptedApplications} />\n      <PrivateRoute exact path='/chat' component={HomePage} />\n      <PrivateRoute exact path='/salary' component={SalaryChart} />\n      {/* Пробую поставити id в applicants */}\n      <PrivateRoute exact path='/DashboardApplicants' component={DashboardApplicants} />\n      {/* <PrivateRoute exact path='/applicants/ :id' component={AllApplicants} /> */}\n\n      <Route path=\"/chatroom\" exact component={ChatRoom} />\n        <Route path=\"/chatroompage\" exact component={ChatRoomPage} />\n\n      <PrivateRoute path=\"/createroom\">\n          <CreateRoom/>\n        </PrivateRoute>\n      \n          \n        </Switch>\n      </section>\n  </Fragment>\n    </Router>\n    <Footer />\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\store.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\utils\\setdefaultxauth.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\auth.js",["639"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Login.js",["640","641","642","643"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\Dashboard.js",["644"],"import React , {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getJobs } from '../../actions/jobs';\nimport { Applicant } from '../../actions/types';\nimport {Link} from 'react-router-dom';\nimport {loaduserusingtoken} from '../../actions/auth';\nimport TemplateRecruiter from './TemplateRecruiter';\nimport TemplateApplicant from './TemplateApplicant';\nimport {getApplications} from '../../actions/applications';\n\n\nconst Dashboard = ({ getJobs, auth, jobs: {jobs, loading, cjob},applications, getApplications, loaduserusingtoken}) => {\n    \n    useEffect(()=> {\n        loaduserusingtoken();\n        getJobs();\n        getApplications();\n      }, []);\n    return (<Fragment>\n            {loading || auth.loading || !auth.user || cjob!=null || (auth.user.who === 'Recruiter' && !jobs) || applications.loading ? <Fragment>Loading...</Fragment> : \n    <Fragment>\n\n        <h1>Вакансії</h1>\n            {auth.user && auth.user.who === Applicant ? \n            <Fragment>\n                <h3> \n                    <i></i>\n                    Кандидат вакансії\n                </h3>\n                <TemplateApplicant jobs={jobs}/>\n            </Fragment>\n            :\n            <Fragment>\n                <h3>\n                    <i></i>\n                    Рекрутер вакансії\n                </h3>\n                <Link to=\"/addjob\" className=\"btn btn-light\"\n                    ><i className=\"fas fa-user-circle text-primary\"></i>Додати нову вакансію </Link>\n                <TemplateRecruiter jobs={jobs}/>\n            </Fragment>\n            }\n    </Fragment>}\n    </Fragment>);\n};\n\nDashboard.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    jobs: PropTypes.object.isRequired,\n    loaduserusingtoken: PropTypes.func.isRequired,\n    applications: PropTypes.object.isRequired,\n    getApplications: PropTypes.func.isRequired,\n}\nconst mapStateToProps = (state) => ({\n    auth: state.authReducer,\n    jobs: state.jobs,\n    applications: state.applications, \n});\n\nexport default connect(mapStateToProps, { getJobs ,loaduserusingtoken, getApplications})(Dashboard);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\ViewJob.js",["645","646"],"import React, {Fragment, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId, editJob } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport DisplayRecruiterSide from './DisplayRecruiterSide';\nimport {getApplicationsById} from '../../actions/applications';\n\n\nconst ViewJob = ({match, jobs: {cjob, loading}, editJob, loadJobWithId, applicationjobs, getApplicationsById}) => {\n    const id = match.params.id;\n    useEffect(()=>{\n        loadJobWithId(id);\n        getApplicationsById(id);\n    },[]);\n    \n    if(!cjob || loading || applicationjobs.loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    const {\n        title,\n            applications,\n            positions,\n            deadline,\n            skills,\n            typeOfJob,\n            duration,\n            salary,\n            date_of_posting\n    } = cjob;\n    return (\n        <Fragment>\n        <h1>Робота</h1>\n        <table className='table'>\n    <tr>\n        <th>Назва</th>\n        <td>{title}</td>\n    </tr> \n    <tr>\n        <th>Кількість заявок</th>\n        <td>{applications}</td>\n    </tr>\n\n    <tr>\n        <th>Кількість посад</th>\n        <td>{positions}</td>\n    </tr>\n        <tr>\n            <th>Дата розміщення</th>\n            <td>{moment(date_of_posting).format('LLL')}</td>\n        </tr>\n    <tr>\n        <th>Дедлайн подачі заявки</th>\n        <td>{moment(deadline).format('LLL')}</td>\n    </tr>\n    <tr>\n        <th>Запрлата</th>\n        <td>{salary}</td>\n    </tr>\n    <tr>\n        <th>Навички</th>\n        <td>{skills}</td>\n    </tr>\n    <tr>\n        <th>Тип роботи</th>\n        <td>{typeOfJob}</td>\n    </tr>\n    <tr>\n        <th>Тривалість</th>\n        <td>{duration}</td>\n    </tr>\n    <tr>\n    <td><Link className='btn btn-primary' to={`/editjob/${id}`} >Редагувати вакансію</Link></td>\n    </tr>\n    \n</table>\n        <h2>Заявки на цю роботу</h2>\n\n        <DisplayRecruiterSide applicationjobs={applicationjobs.applications}/>\n        </Fragment>\n    )\n}\n\nViewJob.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    editJob: PropTypes.func.isRequired,\n    loadJobWithId: PropTypes.func.isRequired,\n    getApplicationsById: PropTypes.func.isRequired,\n    applicationjobs: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n    applicationjobs: state.applications\n});\n\nexport default connect(mapStateToProps, {editJob, loadJobWithId, getApplicationsById})(ViewJob);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\EditJob.js",["647"],"import React, {Fragment, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId, editJob } from '../../actions/jobs';\nimport {connect} from 'react-redux';\n\n\nconst EditJob = ({match, jobs: {cjob, loading}, editJob, loadJobWithId}) => {\n    const id = match.params.id;\n    // console.log(id);\n    const [formData, setFormData] = useState({\n            applications: '',\n            positions: '',\n            deadline: '',\n      });\n      \n    const {\n        applications,\n        positions,\n        deadline,\n    } = formData;\n    useEffect(()=>{\n        loadJobWithId(id);\n        setFormData({\n            applications: loading || !cjob || !cjob.applications ? '' : cjob.applications,\n            positions: loading || !cjob || !cjob.positions  ? '' : cjob.positions,\n            deadline: loading || !cjob || !cjob.deadline ? '' : cjob.deadline,\n        });\n    },[loading, loadJobWithId]);\n    \n    if(!cjob || loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    // console.log(deadline);\n        const onChange = (e) => {\n            // console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value});\n          };\n      \n        const onSubmit = (e) => {\n            e.preventDefault();\n            editJob({...formData,...{id}});\n          }\n    return (\n        <Fragment>\n        <h1>Редагувати відомості про роботу</h1>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <label for=\"id1\">Кількість кандидатів</label>\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of applications\" name=\"applications\" min='0' value={applications} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n        <label for=\"id1\">Кількість позицій</label>\n          <input type=\"number\" className=\"form-control\" placeholder=\"number of positions\" name=\"positions\" min='0' value={positions} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n        <label for=\"id1\">Дедлайн подачі заявок</label>\n          <input type=\"datetime-local\" className=\"form-control\" placeholder=\"deadline\" name=\"deadline\"  value={deadline} onChange={e => onChange(e)} required />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Редагувати вакансію\" />\n      </form>\n        </Fragment>\n    )\n}\n\nEditJob.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    editJob: PropTypes.func.isRequired,\n    loadJobWithId: PropTypes.array,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n});\n\nexport default connect(mapStateToProps, {editJob, loadJobWithId})(EditJob);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Register.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddSOP.js",["648","649","650","651","652","653","654","655","656","657","658"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Landing.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddJob.js",["659"],"import React ,{useState, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addNewJob} from '../../actions/jobs';\nimport {Link} from 'react-router-dom';\nimport { setalert } from '../../actions/alert';\n\nconst AddJob = ({addNewJob, setalert}) => {\n    const [formData, setFormData] = useState({\n        title: '',\n            applications: '',\n            positions: '',\n            skills: '',\n            typeOfJob: '',\n            duration: '',\n            salary: '',\n            deadline: ''\n      });\n    const {title,\n        applications,\n        positions,\n        deadline,\n        skills,\n        typeOfJob,\n        duration,\n        salary,} = formData;\n        const onChange = (e) => {\n            // console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value});\n          };\n      \n          const onSubmit = async (e) => {\n            e.preventDefault();\n\n            if(typeOfJob !== 'Full-time' && typeOfJob!=='Part-time' && typeOfJob!=='Work from Home'){\n              setalert('Please select type of job', 'danger');\n            }\n            else{\n              addNewJob(formData);\n            }\n            \n          }\n    return (\n        <Fragment>\n        <h1>Додати нову роботу</h1>\n      <form onSubmit={e => onSubmit(e)}>\n      \n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Назва\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"Кількість заявок\" name=\"applications\" min='0' value={applications} onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"Кількість посад\" name=\"positions\" min='0' value={positions} onChange={e => onChange(e)} required />\n        </div>\n\n        {/* <div className=\"form-group\">\n          <input type=\"date\" className=\"form-control\" placeholder=\"date of posting\" max={Date.now} name=\"date_of_posting\"  value={date_of_posting} onChange={e => onChange(e)} required />\n        </div> */}\n\n        <div className=\"form-group\">\n          <input type=\"datetime-local\" className=\"form-control\" placeholder=\"deadline\" min={Date.now} name=\"deadline\"  value={deadline} onChange={e => onChange(e)} required />\n        </div>\n\n        {/* <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"day of deadline\" name=\"day\" value={day} max='31' min='1' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"month of deadline\" name=\"month\" value={month} min='1' max='12' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"year of deadline\" name=\"year\" value={year} min='0' max='2021' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"hour of deadline\" name=\"hour\" value={hour} min='0' max='23' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"minute of deadline\" name=\"minute\" value={minute} min='0' max='59' onChange={e => onChange(e)} required />\n        </div> */}\n\n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Навички\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <select class=\"custom-select\" name=\"typeOfJob\" value={typeOfJob} onChange={e => onChange(e)} required>\n       <option selected>Тип роботи</option>\n        <option value=\"Full-time\">Повний день</option>\n        <option value=\"Part-time\">Неповний робочий день</option>\n        <option value=\"Work from Home\">Працювати вдома</option>\n        </select>\n        </div>\n        \n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"Тривалість\" name=\"duration\" value={duration} min='1' max='6' onChange={e => onChange(e)} required />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"number\" className=\"form-control\" placeholder=\"Зарплата\" name=\"salary\" value={salary} onChange={e => onChange(e)} min='0' required />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Додати нову роботу\" />\n      </form>\n        </Fragment>\n    )\n}\n\nAddJob.propTypes = {\n    addNewJob: PropTypes.func.isRequired,\n    setalert: PropTypes.func.isRequired,\n}\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(mapStateToProps, {addNewJob, setalert})(AddJob);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Alert.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\MyApplications.js",["660","661","662"],"import React , {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getJobs } from '../../actions/jobs';\nimport { Applicant } from '../../actions/types';\nimport {Link} from 'react-router-dom';\nimport {loaduserusingtoken} from '../../actions/auth';\nimport {getApplications} from '../../actions/applications';\nimport DisplayApplications from './DisplayApplications';\n\nconst MyApplications = ({ auth,applications, getApplications, loaduserusingtoken}) => {\n    \n    useEffect(()=> {\n        loaduserusingtoken();\n        getApplications();\n      }, []);\n    return (<Fragment>\n            {auth.loading || !auth.user || applications.loading ? <Fragment>Loading...</Fragment> : \n    <Fragment>\n\n        <h1>Мої найми</h1>\n            <DisplayApplications applicationjobs={applications.applications}/>\n    </Fragment>}\n    </Fragment>);\n};\n\nMyApplications.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    jobs: PropTypes.object.isRequired,\n    loaduserusingtoken: PropTypes.func.isRequired,\n    applications: PropTypes.object.isRequired,\n    getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.authReducer,\n    jobs: state.jobs,\n    applications: state.applications, \n});\n\nexport default connect(mapStateToProps, { getJobs ,loaduserusingtoken, getApplications})(MyApplications);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\Profile.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\EditProfile.js",["663","664"],"import {connect} from 'react-redux';\nimport React, {useState, Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {updateProfile, getUserProfile} from '../../actions/profile';\nimport { Applicant } from '../../actions/types';\n\n\nconst EditProfile = ({updateProfile, auth, profile: {profile, loading}, getUserProfile}) => {\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        skills: '',\n        who: '',\n        contactnumber: '',\n        bio: '',\n        email: ''\n    });\n    const  {\n        email,\n        name,\n        skills,\n        who,\n        contactnumber,\n        bio\n    } = formData;\n\n      useEffect(() => {\n        getUserProfile();\n        setFormData({\n          name: loading || !profile.name  ? '' : profile.name,\n          skills: loading || !profile.skills  ? '' : profile.skills,\n          who: loading || !profile.who  ? '' : profile.who,\n          contactnumber: loading || !profile.contactnumber  ? '' : profile.contactnumber,\n          bio: loading || !profile.bio  ? '' : profile.bio,\n          email: loading || !profile.email  ? '' : profile.email,\n        });\n    },[loading, getUserProfile]);\n    \n    if(auth.loading || !auth.user || loading || !profile)\n    {\n      return (<Fragment>Loading...</Fragment>)\n    }\n    // setFormData({who: auth.who});\n    const onChange = (e) => {\n        // console.log(e.target.value);\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setFormData({ ...formData, email: auth.user.email});\n        updateProfile(formData, {who});\n    };\n    \n    return (\n        <Fragment>\n        <h1>Редагувати профіль</h1>\n      <p><i className=\"fas fa-user\"></i> Відредагуйте свій профіль</p>\n      <form onSubmit={e => onSubmit(e)}>\n        \n        <div className=\"form-group\">\n        <label for=\"nameid\">Посада</label>\n          <input id=\"nameid\" type=\"name\" className=\"form-control\" placeholder=\"*Name\" name=\"name\" value={name} onChange={e => onChange(e)} required/>\n        </div>\n        {auth.user.who === Applicant ? <Fragment>\n          <div className=\"form-group\">\n        <label for=\"skillid\">Навички</label>\n          <input id=\"skillid\" type=\"skills\" className=\"form-control\" placeholder=\"Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n        </div>  \n        </Fragment>: \n        <Fragment>\n          <div className=\"form-group\">\n        <label for=\"contactid\">Контактний номер</label>\n          <input id=\"contactid\" type=\"number\" className=\"form-control\" placeholder=\"*Mobile Number\" name=\"contactnumber\" value={contactnumber} onChange={e => onChange(e)} required/>\n        </div>\n        <div class=\"form-group\">\n      <label for=\"Textarea1\">Біографія</label>\n      <textarea class=\"form-control\" id=\"area1\" rows=\"3\" name=\"bio\" value={bio} onChange={e => onChange(e)} required></textarea>\n    </div>\n        </Fragment>\n        }\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Оновити профіль\" />\n      </form>\n      </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n\n    updateProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    getUserProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state =>({\n    auth: state.authReducer,\n    profile: state.profile,\n});\nexport default connect(mapStateToProps, {updateProfile, getUserProfile})(EditProfile); \n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AcceptedApplications.js",["665","666","667"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus, getApplications} from '../../actions/applications';\n\n\nconst AcceptedApplications = ({loading , applicationjobs, changeStatus, getApplications}) => {\n    useEffect(()=>{\n        getApplications();\n    },[]);\n    // console.log(applicationjobs);\n    if(loading){\n        return <Fragment><p>loading...</p></Fragment>\n    }\n    if(applicationjobs==null){\n        return <h2>Кандидати рекрутера</h2>\n    }\n    applicationjobs =  applicationjobs.filter((val) => val.status === 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        typeOfJob,\n        title,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Посада заявника</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Дата приєднання</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Тип роботи</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{title ? \n<Fragment>\n    <tr>\n        <th>Назва роботи</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n<tr>\n    <td>\n        <button type=\"submit\" className='btn btn-warning'>Оцінити</button>\n    </td>\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Кандидати рекрутера</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nAcceptedApplications.propTypes = {\n    applicationjobs: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n    loading: PropTypes.bool,\n    getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationjobs: state.applications.applications,\n    loading: state.applications.loading\n});\nexport default connect(mapStateToProps, {changeStatus, getApplications})(AcceptedApplications\n);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\AddEducation.js",["668","669","670"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\routes\\PrivateRoute\\Privateroute.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\types.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\profile.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\alert.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\applications.js",["671"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateApplicant.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateRecruiter.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\jobs.js",["672","673","674"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayRecruiterSide.js",["675","676"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus} from '../../actions/applications';\n\n\nconst DisplayRecruiterSide = ({applicationjobs, changeStatus}) => {\n    \n    applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        dateOfApplication,\n        sop,\n        status,\n        job_id,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Посада заявника</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{skills ? \n<Fragment>\n    <tr>\n        <th>Навички заявника</th>\n        <td>{skills}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfApplication ? \n<Fragment>\n    <tr>\n        <th>Дата подачі заявки</th>\n        <td>{dateOfApplication}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{sop ? \n<Fragment>\n    <tr>\n        <th>Повідомлення від кандидата</th>\n        <td>{sop}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Статус заявки</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n    <td>\n    \n    {\n    status === 'Applied' ? \n    <Fragment>\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Короткий список</button>\n    </Fragment>\n    :\n    (\n        status === 'Shortlist' ? \n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Прийняти</button>\n        :\n        <Fragment/>\n    )\n    }    \n    </td>\n    {status !== 'Accepted' ? <td>\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Відхилити</button>\n    </td>\n    :\n    <Fragment/>\n}\n    \n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            \n            {code}\n        </Fragment>\n    );\n}\n\nDisplayRecruiterSide.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, {changeStatus})(DisplayRecruiterSide\n);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForProfile.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForEducation.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayApplications.js",["677","678"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\n\n\nconst DisplayApplications = ({applicationjobs}) => {\n    const code = applicationjobs.map(({\n            title,\n            dateOfJoining,\n            salary,\n            recruiter: {name},\n            status,\n            typeOfJob,\n            _id\n        }) => <table className='table' key={_id}>\n        {title ? \n<Fragment>\n    <tr>\n        <th>Назва</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{name ? \n<Fragment>\n    <tr>\n        <th>Ім'я рекрутера</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Дата найму</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{salary ? \n<Fragment>\n    <tr>\n        <th>Зарплата</th>\n        <td>{salary}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Тип роботи</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Статус заявки</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n<input type=\"submit\" className=\"btn btn-warning\" value=\"Оцініть роботу\" />\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Робота</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nDisplayApplications.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, null)(DisplayApplications\n);\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\index.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\jobs.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\profile.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\alert.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\applications.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\reducers\\authReducer.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\HomePage\\HomePage.js",["679","680","681","682","683","684","685","686","687","688","689"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport io from \"socket.io-client\";\r\nimport { Redirect } from \"react-router\";\r\nimport \"../HomePage/HomePage.css\";\r\nimport \"../ChatRoom/ChatRoom.css\";\r\nimport addIcon from '../../../images/add-icon.jpg';\r\nimport { joinChatRoom, getChatRooms } from \"../../../utils/requests\";\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../../constants/constants';\r\nconst socket = io(API_BASE_URL);\r\nconst getChatRoomId = () => {\r\n  return localStorage.getItem(\"chatRoomId\");\r\n  //return JSON.parse(localStorage.getItem(\"chatRoomId\"));\r\n};\r\n\r\nfunction HomePage() {\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [redirectLogin, setRedirectLogin] = useState(false);\r\n  const [sppiner, setSpinner] = useState(false);\r\n  const [redirectCreateRoom, setRedirectCreateRoom] = useState(false);\r\n  \r\n  const getRooms = async () => {\r\n    setInitialized(true);\r\n    setSpinner(true)\r\n    const response = await getChatRooms();\r\n    console.log(\"getRooms response home.j\")\r\n    console.log(response)\r\n    setRooms(response.data);\r\n    setSpinner(false)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      getRooms();\r\n    }\r\n  },[isLoading]);\r\n    // [] means like componentDidMount\r\n\r\n  async function createRoomHandler(){\r\n    if(!localStorage.getItem(ACCESS_TOKEN_NAME))\r\n      setRedirectLogin(true)\r\n    console.log(\"createRoomHandler clicked\")\r\n    setRedirectCreateRoom(true);\r\n  }\r\n\r\n  async function handleClick(id,name,i){\r\n    if(!localStorage.getItem(ACCESS_TOKEN_NAME))\r\n      setRedirectLogin(true)\r\n\r\n    setLoading(true);\r\n    localStorage.setItem(\"chatRoomId\", id);\r\n    localStorage.setItem(\"chatRoomName\", name);\r\n    let token = localStorage.getItem(ACCESS_TOKEN_NAME)\r\n    try{\r\n      await joinChatRoom(id, token);\r\n      setRedirect(true);\r\n    }catch(err){\r\n      console.log(\"joinChatRoom error\")\r\n      console.log(err)\r\n      localStorage.removeItem(ACCESS_TOKEN_NAME)\r\n      setLoading(false);\r\n      setRedirectLogin(true)\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/chatroom\" />;\r\n  }\r\n  if(redirectLogin){\r\n    return <Redirect to='/login' />\r\n  }\r\n  if(redirectCreateRoom){\r\n    return <Redirect to='/createroom' />\r\n  }\r\n  return (\r\n\r\n    <div className=\"home-page\">\r\n\r\n        <div className=\"container-fluid h-100 mt-5\">\r\n          <div className=\"row justify-content-center h-100\">\r\n            <div className=\"col-md-4 col-xl-3 chat\">\r\n                <div className=\"card mb-sm-3 mb-md-0 contacts_card\">\r\n                    <div className=\"card-header\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" placeholder=\"Search...\" name=\"\" className=\"form-control search\"/>\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text search_btn\"><i className=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body contacts_body\">\r\n\r\n                     <div className=\"text-center\">\r\n                        {sppiner ?  \r\n                        <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            />\r\n                        : ''}\r\n                    </div>\r\n\r\n                        <ul className=\"contacts\">\r\n                            {rooms.map((room, i)=>{\r\n                            return(\r\n                            <li className={getChatRoomId() == room._id ? ' active-chat' : ' not-active-chat' } key={i}> \r\n                            <div className=\"d-flex bd-highlight\">\r\n                                <div className=\"img_cont\">\r\n                                    <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img\"/>\r\n                                </div>\r\n                                <div className=\"user_info\">\r\n                                    <span>{room.name}</span>\r\n                                    <p>\r\n                                        <Button\r\n                                            className=\" ml-2\"\r\n                                            variant=\"dark\"\r\n                                            size=\"sm\"\r\n                                            disabled={isLoading}\r\n                                            onClick={() => handleClick(room._id, room.name,  i)}\r\n                                        >\r\n                                        {isLoading ? 'Joining…' : 'Join Room'}\r\n                                        </Button>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            </li>\r\n                            )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n\r\n                        <div className=\"text-center\">\r\n                          <img onClick={() => createRoomHandler() } className=\"rounded-circle create-room\" src={addIcon}  alt=\"Create Chat Room\" width=\"60\" height=\"60\" />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default HomePage;","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\utils\\requests.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\constants\\constants.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\CreateRoom\\CreateRoom.js",["690","691","692","693","694"],"import React, { useEffect, useState }  from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport { Redirect } from \"react-router\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./CreateRoom.css\";\r\nimport {createRoomApi, joinChatRoom } from \"../../../utils/requests\";\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../../constants/constants';\r\n\r\nconst schema = yup.object({\r\n\tname: yup.string().required(\"Room name is required\"),\r\n});\r\n\r\nfunction CreateRoom(){\r\n\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\tconst [redirectLogin, setRedirectLogin] = useState(false);\r\n\tconst [sppiner, setSpinner] = useState(false);\r\n\t\r\n\tconst [state , setState] = useState({\r\n        successMessage: null,\r\n        errorMessage: null,\r\n    });\r\n\r\n    const handleSubmit = async evt => {\r\n    \tsetSpinner(true)\r\n    \tconsole.log(\"handleSubmit\")\r\n    \tconsole.log(evt)\r\n    \tconst isValid = await schema.validate(evt);\r\n\t    if (!isValid) {\r\n\t      console.log(\"not Valid data in handleSubmit function\")\r\n\t      return;\r\n\t    }else{\r\n\t      console.log(\"valid data\")\r\n\t    }\r\n\r\n\t    let token = localStorage.getItem(ACCESS_TOKEN_NAME)\r\n    \ttry{\r\n    \t\tconst response = await createRoomApi(evt.name, token);\r\n    \t\tconsole.log(response.data._id)\r\n    \t\tsetState({successMessage : 'Room created, redirecting you to room chat..'})\r\n    \t \r\n    \t\tlocalStorage.setItem(\"chatRoomId\", response.data._id);\r\n    \t\tlocalStorage.setItem(\"chatRoomName\", response.data.name);\r\n    \t\tsetSpinner(false)\r\n    \t\tsetRedirect(true);\r\n\r\n    \t }catch(err){\r\n    \t \tsetSpinner(false)\r\n    \t \tconsole.log(\"create room err\")\r\n    \t \tconsole.log(err)\r\n    \t \tsetState({errorMessage : 'Room not created, choose unique room name and try again.'})\r\n    \t }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\t    if(! localStorage.getItem(ACCESS_TOKEN_NAME) ){\r\n\t      setRedirectLogin(true)\r\n\t    }\r\n\t});\r\n\r\n\r\n\tif(redirect) {\r\n    \treturn (<Redirect to=\"/chatroom\" />);\r\n\t}\r\n\tif(redirectLogin){\r\n\t\treturn (<Redirect to='/login' />);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t\r\n    \t<div className=\"container-fluid h-100  mt-5\">\r\n        \t<div className=\"row justify-content-center h-100\">\r\n\r\n\t        \t<div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n\t                {state.successMessage}\r\n\t            </div>\r\n\r\n\t            <div className=\"alert alert-danger mt-2\" style={{display: state.errorMessage ? 'block' : 'none' }} role=\"alert\">\r\n\t                {state.errorMessage}\r\n\t            </div>\r\n\t        </div>\r\n\r\n\t        <div className=\"row justify-content-center h-100\">\r\n\r\n        \t\t<Formik validationSchema={schema} onSubmit={handleSubmit}\r\n                          initialValues={{name:''}}\r\n                          >\r\n                          {({\r\n                          handleSubmit,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          values,\r\n                          touched,\r\n                          isInvalid,\r\n                          errors,\r\n                          }) => (\r\n                          <Form noValidate onSubmit={handleSubmit}>\r\n                              <Form.Row>\r\n                                  <Form.Group as={Col} md=\"12\" controlId=\"handle\">\r\n                                      <Form.Label>Room Name?</Form.Label>\r\n                                      <Form.Control\r\n                                      type=\"text\"\r\n                                      name=\"name\"\r\n                                      placeholder=\"My Awesome Room\"\r\n                                      value={values.name || \"\"}\r\n                                      onChange={handleChange}\r\n                                      isInvalid={touched.message && errors.message}\r\n                                      />\r\n                                      <Form.Control.Feedback type=\"invalid\">\r\n                                          {errors.message}\r\n                                      </Form.Control.Feedback>\r\n                                  </Form.Group>\r\n                              </Form.Row>\r\n                              <Button className=\"btn btn-secondary\" type=\"submit\" style={{ marginRight: \"10px\" }}>Create Room</Button>\r\n                          </Form>\r\n                          )}\r\n                </Formik>\r\n\r\n        \t</div>\r\n        </div>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default CreateRoom;","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoom\\ChatRoom.js",["695","696","697","698","699","700","701","702","703","704","705","706","707","708"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport * as yup from \"yup\";\r\nimport io from \"socket.io-client\";\r\nimport { Redirect } from \"react-router\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport moment from \"moment\";\r\nimport \"../ChatRoom/ChatRoom.css\";\r\nimport {joinChatRoom, getRoomMessages, getChatRooms, getRoomDetail } from \"../../../utils/requests\";\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../../constants/constants';\r\nlet token = localStorage.getItem(ACCESS_TOKEN_NAME)\r\nconst socket = io(API_BASE_URL+'?authToken='+token);\r\nconst getChatRoomId = () => {\r\n  return localStorage.getItem(\"chatRoomId\");\r\n  //return JSON.parse(localStorage.getItem(\"chatRoomId\"));\r\n};\r\nconst getChatRoomName = () => {\r\n  return localStorage.getItem('chatRoomName');\r\n};\r\nconst getCurrentUserId = () => {\r\n  return localStorage.getItem('userId');\r\n}\r\nconst schema = yup.object({\r\nmessage: yup.string().required(\"Message is required\"),\r\n});\r\nfunction ChatRoomPage() {\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectLogin, setRedirectLogin] = useState(false);\r\n  const [sppiner, setSpinner] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [showActionDropdown, setShowActionDropdown] = useState('hide');\r\n  \r\n  function showActionDropdownHandler(){\r\n    if(showActionDropdown=='hide')\r\n    setShowActionDropdown('show')\r\n    else\r\n    setShowActionDropdown('hide')\r\n  }\r\n\r\n  async function handleClick(id,name,i){\r\n    console.log(\"handleClick\")\r\n    if(!localStorage.getItem(ACCESS_TOKEN_NAME))\r\n      setRedirectLogin(true)\r\n\r\n    localStorage.setItem(\"chatRoomId\", id);\r\n    localStorage.setItem(\"chatRoomName\", name);\r\n    let token = localStorage.getItem(ACCESS_TOKEN_NAME)\r\n\r\n    try{\r\n      console.log(\"joinChatRoom\")\r\n      await joinChatRoom(id, token);\r\n      setRedirect(true);\r\n\r\n    }catch(err){\r\n      localStorage.removeItem(ACCESS_TOKEN_NAME)\r\n      setRedirectLogin(true)\r\n      console.log(\"joinChatRoom error\")\r\n      console.log(err)\r\n    }\r\n  }\r\n  \r\n  const handleSubmit = async evt => {\r\n    setSpinner(true)\r\n    console.log(\"handleSubmit\")\r\n    console.log(evt)\r\n    const isValid = await schema.validate(evt);\r\n    if (!isValid) {\r\n      console.log(\"not Valid data in handleSubmit function\")\r\n      return;\r\n    }else{\r\n      console.log(\"valid data\")\r\n    }\r\n    console.log(\"handleSubmit evt\")\r\n    console.log(evt)\r\n    const data = Object.assign({}, evt);\r\n    data.roomId = getChatRoomId();\r\n    data.message = evt.message;\r\n    socket.emit(\"message\", data);\r\n    evt.message = '';\r\n  };\r\n\r\n  const connectToRoom = () => {\r\n\r\n    socket.on(\"connect\", data => {\r\n      console.log(\"socke on connect\")\r\n      console.log(data)\r\n      socket.emit(\"join\", getChatRoomId());\r\n    });\r\n\r\n    socket.on(\"newMessage\", data => {\r\n      getMessages();\r\n    });\r\n\r\n    setInitialized(true);\r\n\r\n  };\r\n  const getMessages = async () => {\r\n    setSpinner(true)\r\n    const response = await getRoomMessages(getChatRoomId());\r\n    console.log(\"getMessages() response\")\r\n    console.log(response.data)\r\n    setSpinner(false)\r\n    setMessages(response.data);\r\n    setInitialized(true);\r\n  };\r\n\r\n  const getRooms = async () => {\r\n    const response = await getChatRooms();\r\n    setRooms(response.data);\r\n    setInitialized(true);\r\n  };\r\n\r\n  const getChatRoomDetail = async () => {\r\n    let token = localStorage.getItem(ACCESS_TOKEN_NAME)\r\n    const response = await getRoomDetail(getChatRoomId(), token);\r\n    setInitialized(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(! localStorage.getItem(ACCESS_TOKEN_NAME) ){\r\n      setRedirectLogin(true)\r\n    }\r\n    if (!initialized) {\r\n      getChatRoomDetail()\r\n      connectToRoom();\r\n      getMessages();\r\n      getRooms();\r\n    }\r\n  });\r\n\r\n  if (redirect) {\r\n    return (<Redirect to=\"/chatroom\" />);\r\n  }\r\n  if(redirectLogin){\r\n    return (<Redirect to='/login' />);\r\n  }\r\nreturn (\r\n  <div>\r\n    <div className=\"container-fluid h-100  mt-5\">\r\n        <div className=\"row justify-content-center h-100\">\r\n            {/*\r\n            <div className=\"col-md-4 col-xl-3 chat\">\r\n                <div className=\"card mb-sm-3 mb-md-0 contacts_card\">\r\n                    <div className=\"card-header\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" placeholder=\"Search...\" name=\"\" className=\"form-control search\"/>\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text search_btn\"><i className=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body contacts_body\">\r\n                        <ul className=\"contacts\">\r\n                            {rooms.map((room, i)=>{\r\n                            return(\r\n                            <li className={getChatRoomId() == room._id ? ' active-chat' : ' not-active-chat' } key={i}> \r\n                            <div className=\"d-flex bd-highlight\">\r\n                                <div className=\"img_cont\">\r\n                                    <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img\"/>\r\n                                </div>\r\n                                <div className=\"user_info\">\r\n                                    <span>{room.name}</span>\r\n                                    <p>\r\n                                        <Button\r\n                                            className=\" ml-2\"\r\n                                            variant=\"dark\"\r\n                                            size=\"sm\"\r\n                                            disabled={isLoading}\r\n                                            onClick={() => handleClick(room._id, room.name,  i)}\r\n                                        >\r\n                                        {isLoading ? 'Joining…' : 'Join Room'}\r\n                                        </Button>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            </li>\r\n                            )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"card-footer\"></div>\r\n                </div>\r\n            </div>\r\n            */}\r\n\r\n            <div className=\"col-md-8 col-xl-6 chat\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header msg_head\">\r\n                        <div className=\"d-flex bd-highlight\">\r\n                            {/*<div className=\"img_cont\">\r\n                                <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img\"/>\r\n                                <span className=\"online_icon\"></span>\r\n                            </div>*/}\r\n                            <div className=\"user_info\">\r\n                                <span>Chat Room: {getChatRoomName()}</span>\r\n                                <p>1767 Messages</p>\r\n                            </div>\r\n                            <div className=\"video_cam\">\r\n                                <span><i className=\"fas fa-video\"></i></span>\r\n                                <span><i className=\"fas fa-phone\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <span id=\"action_menu_btn\">\r\n                        <button onClick={ () => showActionDropdownHandler() } className=\"btn btn-sm btn-light\" type=\"button\">\r\n                        Actions\r\n                        </button>\r\n                        <i className=\"fas fa-ellipsis-v\"></i>\r\n                        </span>\r\n                        <div className={`action_menu ${showActionDropdown}`}>\r\n                        <ul>\r\n                            <li><i className=\"fas fa-user-circle\"></i> View profile</li>\r\n                            <li><i className=\"fas fa-users\"></i> Add to close friends</li>\r\n                            <li><i className=\"fas fa-plus\"></i> Add to group</li>\r\n                            <li><i className=\"fas fa-ban\"></i> Block</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card-body msg_card_body\">\r\n                    <div className=\"text-center\">\r\n                        {sppiner ?  \r\n                        <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            />\r\n                        : ''}\r\n                    </div>\r\n                    {messages.map((m, i) => {\r\n                      return(\r\n                          <div className=\"d-flex justify-content-start mb-4\" key={i}>\r\n                              <div className=\"img_cont_msg\">\r\n                                  {/* <span className={m.author.is_online==true ? 'green-dot' : 'offline-dot'}></span> */}\r\n                                  <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img_msg\"/>\r\n                                  {/*<span className={m.author.is_online ? 'online_icon' : 'online_icon offline' }></span> */}\r\n                              </div>\r\n                              <div className={getCurrentUserId() == m.author_id ? ' msg_cotainer_send' : ' msg_cotainer' }>\r\n                                {m.author.name}: {m.message}\r\n                                <span className=\"msg_time\">{moment(m.created_at).format('YYYY-MM-DD HH:mm')}</span>\r\n                              </div>\r\n                          </div>\r\n                      )\r\n                    })}\r\n                  <div className=\"card-footer\">\r\n                      <Formik validationSchema={schema} onSubmit={handleSubmit}\r\n                          initialValues={{author:'xyz',message:''}}\r\n                          >\r\n                          {({\r\n                          handleSubmit,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          values,\r\n                          touched,\r\n                          isInvalid,\r\n                          errors,\r\n                          }) => (\r\n                          <Form noValidate onSubmit={handleSubmit}>\r\n                              <Form.Row>\r\n                                  <Form.Group as={Col} md=\"12\" controlId=\"handle\">\r\n                                      <Form.Label>Message</Form.Label>\r\n                                      <Form.Control\r\n                                      type=\"text\"\r\n                                      name=\"message\"\r\n                                      placeholder=\"Message\"\r\n                                      value={values.message || \"\"}\r\n                                      onChange={handleChange}\r\n                                      isInvalid={touched.message && errors.message}\r\n                                      />\r\n                                      <Form.Control.Feedback type=\"invalid\">\r\n                                          {errors.message}\r\n                                      </Form.Control.Feedback>\r\n                                  </Form.Group>\r\n                              </Form.Row>\r\n                          </Form>\r\n                          )}\r\n                      </Formik>\r\n                  </div>\r\n              </div>\r\n\r\n         </div>\r\n       \r\n       </div>\r\n     \r\n     </div>\r\n   \r\n   </div>\r\n  </div>\r\n);\r\n}\r\nexport default ChatRoomPage;","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoomPage\\ChatRoomPage.js",["709"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport io from \"socket.io-client\";\r\nimport \"../ChatRoomPage/ChatRoomPage.css\";\r\nimport { getChatRoomMessages, getChatRooms } from \"../../../utils/requests\";\r\nconst SOCKET_IO_URL = \"http://localhost:4000\";\r\nconst socket = io(SOCKET_IO_URL);\r\nconst getChatData = () => {\r\n  return JSON.parse(localStorage.getItem(\"chatData\"));\r\n};\r\nconst schema = yup.object({\r\n  message: yup.string().required(\"Message is required\"),\r\n});\r\nfunction ChatRoomPage() {\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  const handleSubmit = async evt => {\r\n    const isValid = await schema.validate(evt);\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n    const data = Object.assign({}, evt);\r\n    data.chatRoomName = getChatData().chatRoomName;\r\n    data.author = getChatData().handle;\r\n    data.message = evt.message;\r\n    socket.emit(\"message\", data);\r\n  };\r\n  const connectToRoom = () => {\r\n    socket.on(\"connect\", data => {\r\n      socket.emit(\"join\", getChatData().chatRoomName);\r\n    });\r\n    socket.on(\"newMessage\", data => {\r\n      getMessages();\r\n    });\r\n    setInitialized(true);\r\n  };\r\n  const getMessages = async () => {\r\n    const response = await getChatRoomMessages(getChatData().chatRoomName);\r\n    setMessages(response.data);\r\n    setInitialized(true);\r\n  };\r\n  const getRooms = async () => {\r\n    const response = await getChatRooms();\r\n    setRooms(response.data);\r\n    setInitialized(true);\r\n  };\r\n  useEffect(() => {\r\n   if (!initialized) {\r\n      getMessages();\r\n      connectToRoom();\r\n      getRooms();\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"chat-room-page\">\r\n      <h1>\r\n        Chat Room: {getChatData().chatRoomName}. Chat Handle:{\" \"}\r\n        {getChatData().handle}\r\n      </h1>\r\n      <div className=\"chat-box\">\r\n        {messages.map((m, i) => {\r\n          return (\r\n            <div className=\"col-12\" key={i}>\r\n              <div className=\"row\">\r\n                <div className=\"col-2\">{m.author}</div>\r\n                <div className=\"col\">{m.message}</div>\r\n                <div className=\"col-3\">{m.createdAt}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Formik validationSchema={schema} onSubmit={handleSubmit}>\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isInvalid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"12\" controlId=\"handle\">\r\n                <Form.Label>Message</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"message\"\r\n                  placeholder=\"Message\"\r\n                  value={values.message || \"\"}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.message && errors.message}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.message}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button type=\"submit\" style={{ marginRight: \"10px\" }}>\r\n              Send\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\nexport default ChatRoomPage;","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\salary\\salaryChart.js",[],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\salary\\SalaryChart.js",["710","711","712","713","714","715","716","717","718","719","720"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\AllApplicants.js",["721","722"],"import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {} from '../../actions/jobs';\r\nimport moment from \"moment\";\r\nimport {Link} from 'react-router-dom';\r\n// import deleteJob from '../../actions/jobs';\r\nimport {changeStatus} from '../../actions/applications';\r\n\r\n\r\nconst AllApplicants = ({applicationjobs, changeStatus}) => {\r\n    \r\n    applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\r\n    const code = applicationjobs.map(({\r\n        applicant: {name,skills},\r\n        dateOfJoining,\r\n        dateOfApplication,\r\n        sop,\r\n        status,\r\n        job_id,\r\n        _id\r\n        }) => <table className='table' key={_id}>\r\n        \r\n{name ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Name Of Applicant</th>\r\n        <td>{name}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{skills ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Skills of Applicant</th>\r\n        <td>{skills}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{dateOfApplication ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Date Of Application</th>\r\n        <td>{dateOfApplication}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{sop ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Statement Of Purpose</th>\r\n        <td>{sop}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{status ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Stage of application</th>\r\n        <td>{status}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n    \r\n<tr>\r\n    <td>\r\n    \r\n    {\r\n    status === 'Applied' ? \r\n    <Fragment>\r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Короткий список</button>\r\n    </Fragment>\r\n    :\r\n    (\r\n        status === 'Shortlist' ? \r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Прийняти</button>\r\n        :\r\n        <Fragment/>\r\n    )\r\n    }    \r\n    </td>\r\n    {status !== 'Accepted' ? <td>\r\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Відхилити</button>\r\n    </td>\r\n    :\r\n    <Fragment/>\r\n}\r\n    \r\n    </tr>\r\n\r\n</table>)\r\n    return (\r\n        <Fragment>\r\n            \r\n            {code}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nAllApplicants.propTypes = {\r\n    applicationsjob: PropTypes.array.isRequired,\r\n    changeStatus: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    applicationsjob: state.applications.applications\r\n});\r\nexport default connect(mapStateToProps, {changeStatus})(AllApplicants\r\n);\r\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\DashboardApplicants.js",["723","724"],"import React , {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getApplications } from '../../actions/applications';\r\nimport { Recruiter } from '../../actions/types';\r\nimport {Link} from 'react-router-dom';\r\nimport {loaduserusingtoken} from '../../actions/auth';\r\nimport AllApplicants from '../applicants/AllApplicants';\r\n\r\n\r\n\r\nconst DashboardApplicants = ({getApplications,  auth, applicationjobs,loaduserusingtoken}) => {\r\n    \r\n    useEffect(()=> {\r\n        loaduserusingtoken();\r\n        getApplications();\r\n        \r\n      }, []);\r\n    return (<Fragment>\r\n           \r\n\r\n        <h1>Dashboard</h1>\r\n            {auth.user && auth.user.who === Recruiter ? \r\n            <Fragment>\r\n                <h3> \r\n                    <i className=\"fas fa-user\"></i>\r\n                    All applicants\r\n                </h3>\r\n                <AllApplicants applicationjobs={applicationjobs}/>\r\n            </Fragment>\r\n            :\r\n            <Fragment>\r\n               \r\n            </Fragment>\r\n            }\r\n    \r\n    </Fragment>);\r\n};\r\n\r\nDashboardApplicants.propTypes = {\r\n   \r\n    auth: PropTypes.object.isRequired,\r\n    applicationjobs: PropTypes.object.isRequired,\r\n    loaduserusingtoken: PropTypes.func.isRequired,\r\n    getApplications: PropTypes.func.isRequired,\r\n    \r\n   \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.authReducer,\r\n    applicationjobs: state.applicationjobs,\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, {loaduserusingtoken, getApplications})(DashboardApplicants);\r\n","D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\NavM.js",["725"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\components\\Footer\\Footer.js",["726"],"D:\\0Всі версії\\Job-Portal-Redux\\frontend\\src\\actions\\filters.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\index.js",[],["727","728"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\App.js",["729"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\store.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\auth.js",["730"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\utils\\setdefaultxauth.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Login.js",["731","732","733","734"],"import React from 'react';\nimport {Fragment , useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginuser } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nimport axios from 'axios';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/constants';\nimport { withRouter} from \"react-router-dom\";\nimport \"../../static/style.css\"\n\nexport const Login = ({loginuser, isUserVerified, user}) => {\n\n    const [logindata, setlogindata] = useState({\n        email: '',\n        password: ''\n      });\n    const {email, password} = logindata;\n\n    const onChange = (e) => {\n      // console.log(e.target.value);\n      setlogindata({ ...logindata, [e.target.name]: e.target.value});\n    };\n\n    const onSubmit = async (e) => {\n      e.preventDefault();\n      loginuser({email, password});\n    }  \n    if(isUserVerified && user)\n    {\n      return (\n        <Redirect to='/dashboard'></Redirect>\n      )\n    }\n    return (\n        <Fragment>\n    <main>\n\n        <section class=\"right-container\">\n        <div class=\"content\">                 \n        <h3  class=\"sign-in-text\">Увійти</h3>\n      <p><i></i> Увійдіть у свій обліковий запис</p>\n      <form onSubmit={e => onSubmit(e)}>\n        \n        <div class=\"input-container\">\n          <input type=\"email\" className=\"form-control\" placeholder=\"Email адреса\" name=\"email\" class=\"email-input\" value={email} onChange={e => onChange(e)}/>\n          <svg width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                                d=\"M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6ZM20 6L12 10.99L4 6H20ZM12 13L4 8V18H20V8L12 13Z\"\n                                fill=\"black\" fill-opacity=\"0.36\" />\n                        </svg>\n        </div>\n        <div class=\"input-container\">\n          <input\n          className=\"form-control\"\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            id=\"password\"\n            class=\"password-input\"\n            minLength=\"6\"\n            required\n            value={password} \n            onChange={e => onChange(e)}\n            />\n            <svg width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                 d=\"M17 8.5H18C19.1 8.5 20 9.4 20 10.5V20.5C20 21.6 19.1 22.5 18 22.5H6C4.9 22.5 4 21.6 4 20.5V10.5C4 9.4 4.9 8.5 6 8.5H7V6.5C7 3.74 9.24 1.5 12 1.5C14.76 1.5 17 3.74 17 6.5V8.5ZM12 3.5C10.34 3.5 9 4.84 9 6.5V8.5H15V6.5C15 4.84 13.66 3.5 12 3.5ZM6 20.5V10.5H18V20.5H6ZM14 15.5C14 16.6 13.1 17.5 12 17.5C10.9 17.5 10 16.6 10 15.5C10 14.4 10.9 13.5 12 13.5C13.1 13.5 14 14.4 14 15.5Z\"\n                  fill=\"black\" fill-opacity=\"0.36\" />\n            </svg>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Увійти\" class=\"sign-btn\"/>\n      </form>\n      <p className=\"my-1\">\n      Немає облікового запису? <Link to=\"/Register\">Зареєструватися</Link>\n      </p>\n      </div>\n      </section>\n  </main>\n        </Fragment>\n    )\n}\n\nLogin.propTypes = {\n  loginuser: PropTypes.func.isRequired,\n  isUserVerified: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  isUserVerified: state.authReducer.userVerified,\n  user: state.authReducer.user\n});\n\nexport default connect(mapStateToProps, {loginuser})(Login);","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\auth\\Register.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Landing.js",["735"],"import React from 'react'\nimport {Link, Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport \"../../static/style.css\";\n\n\nconst Landing = ({userVerified}) => {\n    if(userVerified)\n    {\n      // console.log('hihihihih');\n      return (<Redirect to='/dashboard'/>)\n    }\n    return (\n      <div class=\"container1 jobs-push-hero__inner\">\n        <div className=\"dash-buttons\">\n      <Link to=\"/login\" className=\"btn btn-light\"\n        ><i className=\"fa fa-sign-in text-primary\" class=\"jobs-push-login-link rounded-link\"></i>Увійти</Link>\n        <br/>\n      <Link to=\"/register\" className=\"btn btn-light\"\n        ><i className=\" text-primary\"></i>Зареєструватися</Link>\n    </div>      \n    <h1 class=\"jobs-push-hero__headline\">\n      Анонімний пошук роботи на DevConnector\n    </h1>\n\n    <div class=\"wrapper1\">\n     <p class=\"text typewriter-animation\"><span>Для </span>\n     програмістів, тестувальників, DevOps, UX/UI дизайнерів, PM, всіх, хто працює в ІТ.\n      </p>      \n    </div>\n    \n    <div class=\"jobs-push-briefly\">\n     <div class=\"container\">\n       <p class=\"jobs-push-briefly__text\">\n          Ви описуєте бажану посаду та свої навички,\n          а компанії пропонують вакансії. Після прийняття заявки, можете зв'язатися з рекрутером у спеціальному чаті - <a href='#'>DevConnectorChat</a> і домовитися про співбесіду.\n      </p>\n     </div>\n    </div>\n    </div>\n    )\n}\nLanding.propTypes ={\n  userVerified: PropTypes.bool,\n};\n\nconst mapStateToProps = (State) => ({\n  userVerified: State.authReducer.userVerified\n});\n\nexport default connect(mapStateToProps)(Landing);","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\Alert.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\Dashboard.js",["736"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\layouts\\NavM.js",["737"],"import React, { Fragment } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {logoutuser} from '../../actions/auth';\nimport {getUserProfile} from '../../actions/profile'\nimport PropTypes from 'prop-types';\nimport {getApplications} from '../../actions/applications';\nimport \"../../static/style.css\";\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\n\nconst NavM = ({logoutuser, auth, getApplications, getUserProfile}) => {\n    const {userVerified, loading, user} = auth;\n    const userNotLoggedIn = (\n      <Fragment>\n         <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n           <Nav className=\"me-auto\">\n          <li className=\"navbar-item\"><Link to=\"/register\" className=\"nav-link\">Реєстрація</Link></li>\n          <li className=\"navbar-item\"><Link to=\"/login\" className=\"nav-link\">Увійти</Link></li>\n          </Nav>\n        </Navbar.Collapse>                  \n       </Navbar>\n      </Fragment>\n    );\n    const userLoggedIn = (\n      <Fragment>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"me-auto\">\n        {user && user.who === 'Applicant' ? <li className=\"navbar-item\"><Link onClick = {getApplications} to=\"/myapplication\" className=\"nav-link\">Мої найми</Link></li>: <Fragment/>}\n        {user && user.who === 'Recruiter' ? <li className=\"navbar-item\"><Link  to=\"/successjob\" className=\"nav-link\">Співробітники</Link></li>: <Fragment/>}\n        {/* {user && user.who === 'Recruiter' ? <li className=\"navbar-item\"><Link  to=\"/applicants\" className=\"nav-link\">Applicants</Link></li>: <Fragment/>} */}\n      <li className=\"navbar-item\"><Link onClick = {getUserProfile} to=\"/profile\" className=\"nav-link\">Профіль</Link></li>\n      <li className=\"navbar-item\"><Link to=\"/dashboard\" className=\"nav-link\">Вакансії</Link></li>\n      {/* <li className=\"navbar-item\"><Link to=\"/chat\" className=\"nav-link\">Chat</Link></li> */}\n      <li className=\"navbar-item\"><Link to=\"/salary\" className=\"nav-link\">Зарплати</Link></li>\n      <li className=\"navbar-item\"><Link onClick = {logoutuser} to=\"/\" className=\"nav-link\"> <i className=\"fa fa-sign-out\"></i> Вийти</Link></li>\n         </Nav>\n      </Navbar.Collapse>                  \n      </Navbar>\n      </Fragment>\n      \n    );\n    return (\n      <Fragment>\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" expand=\"lg\">\n      <h1>\n        <Navbar.Brand>\n        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-code\"></i> DevConnector</Link>\n        </Navbar.Brand>\n      </h1>     \n      <ul>\n        {\n          (!loading && userVerified) ? (<Fragment>{userLoggedIn}</Fragment>) : (<Fragment>{userNotLoggedIn}</Fragment>) \n        }\n      </ul>\n      </Navbar>\n      </Fragment>\n    )\n};\n\nNavM.propTypes = {\n  logoutuser: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired,\n  getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authReducer,\n});\n\nexport default connect(mapStateToProps, {logoutuser, getApplications, getUserProfile})(NavM);","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\MyApplications.js",["738","739","740"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddSOP.js",["741","742","743","744","745","746","747","748","749","750","751"],"import React, {Fragment, useEffect, useState, Redirect} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {newApplication} from '../../actions/applications';\n\nconst AddSOP = ({match, jobs: {cjob, loading}, loadJobWithId, newApplication}) => {\n    const job = match.params.id;\n\n    // console.log(job);\n    const [formData, setFormData] = useState({\n        recruiter: '',\n        status: 'Applied',\n        sop: '',\n        title: '',\n        salary: '',\n        typeOfJob: '',\n        rating: '',\n        job_id: '',\n        deadline: ''\n      });\n      \n    const {\n        recruiter,\n        status,\n        sop,\n        recruiter_id,\n        title,\n        salary,\n        typeOfJob,\n        rating,\n        deadline,\n        job_id\n    } = formData;\n    useEffect(()=>{\n        loadJobWithId(job);\n    },[loadJobWithId]);\n    if(!cjob || loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    // console.log(deadline);\n        const onChange = (e) => {\n            console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value,\n              recruiter: cjob.recruiter_id, title: cjob.title, salary: cjob.salary, typeOfJob: cjob.typeOfJob, job_id: job, deadline: cjob.deadline\n            });\n          };\n      \n        const onSubmit =  (e) => {\n            e.preventDefault();\n            newApplication(formData);\n          }\n    return (\n        <Fragment>\n        <h1>Подати заявку</h1>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <label for=\"id1\">Заява про мету</label>\n          <textarea type=\"text\" id='id1' className=\"form-control\" rows='5' placeholder=\"Заява про мету\"  name=\"sop\"  value={sop} onChange={e => onChange(e)} required></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Подати заявку\" />\n      </form>\n        </Fragment>\n    )\n}\n\nAddSOP.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    loadJobWithId: PropTypes.array,\n    newApplication: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n});\n\nexport default connect(mapStateToProps, {newApplication, loadJobWithId})(AddSOP);\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\ViewJob.js",["752","753"],"import React, {Fragment, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId, editJob } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport DisplayRecruiterSide from './DisplayRecruiterSide';\nimport {getApplicationsById} from '../../actions/applications';\n\n\nconst ViewJob = ({match, jobs: {cjob, loading}, editJob, loadJobWithId, applicationjobs, getApplicationsById}) => {\n    const id = match.params.id;\n    useEffect(()=>{\n        loadJobWithId(id);\n        getApplicationsById(id);\n    },[]);\n    \n    if(!cjob || loading || applicationjobs.loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    const {\n        title,\n            applications,\n            positions,\n            deadline,\n            skills,\n            typeOfJob,\n            duration,\n            salary,\n            date_of_posting\n    } = cjob;\n    return (\n        <Fragment>\n        <h1>Робота</h1>\n        <table className='table'>\n    <tr>\n        <th>Назва</th>\n        <td>{title}</td>\n    </tr> \n    <tr>\n        <th>Кількість заявок</th>\n        <td>{applications}</td>\n    </tr>\n\n    <tr>\n        <th>Кількість посад</th>\n        <td>{positions}</td>\n    </tr>\n        <tr>\n            <th>Дата розміщення</th>\n            <td>{moment(date_of_posting).format('LLL')}</td>\n        </tr>\n    <tr>\n        <th>Дедлайн подачі заявки</th>\n        <td>{moment(deadline).format('LLL')}</td>\n    </tr>\n    <tr>\n        <th>Зарплата</th>\n        <td>${salary}</td>\n    </tr>\n    <tr>\n        <th>Навички</th>\n        <td>{skills}</td>\n    </tr>\n    <tr>\n        <th>Тип роботи</th>\n        <td>{typeOfJob}</td>\n    </tr>\n    <tr>\n        <th>Тривалість</th>\n        <td>{duration}</td>\n    </tr>\n    <tr>\n    <td><Link className='btn btn-primary' to={`/editjob/${id}`} >Редагувати вакансію</Link></td>\n    </tr>\n    \n</table>\n        <h2>Заявки на цю роботу</h2>\n\n        <DisplayRecruiterSide applicationjobs={applicationjobs.applications}/>\n        </Fragment>\n    )\n}\n\nViewJob.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    editJob: PropTypes.func.isRequired,\n    loadJobWithId: PropTypes.func.isRequired,\n    getApplicationsById: PropTypes.func.isRequired,\n    applicationjobs: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n    applicationjobs: state.applications\n});\n\nexport default connect(mapStateToProps, {editJob, loadJobWithId, getApplicationsById})(ViewJob);\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\Profile.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AddJob.js",["754"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\EditJob.js",["755"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\Footer\\Footer.js",["756"],"import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport \"../../static/style.css\";\r\n\r\nconst Footer = () => (\r\n  //  <Container fluid style={{backgroundColor:'#343a40', color:' #FFFFFF',padding:'30px 20px 20px'}}>\r\n  //      <Container style={{display:'flex',justifyContent:'left',padding:'10px'}}>\r\n  //        <p>Copyright © 2022 . all rights reserved.</p>  \r\n  //      </Container>\r\n  //  </Container>\r\n  <footer class=\"footer\">\r\n   <p>Copyright © 2022 . Всі права захищені.</p> \r\n  </footer>\r\n)\r\n\r\nexport default Footer;","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\AcceptedApplications.js",["757","758","759"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus, getApplications} from '../../actions/applications';\n\n\nconst AcceptedApplications = ({loading , applicationjobs, changeStatus, getApplications}) => {\n    useEffect(()=>{\n        getApplications();\n    },[]);\n    // console.log(applicationjobs);\n    if(loading){\n        return <Fragment><p>loading...</p></Fragment>\n    }\n    if(applicationjobs==null){\n        return <h2>Кандидати рекрутера</h2>\n    }\n    applicationjobs =  applicationjobs.filter((val) => val.status === 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        typeOfJob,\n        title,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Бажана посада заявника</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Дата приєднання</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Тип роботи</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{title ? \n<Fragment>\n    <tr>\n        <th>Назва роботи</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{skills ? \n<Fragment>\n    <tr>\n        <th>Навички кандидата</th>\n        <td>{skills}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n<tr>\n    <td>\n        <button type=\"submit\" className='btn btn-warning'>Оцінити</button>\n    </td>\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Кандидати рекрутера</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nAcceptedApplications.propTypes = {\n    applicationjobs: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n    loading: PropTypes.bool,\n    getApplications: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationjobs: state.applications.applications,\n    loading: state.applications.loading\n});\nexport default connect(mapStateToProps, {changeStatus, getApplications})(AcceptedApplications\n);\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\EditProfile.js",["760","761"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\routes\\PrivateRoute\\Privateroute.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\salary\\SalaryChart.js",["762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826"],"import React, { useEffect, useState, Fragment, PureComponent } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport io from \"socket.io-client\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from 'axios'\r\nimport \"../../static/style.css\"\r\n// import { PieChart, Pie, Legend, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nfunction SalaryChart() {\r\n\r\n  const data = [\r\n    { name: '<0.5k', salary: '2000'},\r\n    { name: '0.5k+', salary: '10000'},\r\n    { name: '1k+', salary: '9000'},\r\n    { name: '1.5k+', salary: '10000'},\r\n    { name: '2k+', salary: '15000'},\r\n    { name: '2.5k+', salary: '9500'},\r\n    { name: '3k+', salary: '15000'},\r\n    { name: '3.5k+', salary: '7000'},\r\n    { name: '4k+', salary: '10000'},\r\n    { name: '4.5k+', salary: '4000'},\r\n    { name: '5k+', salary: '7000'},\r\n    { name: '5.5k+', salary: '3500'},\r\n    { name: '6k+', salary: '4000'},\r\n    { name: '6.5k+', salary: '2000'},\r\n    { name: '7k+', salary: '2000'},    \r\n  ];\r\n    \r\n  return (\r\n    <div>      \r\n      <Fragment>\r\n      <div class=\"salaries-page\">\r\n    <div class=\"container\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"page-header\">\r\n            <div class=\"page-header--content\">\r\n              <div class=\"page-header--title\">\r\n                <h1>\r\n                  Зарплати\r\n\r\n                  \r\n                    \r\n                  \r\n\r\n                  \r\n                    \r\n                  \r\n                </h1>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row salaries-page--content\">\r\n        <div class=\"col-sm-12 mobile-paddings-0\">\r\n\r\n          \r\n\r\n          <div class=\"salaries-grid\">\r\n            \r\n\r\n            <div class=\"salaries-summary\">\r\n              <div class=\"summary-stastistics\">\r\n              <div class=\"summary-stastistics--item summary-stastistics--item_vacancies\">\r\n                  <div class=\"summary-title summary-title--show-color\">\r\n                    <a href=\"/jobs/\" class=\"summary-title--content\">\r\n                      <span class=\"summary-title--text\">Зв'яжіться з рекрутером в нашому спеціальному чаті - DevConnectorChat</span>                    \r\n                    </a>\r\n                  </div>\r\n                  <div class=\"summary-list\">\r\n                    \r\n\r\n                    <div class=\"summary-item\">\r\n                      <div class=\"summary-item--description\">\r\n                        \r\n                      Після того, як Вас обрав рекрутер, зайдіть в спеціальний чат компанії за посиланням:  \r\n                        \r\n                      </div>                     \r\n                    </div>\r\n\r\n                    <div class=\"summary-item summary-item_range\">\r\n                      <div class=\"summary-item--description\">\r\n                        \r\n                      <p><a href=\"#\">DevConnectorChat</a></p>\r\n                        \r\n                      </div>                     \r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"summary-item summary-item_range\">\r\n                      <div class=\"summary-item--description\">\r\n                    <ol>\r\n                     <li>1. Зареєструйтеся в чаті;</li>\r\n                     <li>2. Зайдіть в кімнату необхідної компанії;</li>\r\n                     <li>3. Напишіть рекрутеру.</li>                     \r\n                    </ol>    \r\n                      </div>                     \r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"summary-stastistics--item summary-stastistics--item_vacancies\">\r\n                  <div class=\"summary-title summary-title--show-color\">\r\n                    <a href=\"/jobs/\" class=\"summary-title--content\">\r\n                      <span class=\"summary-title--text\">Велика кількість вакансій</span>                    \r\n                    </a>\r\n                  </div>\r\n                  <div class=\"summary-list\">\r\n                    \r\n\r\n                    <div class=\"summary-item\">\r\n                      <div class=\"summary-item--description\">\r\n                        \r\n                      Ми робимо все, щоб кожному відвідувачу DevConnector запам’ятався як \r\n                        \r\n                      </div>                     \r\n                    </div>\r\n\r\n                    <div class=\"summary-item summary-item_range\">\r\n                      <div class=\"summary-item--description\">\r\n                        \r\n                      найзручніший, найшвидший та найефективніший сайт з працевлаштування\r\n                        \r\n                      </div>                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"summary-stastistics--item summary-stastistics--item_candidates\">\r\n                  <div class=\"summary-title summary-title--show-color\">\r\n                    <a href=\"/developers/\" class=\"summary-title--content\">\r\n                      <span class=\"summary-title--text\">Ти зможеш все</span>              \r\n                    </a>\r\n                  </div>\r\n                  <div class=\"summary-list\">                    \r\n                    <div class=\"summary-item summary-item_range\">                      \r\n                      <div class=\"summary-item--description\">\r\n                      Ми віримо у кожного, підштовхуємо, мотивуємо та надихаємо\r\n                      </div>\r\n                    </div>                   \r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"salaries-chart\">\r\n              <div class=\"salaries-chart--container\">\r\n                <div class=\"chart\" id=\"graph\" >\r\n                                       \r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n          barSize={20}\r\n        >\r\n          <XAxis dataKey=\"name\" scale=\"point\" padding={{ left: 10, right: 10 }} />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Bar dataKey=\"salary\" fill=\"#5cb85c\" background={{ fill: '#eee' }} />\r\n        </BarChart>\r\n      \r\n      \r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"salaries-pulse\">\r\n              <div class=\"salaries-promo salaries-promo_pulse\">\r\n                <div class=\"salaries-promo--text\">\r\n                  \r\n                    <p>DevConnector - анонімний пошук роботи для програмістів.</p>\r\n\r\n                  \r\n                </div>                \r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"salaries-telegram\">\r\n              \r\n              \r\n            </div>\r\n\r\n            <div class=\"salaries-about\">\r\n              <div class=\"about\">\r\n                \r\n                  <h4>Швидкий пошук роботи</h4>\r\n                  <p>Хочеш стати затребуваним ІТ-спеціалістом?</p> \r\n                  <p>Заходи на сайт для пошуку роботи - DevConnector.</p> \r\n                  <p>Пошук роботи в IT - це просто! На DevConnector зібрані нові вакансії від провідних IT компаній. Широкий функціонал. Швидкий та зручний пошук. Реєстрація в 3 кліки.</p>\r\n                                                  \r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"salaries-filters\">\r\n              <div class=\"jobs-filter\">\r\n\r\n                <div class=\"jobs-filter-wrapper\">\r\n                  <div class=\"jobs-filter__set-title\">В нас Ви знайдете будь які вакансії</div>\r\n\r\n                  <div class=\"jobs-filter__set jobs\">\r\n                    <a href=\"#\" class=\"jobs-filter__link jobs-filter__link--active\">\r\n                      Усі\r\n                    </a>\r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          C# / .NET\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          2D Artist\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          3D Artist\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Android\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Angular\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Blockchain\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Business Analyst\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          C / C++ / Embedded\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Data Analyst\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Data Engineer\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Data Science\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Design / UI/UX\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          DevOps\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Drupal\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Flutter\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Game Designer\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Golang\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          HR / Recruiters\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          HTML\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          iOS\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Java\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          JavaScript / Front-End\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Laravel\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Lead / Architect / CTO\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Lead Generation\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Magento\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Marketing\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Node.js\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          PHP\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Product Manager\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Project Manager\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Python\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          QA Manual\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          QA Automation\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          React\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          React Native\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Ruby\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Rust\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          SEO\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          SQL / DBA\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Sales\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Salesforce\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Scala\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Scrum Master\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Security\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Customer/Technical Support\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Symfony\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Sysadmin\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Technical Writer\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Gamedev / Unity\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Vue\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          WordPress\r\n                        </a>\r\n                      \r\n                    \r\n                      \r\n                        <a href=\"#\" class=\"jobs-filter__link \">\r\n                          Xamarin\r\n                        </a>\r\n                      \r\n                    \r\n                  </div>\r\n                </div>\r\n\r\n                {/* <div class=\"jobs-filter-wrapper\">\r\n                  <div class=\"jobs-filter__set-title\">Досвід роботи</div>\r\n\r\n                  <div class=\"jobs-filter__set\">\r\n                    <a href=\"#\" class=\"jobs-filter__link jobs-filter__link--active\">\r\n                      Будь-який досвід роботи\r\n                    </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        Менше року\r\n                      </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        Від року до двох\r\n                      </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        2-5 років\r\n                      </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        5+ років досвіду\r\n                      </a>\r\n                    \r\n                  </div>\r\n                </div> */}\r\n\r\n                {/* <div class=\"jobs-filter-wrapper\">\r\n                  <div class=\"jobs-filter__set-title\">Англійська</div>\r\n\r\n                  <div class=\"jobs-filter__set\">\r\n                    <a href=\"#\" class=\"jobs-filter__link jobs-filter__link--active\">\r\n                      Будь-який\r\n                    </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        Beginner/Elementary\r\n                      </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        Pre-Intermediate\r\n                      </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        Intermediate\r\n                      </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        Upper-Intermediate\r\n                      </a>\r\n                    \r\n                      <a href=\"#\" class=\"jobs-filter__link \">\r\n                        Advanced/Fluent\r\n                      </a>\r\n                    \r\n                  </div>\r\n                </div> */}\r\n\r\n                {/* <div class=\"jobs-filter-wrapper\">\r\n                  <div class=\"jobs-filter__set-title\">Місто</div>\r\n\r\n                  <div class=\"jobs-filter__set\">\r\n                    <a href=\"#\" class=\"jobs-filter__link jobs-filter__link--active\">Усі</a>\r\n                    <a href=\"#\" class=\"jobs-filter__link \">Віддалена робота</a>\r\n                    <a href=\"#\" class=\"jobs-filter__link \">Київ </a>\r\n                    <a href=\"#\" class=\"jobs-filter__link \">Харків </a>\r\n                    <a href=\"#\" class=\"jobs-filter__link \">Львів </a>\r\n                    <a href=\"#\" class=\"jobs-filter__link \">Дніпро</a>\r\n                    <a href=\"#\" class=\"jobs-filter__link \">Одеса </a>\r\n                  </div>\r\n                </div> */}\r\n\r\n              </div> \r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div> \r\n  </div>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n  \r\n}\r\nexport default SalaryChart;","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\AddEducation.js",["827","828","829"],"import React, {Fragment,  Link, useState, Redirect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addEducation} from '../../actions/profile';\nimport { Applicant } from '../../actions/types';\n\nconst AddEducation = ({auth: {loading, user}, addEducation}) => {\n    const [formData , setFormData] = useState({\n        to: '',\n        from : '',\n        institute: '',\n    });\n    const {\n        to,\n        from,\n        institute\n    } = formData;\n    const onChange = (e) => {\n        // console.log(e.target.value);\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        addEducation(formData);\n    }\n    if(loading || !user){\n        return (<Fragment>loading....</Fragment>)\n    }\n    return (\n        <Fragment>\n        <h1 className=\"large text-primary\">\n        Додати освіту\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-graduation-cap\"></i> Додайте будь-який ЗВО\n      </p>\n      <small>* = Обов'язкове поле</small>\n      <form className=\"form\" onSubmit= {e => onSubmit(e)}>\n        <div className=\"form-group\">\n        <label for=\"insid\">Університет</label>\n          <input\n          id='insid'\n          className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Університет\"\n            name=\"institute\"\n            value={institute} onChange={e => onChange(e)} required\n          />\n        </div>\n        <div className=\"form-group\">\n        <label for=\"id1\">Початок навчання (рік)</label>\n          <input type=\"number\" name=\"from\" id='id1'\n            placeholder=\"Початок навчання\"\n            className=\"form-control\"\n            value={from} min='1950' max='2021' onChange={e => onChange(e)} required\n          />\n        </div>\n        <div className=\"form-group\">\n        <label for=\"id2\">Закінчення навчання (рік)</label>\n          <input type=\"number\" name=\"to\" id='id2'\n            placeholder=\"Закінчення навчання\"\n            className=\"form-control\"\n            value={to} min='1950' max='2021' onChange={e => onChange(e)}\n            />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n      </form>\n      {/* <Link  to='/profile'>Go Back</Link> */}\n\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth : state.authReducer\n});\n\n\nexport default connect(mapStateToProps, {addEducation})(AddEducation);\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\AllApplicants.js",["830","831"],"import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {} from '../../actions/jobs';\r\nimport moment from \"moment\";\r\nimport {Link} from 'react-router-dom';\r\n// import deleteJob from '../../actions/jobs';\r\nimport {changeStatus} from '../../actions/applications';\r\n\r\n\r\nconst AllApplicants = ({applicationjobs, changeStatus}) => {\r\n    \r\n    applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\r\n    const code = applicationjobs.map(({\r\n        applicant: {name,skills},\r\n        dateOfJoining,\r\n        dateOfApplication,\r\n        sop,\r\n        status,\r\n        job_id,\r\n        _id\r\n        }) => <table className='table' key={_id}>\r\n        \r\n{name ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Name Of Applicant</th>\r\n        <td>{name}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{skills ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Skills of Applicant</th>\r\n        <td>{skills}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{dateOfApplication ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Date Of Application</th>\r\n        <td>{dateOfApplication}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{sop ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Statement Of Purpose</th>\r\n        <td>{sop}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{status ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Stage of application</th>\r\n        <td>{status}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n    \r\n<tr>\r\n    <td>\r\n    \r\n    {\r\n    status === 'Applied' ? \r\n    <Fragment>\r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Короткий список дій</button>\r\n    </Fragment>\r\n    :\r\n    (\r\n        status === 'Shortlist' ? \r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Прийняти</button>\r\n        :\r\n        <Fragment/>\r\n    )\r\n    }    \r\n    </td>\r\n    {status !== 'Accepted' ? <td>\r\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Відхилити</button>\r\n    </td>\r\n    :\r\n    <Fragment/>\r\n}\r\n    \r\n    </tr>\r\n\r\n</table>)\r\n    return (\r\n        <Fragment>\r\n            \r\n            {code}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nAllApplicants.propTypes = {\r\n    applicationsjob: PropTypes.array.isRequired,\r\n    changeStatus: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    applicationsjob: state.applications.applications\r\n});\r\nexport default connect(mapStateToProps, {changeStatus})(AllApplicants\r\n);\r\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\applicants\\DashboardApplicants.js",["832","833"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoom\\ChatRoom.js",["834","835","836","837","838","839","840","841","842","843","844","845","846","847"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\ChatRoomPage\\ChatRoomPage.js",["848"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\CreateRoom\\CreateRoom.js",["849","850","851","852","853"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\chat\\HomePage\\HomePage.js",["854","855","856","857","858","859","860","861","862","863","864"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\alert.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateRecruiter.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\profile.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\jobs.js",["865","866","867"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\TemplateApplicant.js",["868"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport \"../../static/style.css\"\n\n\nconst TemplateApplicant = ({jobs, applicationsjob}) => {\n    jobs = jobs.filter((value)=>new Date(value.deadline).getTime() > new Date().getTime());\n    const code = jobs.map(({\n            title,\n            applications,\n            positions,\n            recruiter_id: {name},\n            deadline,\n            skills,\n            typeOfJob,\n            duration,\n            salary,\n            status,\n            date_of_posting,\n            _id\n        }) => <table className='table' key={_id}>\n        {title ? \n<Fragment>\n<li class=\"list-jobs__item\">\n         <div class=\"text-date pull-right\">\n\n         {moment(deadline).format('LL')}\n\n        </div>\n        <div class=\"list-jobs__title\">\n        <li><a class=\"profile\" href=\"/jobs/308272-middle-node-js-developer/\"><span>{title}</span></a> <span class=\"public-salary-item\">${salary}</span></li>        \n        </div>\n</li>\n    \n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{name ? \n<Fragment>\n    <tr>\n        <th>Name of recruiter</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{deadline ? \n<Fragment>\n    \n        {/* <th>Deadline of application</th> */}\n        <div class='list-jobs__details__info'>\n        \n        </div>\n    \n</Fragment>\n: \n<Fragment> </Fragment>}\n{salary ? \n<Fragment>\n    \n        {/* <th>salary</th> */}\n        <span class=\"public-salary-item\">\n        \n        </span>\n    \n</Fragment>\n: \n<Fragment> </Fragment>}\n{skills ? \n<Fragment>\n   \n        <li class=\"list-jobs__item\">\n        <div class=\"list-jobs__description\"> \n        <li><p>{skills}</p></li> \n        </div>\n        </li>\n   \n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{typeOfJob ? \n<Fragment>\n    \n         <div class='list-jobs__details__info'>\n        \n        </div>\n    \n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{duration ? \n<Fragment>\n    <tr>\n    <div class=\"list-jobs__details\">\n    <a href=\"#\" class='picture'>\n        <div class=\"recruiter-images-container\">       \n             <div id=\"\" class=\"userpic-wrapper userpic-color_2 userpic_sm \">\n                   <span class=\"userpic-initials\">DevConnector</span>\n                         <div class=\"userpic-image\" ></div>\n                 </div>\n              </div>\n          </a>\n         <div class='list-jobs__details__info'>\n        <li>Тривалість: {duration} Вакансія діє до: {moment(deadline).format('LLL')} Тип роботи: {typeOfJob}</li>\n        \n        </div>\n        </div>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    <tr>\n         { applicationsjob && applicationsjob.filter((value)=>  value.job_id === _id).length !== 0? <Fragment>\n            <button className=\"btn btn-primary\">Застосований</button>              \n        </Fragment>\n        :\n        (status === 'Full' ? \n        <button className=\"btn btn-warning\">Вакансія зайнята</button>\n        : \n        <Link to={`/sop/${_id}`} className=\"btn btn-success\">Відгукнутися</Link>\n        )\n    }\n\n    </tr> \n    \n</table>)\n    return (\n        <Fragment>\n            <h2>Робота</h2>\n            <div class=\"page-header\">\n                <h1>Вакансії на DevConnector\n\n                {/* <small class=\"text-muted\"> 26165</small> */}\n                </h1>\n\n  \n             {/* <div class=\"jobs-filter\"> */}\n              {/* <h2 class=\"jobs-filter__title\">Фільтри</h2> */}\n              {/* <p>consider 0 in duration as indefinite.</p> */}\n              {/* <div class=\"form-group\">\n               <label>Назва посади: </label>\n               <input type=\"text\" class=\"form-control\"/>\n              </div> */}\n             {/* </div> */}\n  \n             </div>\n            {code}\n        </Fragment>\n    );\n}\n\nTemplateApplicant.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, null)(TemplateApplicant\n);\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\types.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\actions\\applications.js",["869"],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayApplications.js",["870","871"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\n\n\nconst DisplayApplications = ({applicationjobs}) => {\n    const code = applicationjobs.map(({\n            title,\n            dateOfJoining,\n            salary,\n            recruiter: {name},\n            status,\n            typeOfJob,\n            _id\n        }) => <table className='table' key={_id}>\n        {title ? \n<Fragment>\n    <tr>\n        <th>Назва</th>\n        <td>{title}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{name ? \n<Fragment>\n    <tr>\n        <th>Ім'я рекрутера</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfJoining ? \n<Fragment>\n    <tr>\n        <th>Дата найму</th>\n        <td>{dateOfJoining}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{salary ? \n<Fragment>\n    <tr>\n        <th>Зарплата</th>\n        <td>${salary}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{typeOfJob ? \n<Fragment>\n    <tr>\n        <th>Тип роботи</th>\n        <td>{typeOfJob}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Статус заявки</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n<input type=\"submit\" className=\"btn btn-warning\" value=\"Оцініть роботу\" />\n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            <h2>Робота</h2>\n            {code}\n        </Fragment>\n    );\n}\n\nDisplayApplications.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, null)(DisplayApplications\n);\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\utils\\requests.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\constants\\constants.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\index.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForProfile.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\profile\\TemplateForEducation.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\components\\dashboard\\DisplayRecruiterSide.js",["872","873"],"import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {} from '../../actions/jobs';\nimport moment from \"moment\";\nimport {Link} from 'react-router-dom';\n// import deleteJob from '../../actions/jobs';\nimport {changeStatus} from '../../actions/applications';\n\n\nconst DisplayRecruiterSide = ({applicationjobs, changeStatus}) => {\n    \n    applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\n    const code = applicationjobs.map(({\n        applicant: {name,skills},\n        dateOfJoining,\n        dateOfApplication,\n        sop,\n        status,\n        job_id,\n        _id\n        }) => <table className='table' key={_id}>\n        \n{name ? \n<Fragment>\n    <tr>\n        <th>Бажана посада заявника</th>\n        <td>{name}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{skills ? \n<Fragment>\n    <tr>\n        <th>Навички заявника</th>\n        <td>{skills}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{dateOfApplication ? \n<Fragment>\n    <tr>\n        <th>Дата подачі заявки</th>\n        <td>{dateOfApplication}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n\n{sop ? \n<Fragment>\n    <tr>\n        <th>Повідомлення від кандидата</th>\n        <td>{sop}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n\n{status ? \n<Fragment>\n    <tr>\n        <th>Статус заявки</th>\n        <td>{status}</td>\n    </tr>\n</Fragment>\n: \n<Fragment> </Fragment>}\n    \n<tr>\n    <td>\n    \n    {\n    status === 'Applied' ? \n    <Fragment>\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Короткий список дій</button>\n    </Fragment>\n    :\n    (\n        status === 'Shortlist' ? \n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Прийняти</button>\n        :\n        <Fragment/>\n    )\n    }    \n    </td>\n    {status !== 'Accepted' ? <td>\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Відхилити</button>\n    </td>\n    :\n    <Fragment/>\n}\n    \n    </tr>\n\n</table>)\n    return (\n        <Fragment>\n            \n            {code}\n        </Fragment>\n    );\n}\n\nDisplayRecruiterSide.propTypes = {\n    applicationsjob: PropTypes.array.isRequired,\n    changeStatus: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    applicationsjob: state.applications.applications\n});\nexport default connect(mapStateToProps, {changeStatus})(DisplayRecruiterSide\n);\n","D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\alert.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\jobs.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\authReducer.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\profile.js",[],"D:\\0Фінальний варіант диплому\\Job-Portal-Redux\\frontend\\src\\reducers\\applications.js",[],["874","875"],{"ruleId":"876","replacedBy":"877"},{"ruleId":"878","replacedBy":"879"},{"ruleId":"880","severity":1,"message":"881","line":5,"column":9,"nodeType":"882","messageId":"883","endLine":5,"endColumn":23},{"ruleId":"884","severity":1,"message":"885","line":19,"column":10,"nodeType":"886","endLine":19,"endColumn":12,"suggestions":"887"},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"890","line":14,"column":7,"nodeType":"886","endLine":14,"endColumn":9,"suggestions":"891"},{"ruleId":"880","severity":1,"message":"892","line":1,"column":47,"nodeType":"882","messageId":"883","endLine":1,"endColumn":55},{"ruleId":"880","severity":1,"message":"893","line":24,"column":9,"nodeType":"882","messageId":"883","endLine":24,"endColumn":18},{"ruleId":"880","severity":1,"message":"894","line":25,"column":9,"nodeType":"882","messageId":"883","endLine":25,"endColumn":15},{"ruleId":"880","severity":1,"message":"895","line":27,"column":9,"nodeType":"882","messageId":"883","endLine":27,"endColumn":21},{"ruleId":"880","severity":1,"message":"896","line":28,"column":9,"nodeType":"882","messageId":"883","endLine":28,"endColumn":14},{"ruleId":"880","severity":1,"message":"897","line":29,"column":9,"nodeType":"882","messageId":"883","endLine":29,"endColumn":15},{"ruleId":"880","severity":1,"message":"898","line":30,"column":9,"nodeType":"882","messageId":"883","endLine":30,"endColumn":18},{"ruleId":"880","severity":1,"message":"899","line":31,"column":9,"nodeType":"882","messageId":"883","endLine":31,"endColumn":15},{"ruleId":"880","severity":1,"message":"900","line":32,"column":9,"nodeType":"882","messageId":"883","endLine":32,"endColumn":17},{"ruleId":"880","severity":1,"message":"901","line":33,"column":9,"nodeType":"882","messageId":"883","endLine":33,"endColumn":15},{"ruleId":"884","severity":1,"message":"902","line":37,"column":7,"nodeType":"886","endLine":37,"endColumn":22,"suggestions":"903"},{"ruleId":"880","severity":1,"message":"889","line":5,"column":9,"nodeType":"882","messageId":"883","endLine":5,"endColumn":13},{"ruleId":"880","severity":1,"message":"889","line":1,"column":27,"nodeType":"882","messageId":"883","endLine":1,"endColumn":31},{"ruleId":"880","severity":1,"message":"892","line":1,"column":43,"nodeType":"882","messageId":"883","endLine":1,"endColumn":51},{"ruleId":"880","severity":1,"message":"904","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":19},{"ruleId":"880","severity":1,"message":"905","line":1,"column":37,"nodeType":"882","messageId":"883","endLine":1,"endColumn":45},{"ruleId":"884","severity":1,"message":"906","line":16,"column":7,"nodeType":"886","endLine":16,"endColumn":9,"suggestions":"907"},{"ruleId":"880","severity":1,"message":"904","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":19},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"908","line":16,"column":10,"nodeType":"886","endLine":16,"endColumn":12,"suggestions":"909"},{"ruleId":"880","severity":1,"message":"910","line":19,"column":9,"nodeType":"882","messageId":"883","endLine":19,"endColumn":14},{"ruleId":"884","severity":1,"message":"911","line":37,"column":7,"nodeType":"886","endLine":37,"endColumn":32,"suggestions":"912"},{"ruleId":"884","severity":1,"message":"913","line":28,"column":7,"nodeType":"886","endLine":28,"endColumn":31,"suggestions":"914"},{"ruleId":"880","severity":1,"message":"915","line":4,"column":9,"nodeType":"882","messageId":"883","endLine":4,"endColumn":27},{"ruleId":"880","severity":1,"message":"916","line":1,"column":22,"nodeType":"882","messageId":"883","endLine":1,"endColumn":46},{"ruleId":"880","severity":1,"message":"917","line":1,"column":171,"nodeType":"882","messageId":"883","endLine":1,"endColumn":183},{"ruleId":"880","severity":1,"message":"915","line":4,"column":9,"nodeType":"882","messageId":"883","endLine":4,"endColumn":27},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"876","replacedBy":"918"},{"ruleId":"878","replacedBy":"919"},{"ruleId":"876","replacedBy":"920"},{"ruleId":"878","replacedBy":"921"},{"ruleId":"880","severity":1,"message":"922","line":30,"column":8,"nodeType":"882","messageId":"883","endLine":30,"endColumn":21},{"ruleId":"880","severity":1,"message":"881","line":5,"column":9,"nodeType":"882","messageId":"883","endLine":5,"endColumn":23},{"ruleId":"880","severity":1,"message":"923","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":13},{"ruleId":"880","severity":1,"message":"924","line":9,"column":9,"nodeType":"882","messageId":"883","endLine":9,"endColumn":21},{"ruleId":"880","severity":1,"message":"925","line":9,"column":23,"nodeType":"882","messageId":"883","endLine":9,"endColumn":40},{"ruleId":"880","severity":1,"message":"926","line":10,"column":10,"nodeType":"882","messageId":"883","endLine":10,"endColumn":20},{"ruleId":"884","severity":1,"message":"885","line":19,"column":10,"nodeType":"886","endLine":19,"endColumn":12,"suggestions":"927"},{"ruleId":"880","severity":1,"message":"905","line":1,"column":37,"nodeType":"882","messageId":"883","endLine":1,"endColumn":45},{"ruleId":"884","severity":1,"message":"906","line":16,"column":7,"nodeType":"886","endLine":16,"endColumn":9,"suggestions":"928"},{"ruleId":"884","severity":1,"message":"913","line":28,"column":7,"nodeType":"886","endLine":28,"endColumn":31,"suggestions":"929"},{"ruleId":"880","severity":1,"message":"892","line":1,"column":47,"nodeType":"882","messageId":"883","endLine":1,"endColumn":55},{"ruleId":"880","severity":1,"message":"893","line":24,"column":9,"nodeType":"882","messageId":"883","endLine":24,"endColumn":18},{"ruleId":"880","severity":1,"message":"894","line":25,"column":9,"nodeType":"882","messageId":"883","endLine":25,"endColumn":15},{"ruleId":"880","severity":1,"message":"895","line":27,"column":9,"nodeType":"882","messageId":"883","endLine":27,"endColumn":21},{"ruleId":"880","severity":1,"message":"896","line":28,"column":9,"nodeType":"882","messageId":"883","endLine":28,"endColumn":14},{"ruleId":"880","severity":1,"message":"897","line":29,"column":9,"nodeType":"882","messageId":"883","endLine":29,"endColumn":15},{"ruleId":"880","severity":1,"message":"898","line":30,"column":9,"nodeType":"882","messageId":"883","endLine":30,"endColumn":18},{"ruleId":"880","severity":1,"message":"899","line":31,"column":9,"nodeType":"882","messageId":"883","endLine":31,"endColumn":15},{"ruleId":"880","severity":1,"message":"900","line":32,"column":9,"nodeType":"882","messageId":"883","endLine":32,"endColumn":17},{"ruleId":"880","severity":1,"message":"901","line":33,"column":9,"nodeType":"882","messageId":"883","endLine":33,"endColumn":15},{"ruleId":"884","severity":1,"message":"902","line":37,"column":7,"nodeType":"886","endLine":37,"endColumn":22,"suggestions":"930"},{"ruleId":"880","severity":1,"message":"889","line":5,"column":9,"nodeType":"882","messageId":"883","endLine":5,"endColumn":13},{"ruleId":"880","severity":1,"message":"904","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":19},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"908","line":16,"column":10,"nodeType":"886","endLine":16,"endColumn":12,"suggestions":"931"},{"ruleId":"880","severity":1,"message":"910","line":19,"column":9,"nodeType":"882","messageId":"883","endLine":19,"endColumn":14},{"ruleId":"884","severity":1,"message":"911","line":37,"column":7,"nodeType":"886","endLine":37,"endColumn":32,"suggestions":"932"},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"890","line":14,"column":7,"nodeType":"886","endLine":14,"endColumn":9,"suggestions":"933"},{"ruleId":"880","severity":1,"message":"889","line":1,"column":27,"nodeType":"882","messageId":"883","endLine":1,"endColumn":31},{"ruleId":"880","severity":1,"message":"892","line":1,"column":43,"nodeType":"882","messageId":"883","endLine":1,"endColumn":51},{"ruleId":"880","severity":1,"message":"904","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":19},{"ruleId":"880","severity":1,"message":"915","line":4,"column":9,"nodeType":"882","messageId":"883","endLine":4,"endColumn":27},{"ruleId":"880","severity":1,"message":"916","line":1,"column":22,"nodeType":"882","messageId":"883","endLine":1,"endColumn":46},{"ruleId":"880","severity":1,"message":"917","line":1,"column":171,"nodeType":"882","messageId":"883","endLine":1,"endColumn":183},{"ruleId":"880","severity":1,"message":"915","line":4,"column":9,"nodeType":"882","messageId":"883","endLine":4,"endColumn":27},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"880","severity":1,"message":"934","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":16},{"ruleId":"880","severity":1,"message":"935","line":3,"column":8,"nodeType":"882","messageId":"883","endLine":3,"endColumn":12},{"ruleId":"880","severity":1,"message":"936","line":4,"column":8,"nodeType":"882","messageId":"883","endLine":4,"endColumn":17},{"ruleId":"880","severity":1,"message":"937","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":11},{"ruleId":"880","severity":1,"message":"938","line":6,"column":8,"nodeType":"882","messageId":"883","endLine":6,"endColumn":11},{"ruleId":"880","severity":1,"message":"939","line":7,"column":8,"nodeType":"882","messageId":"883","endLine":7,"endColumn":17},{"ruleId":"880","severity":1,"message":"940","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":13},{"ruleId":"880","severity":1,"message":"941","line":18,"column":7,"nodeType":"882","messageId":"883","endLine":18,"endColumn":13},{"ruleId":"884","severity":1,"message":"942","line":48,"column":5,"nodeType":"886","endLine":48,"endColumn":16,"suggestions":"943"},{"ruleId":"944","severity":1,"message":"945","line":119,"column":60,"nodeType":"946","messageId":"947","endLine":119,"endColumn":62},{"ruleId":"948","severity":1,"message":"949","line":122,"column":37,"nodeType":"950","endLine":122,"endColumn":144},{"ruleId":"880","severity":1,"message":"951","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":14},{"ruleId":"880","severity":1,"message":"952","line":10,"column":24,"nodeType":"882","messageId":"883","endLine":10,"endColumn":36},{"ruleId":"880","severity":1,"message":"924","line":11,"column":9,"nodeType":"882","messageId":"883","endLine":11,"endColumn":21},{"ruleId":"880","severity":1,"message":"953","line":21,"column":9,"nodeType":"882","messageId":"883","endLine":21,"endColumn":16},{"ruleId":"884","severity":1,"message":"954","line":60,"column":5,"nodeType":"882","endLine":60,"endColumn":14,"suggestions":"955"},{"ruleId":"880","severity":1,"message":"956","line":6,"column":8,"nodeType":"882","messageId":"883","endLine":6,"endColumn":14},{"ruleId":"880","severity":1,"message":"936","line":7,"column":8,"nodeType":"882","messageId":"883","endLine":7,"endColumn":17},{"ruleId":"880","severity":1,"message":"937","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":11},{"ruleId":"880","severity":1,"message":"939","line":9,"column":8,"nodeType":"882","messageId":"883","endLine":9,"endColumn":17},{"ruleId":"880","severity":1,"message":"940","line":10,"column":8,"nodeType":"882","messageId":"883","endLine":10,"endColumn":13},{"ruleId":"880","severity":1,"message":"957","line":38,"column":10,"nodeType":"882","messageId":"883","endLine":38,"endColumn":15},{"ruleId":"880","severity":1,"message":"958","line":42,"column":10,"nodeType":"882","messageId":"883","endLine":42,"endColumn":19},{"ruleId":"880","severity":1,"message":"959","line":42,"column":21,"nodeType":"882","messageId":"883","endLine":42,"endColumn":31},{"ruleId":"944","severity":1,"message":"945","line":46,"column":26,"nodeType":"946","messageId":"947","endLine":46,"endColumn":28},{"ruleId":"880","severity":1,"message":"960","line":52,"column":18,"nodeType":"882","messageId":"883","endLine":52,"endColumn":29},{"ruleId":"880","severity":1,"message":"961","line":127,"column":11,"nodeType":"882","messageId":"883","endLine":127,"endColumn":19},{"ruleId":"884","severity":1,"message":"962","line":131,"column":3,"nodeType":"882","endLine":131,"endColumn":12,"suggestions":"963"},{"ruleId":"948","severity":1,"message":"949","line":247,"column":35,"nodeType":"950","endLine":247,"endColumn":146},{"ruleId":"944","severity":1,"message":"945","line":250,"column":66,"nodeType":"946","messageId":"947","endLine":250,"endColumn":68},{"ruleId":"880","severity":1,"message":"957","line":22,"column":10,"nodeType":"882","messageId":"883","endLine":22,"endColumn":15},{"ruleId":"880","severity":1,"message":"964","line":1,"column":17,"nodeType":"882","messageId":"883","endLine":1,"endColumn":26},{"ruleId":"880","severity":1,"message":"905","line":1,"column":28,"nodeType":"882","messageId":"883","endLine":1,"endColumn":36},{"ruleId":"880","severity":1,"message":"965","line":1,"column":48,"nodeType":"882","messageId":"883","endLine":1,"endColumn":61},{"ruleId":"880","severity":1,"message":"956","line":2,"column":8,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"951","line":3,"column":8,"nodeType":"882","messageId":"883","endLine":3,"endColumn":14},{"ruleId":"880","severity":1,"message":"966","line":4,"column":8,"nodeType":"882","messageId":"883","endLine":4,"endColumn":10},{"ruleId":"880","severity":1,"message":"892","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":18},{"ruleId":"880","severity":1,"message":"967","line":6,"column":10,"nodeType":"882","messageId":"883","endLine":6,"endColumn":14},{"ruleId":"880","severity":1,"message":"923","line":7,"column":8,"nodeType":"882","messageId":"883","endLine":7,"endColumn":13},{"ruleId":"880","severity":1,"message":"968","line":10,"column":71,"nodeType":"882","messageId":"883","endLine":10,"endColumn":90},{"ruleId":"969","severity":1,"message":"970","line":93,"column":26,"nodeType":"950","endLine":93,"endColumn":38},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"908","line":18,"column":10,"nodeType":"886","endLine":18,"endColumn":12,"suggestions":"971"},{"ruleId":"880","severity":1,"message":"972","line":10,"column":22,"nodeType":"882","messageId":"883","endLine":10,"endColumn":33},{"ruleId":"880","severity":1,"message":"936","line":2,"column":9,"nodeType":"882","messageId":"883","endLine":2,"endColumn":18},{"ruleId":"876","replacedBy":"973"},{"ruleId":"878","replacedBy":"974"},{"ruleId":"880","severity":1,"message":"922","line":30,"column":8,"nodeType":"882","messageId":"883","endLine":30,"endColumn":21},{"ruleId":"880","severity":1,"message":"881","line":5,"column":9,"nodeType":"882","messageId":"883","endLine":5,"endColumn":23},{"ruleId":"880","severity":1,"message":"923","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":13},{"ruleId":"880","severity":1,"message":"924","line":9,"column":9,"nodeType":"882","messageId":"883","endLine":9,"endColumn":21},{"ruleId":"880","severity":1,"message":"925","line":9,"column":23,"nodeType":"882","messageId":"883","endLine":9,"endColumn":40},{"ruleId":"880","severity":1,"message":"926","line":10,"column":10,"nodeType":"882","messageId":"883","endLine":10,"endColumn":20},{"ruleId":"969","severity":1,"message":"970","line":37,"column":120,"nodeType":"950","endLine":37,"endColumn":132},{"ruleId":"884","severity":1,"message":"885","line":19,"column":10,"nodeType":"886","endLine":19,"endColumn":12,"suggestions":"975"},{"ruleId":"880","severity":1,"message":"972","line":10,"column":22,"nodeType":"882","messageId":"883","endLine":10,"endColumn":33},{"ruleId":"880","severity":1,"message":"904","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":19},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"908","line":16,"column":10,"nodeType":"886","endLine":16,"endColumn":12,"suggestions":"976"},{"ruleId":"880","severity":1,"message":"892","line":1,"column":47,"nodeType":"882","messageId":"883","endLine":1,"endColumn":55},{"ruleId":"880","severity":1,"message":"893","line":24,"column":9,"nodeType":"882","messageId":"883","endLine":24,"endColumn":18},{"ruleId":"880","severity":1,"message":"894","line":25,"column":9,"nodeType":"882","messageId":"883","endLine":25,"endColumn":15},{"ruleId":"880","severity":1,"message":"895","line":27,"column":9,"nodeType":"882","messageId":"883","endLine":27,"endColumn":21},{"ruleId":"880","severity":1,"message":"896","line":28,"column":9,"nodeType":"882","messageId":"883","endLine":28,"endColumn":14},{"ruleId":"880","severity":1,"message":"897","line":29,"column":9,"nodeType":"882","messageId":"883","endLine":29,"endColumn":15},{"ruleId":"880","severity":1,"message":"898","line":30,"column":9,"nodeType":"882","messageId":"883","endLine":30,"endColumn":18},{"ruleId":"880","severity":1,"message":"899","line":31,"column":9,"nodeType":"882","messageId":"883","endLine":31,"endColumn":15},{"ruleId":"880","severity":1,"message":"900","line":32,"column":9,"nodeType":"882","messageId":"883","endLine":32,"endColumn":17},{"ruleId":"880","severity":1,"message":"901","line":33,"column":9,"nodeType":"882","messageId":"883","endLine":33,"endColumn":15},{"ruleId":"884","severity":1,"message":"902","line":37,"column":7,"nodeType":"886","endLine":37,"endColumn":22,"suggestions":"977"},{"ruleId":"880","severity":1,"message":"905","line":1,"column":37,"nodeType":"882","messageId":"883","endLine":1,"endColumn":45},{"ruleId":"884","severity":1,"message":"906","line":16,"column":7,"nodeType":"886","endLine":16,"endColumn":9,"suggestions":"978"},{"ruleId":"880","severity":1,"message":"889","line":5,"column":9,"nodeType":"882","messageId":"883","endLine":5,"endColumn":13},{"ruleId":"884","severity":1,"message":"913","line":28,"column":7,"nodeType":"886","endLine":28,"endColumn":31,"suggestions":"979"},{"ruleId":"880","severity":1,"message":"936","line":2,"column":9,"nodeType":"882","messageId":"883","endLine":2,"endColumn":18},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"890","line":14,"column":7,"nodeType":"886","endLine":14,"endColumn":9,"suggestions":"980"},{"ruleId":"880","severity":1,"message":"910","line":19,"column":9,"nodeType":"882","messageId":"883","endLine":19,"endColumn":14},{"ruleId":"884","severity":1,"message":"911","line":37,"column":7,"nodeType":"886","endLine":37,"endColumn":32,"suggestions":"981"},{"ruleId":"880","severity":1,"message":"964","line":1,"column":17,"nodeType":"882","messageId":"883","endLine":1,"endColumn":26},{"ruleId":"880","severity":1,"message":"905","line":1,"column":28,"nodeType":"882","messageId":"883","endLine":1,"endColumn":36},{"ruleId":"880","severity":1,"message":"965","line":1,"column":48,"nodeType":"882","messageId":"883","endLine":1,"endColumn":61},{"ruleId":"880","severity":1,"message":"956","line":2,"column":8,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"951","line":3,"column":8,"nodeType":"882","messageId":"883","endLine":3,"endColumn":14},{"ruleId":"880","severity":1,"message":"966","line":4,"column":8,"nodeType":"882","messageId":"883","endLine":4,"endColumn":10},{"ruleId":"880","severity":1,"message":"892","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":18},{"ruleId":"880","severity":1,"message":"967","line":6,"column":10,"nodeType":"882","messageId":"883","endLine":6,"endColumn":14},{"ruleId":"880","severity":1,"message":"923","line":7,"column":8,"nodeType":"882","messageId":"883","endLine":7,"endColumn":13},{"ruleId":"880","severity":1,"message":"968","line":10,"column":71,"nodeType":"882","messageId":"883","endLine":10,"endColumn":90},{"ruleId":"969","severity":1,"message":"970","line":93,"column":26,"nodeType":"950","endLine":93,"endColumn":38},{"ruleId":"969","severity":1,"message":"970","line":220,"column":21,"nodeType":"950","endLine":220,"endColumn":85},{"ruleId":"969","severity":1,"message":"970","line":225,"column":25,"nodeType":"950","endLine":225,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":231,"column":25,"nodeType":"950","endLine":231,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":237,"column":25,"nodeType":"950","endLine":237,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":243,"column":25,"nodeType":"950","endLine":243,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":249,"column":25,"nodeType":"950","endLine":249,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":255,"column":25,"nodeType":"950","endLine":255,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":261,"column":25,"nodeType":"950","endLine":261,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":267,"column":25,"nodeType":"950","endLine":267,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":273,"column":25,"nodeType":"950","endLine":273,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":279,"column":25,"nodeType":"950","endLine":279,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":285,"column":25,"nodeType":"950","endLine":285,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":291,"column":25,"nodeType":"950","endLine":291,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":297,"column":25,"nodeType":"950","endLine":297,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":303,"column":25,"nodeType":"950","endLine":303,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":309,"column":25,"nodeType":"950","endLine":309,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":315,"column":25,"nodeType":"950","endLine":315,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":321,"column":25,"nodeType":"950","endLine":321,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":327,"column":25,"nodeType":"950","endLine":327,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":333,"column":25,"nodeType":"950","endLine":333,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":339,"column":25,"nodeType":"950","endLine":339,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":345,"column":25,"nodeType":"950","endLine":345,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":351,"column":25,"nodeType":"950","endLine":351,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":357,"column":25,"nodeType":"950","endLine":357,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":363,"column":25,"nodeType":"950","endLine":363,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":369,"column":25,"nodeType":"950","endLine":369,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":375,"column":25,"nodeType":"950","endLine":375,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":381,"column":25,"nodeType":"950","endLine":381,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":387,"column":25,"nodeType":"950","endLine":387,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":393,"column":25,"nodeType":"950","endLine":393,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":399,"column":25,"nodeType":"950","endLine":399,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":405,"column":25,"nodeType":"950","endLine":405,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":411,"column":25,"nodeType":"950","endLine":411,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":417,"column":25,"nodeType":"950","endLine":417,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":423,"column":25,"nodeType":"950","endLine":423,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":429,"column":25,"nodeType":"950","endLine":429,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":435,"column":25,"nodeType":"950","endLine":435,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":441,"column":25,"nodeType":"950","endLine":441,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":447,"column":25,"nodeType":"950","endLine":447,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":453,"column":25,"nodeType":"950","endLine":453,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":459,"column":25,"nodeType":"950","endLine":459,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":465,"column":25,"nodeType":"950","endLine":465,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":471,"column":25,"nodeType":"950","endLine":471,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":477,"column":25,"nodeType":"950","endLine":477,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":483,"column":25,"nodeType":"950","endLine":483,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":489,"column":25,"nodeType":"950","endLine":489,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":495,"column":25,"nodeType":"950","endLine":495,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":501,"column":25,"nodeType":"950","endLine":501,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":507,"column":25,"nodeType":"950","endLine":507,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":513,"column":25,"nodeType":"950","endLine":513,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":519,"column":25,"nodeType":"950","endLine":519,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":525,"column":25,"nodeType":"950","endLine":525,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":531,"column":25,"nodeType":"950","endLine":531,"endColumn":64},{"ruleId":"969","severity":1,"message":"970","line":537,"column":25,"nodeType":"950","endLine":537,"endColumn":64},{"ruleId":"880","severity":1,"message":"889","line":1,"column":27,"nodeType":"882","messageId":"883","endLine":1,"endColumn":31},{"ruleId":"880","severity":1,"message":"892","line":1,"column":43,"nodeType":"882","messageId":"883","endLine":1,"endColumn":51},{"ruleId":"880","severity":1,"message":"904","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":19},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"884","severity":1,"message":"908","line":18,"column":10,"nodeType":"886","endLine":18,"endColumn":12,"suggestions":"982"},{"ruleId":"880","severity":1,"message":"956","line":6,"column":8,"nodeType":"882","messageId":"883","endLine":6,"endColumn":14},{"ruleId":"880","severity":1,"message":"936","line":7,"column":8,"nodeType":"882","messageId":"883","endLine":7,"endColumn":17},{"ruleId":"880","severity":1,"message":"937","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":11},{"ruleId":"880","severity":1,"message":"939","line":9,"column":8,"nodeType":"882","messageId":"883","endLine":9,"endColumn":17},{"ruleId":"880","severity":1,"message":"940","line":10,"column":8,"nodeType":"882","messageId":"883","endLine":10,"endColumn":13},{"ruleId":"880","severity":1,"message":"957","line":38,"column":10,"nodeType":"882","messageId":"883","endLine":38,"endColumn":15},{"ruleId":"880","severity":1,"message":"958","line":42,"column":10,"nodeType":"882","messageId":"883","endLine":42,"endColumn":19},{"ruleId":"880","severity":1,"message":"959","line":42,"column":21,"nodeType":"882","messageId":"883","endLine":42,"endColumn":31},{"ruleId":"944","severity":1,"message":"945","line":46,"column":26,"nodeType":"946","messageId":"947","endLine":46,"endColumn":28},{"ruleId":"880","severity":1,"message":"960","line":52,"column":18,"nodeType":"882","messageId":"883","endLine":52,"endColumn":29},{"ruleId":"880","severity":1,"message":"961","line":127,"column":11,"nodeType":"882","messageId":"883","endLine":127,"endColumn":19},{"ruleId":"884","severity":1,"message":"962","line":131,"column":3,"nodeType":"882","endLine":131,"endColumn":12,"suggestions":"983"},{"ruleId":"948","severity":1,"message":"949","line":247,"column":35,"nodeType":"950","endLine":247,"endColumn":146},{"ruleId":"944","severity":1,"message":"945","line":250,"column":66,"nodeType":"946","messageId":"947","endLine":250,"endColumn":68},{"ruleId":"880","severity":1,"message":"957","line":22,"column":10,"nodeType":"882","messageId":"883","endLine":22,"endColumn":15},{"ruleId":"880","severity":1,"message":"951","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":14},{"ruleId":"880","severity":1,"message":"952","line":10,"column":24,"nodeType":"882","messageId":"883","endLine":10,"endColumn":36},{"ruleId":"880","severity":1,"message":"924","line":11,"column":9,"nodeType":"882","messageId":"883","endLine":11,"endColumn":21},{"ruleId":"880","severity":1,"message":"953","line":21,"column":9,"nodeType":"882","messageId":"883","endLine":21,"endColumn":16},{"ruleId":"884","severity":1,"message":"954","line":60,"column":5,"nodeType":"882","endLine":60,"endColumn":14,"suggestions":"984"},{"ruleId":"880","severity":1,"message":"934","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":16},{"ruleId":"880","severity":1,"message":"935","line":3,"column":8,"nodeType":"882","messageId":"883","endLine":3,"endColumn":12},{"ruleId":"880","severity":1,"message":"936","line":4,"column":8,"nodeType":"882","messageId":"883","endLine":4,"endColumn":17},{"ruleId":"880","severity":1,"message":"937","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":11},{"ruleId":"880","severity":1,"message":"938","line":6,"column":8,"nodeType":"882","messageId":"883","endLine":6,"endColumn":11},{"ruleId":"880","severity":1,"message":"939","line":7,"column":8,"nodeType":"882","messageId":"883","endLine":7,"endColumn":17},{"ruleId":"880","severity":1,"message":"940","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":13},{"ruleId":"880","severity":1,"message":"941","line":18,"column":7,"nodeType":"882","messageId":"883","endLine":18,"endColumn":13},{"ruleId":"884","severity":1,"message":"942","line":48,"column":5,"nodeType":"886","endLine":48,"endColumn":16,"suggestions":"985"},{"ruleId":"944","severity":1,"message":"945","line":119,"column":60,"nodeType":"946","messageId":"947","endLine":119,"endColumn":62},{"ruleId":"948","severity":1,"message":"949","line":122,"column":37,"nodeType":"950","endLine":122,"endColumn":144},{"ruleId":"880","severity":1,"message":"916","line":1,"column":22,"nodeType":"882","messageId":"883","endLine":1,"endColumn":46},{"ruleId":"880","severity":1,"message":"917","line":1,"column":171,"nodeType":"882","messageId":"883","endLine":1,"endColumn":183},{"ruleId":"880","severity":1,"message":"915","line":4,"column":9,"nodeType":"882","messageId":"883","endLine":4,"endColumn":27},{"ruleId":"969","severity":1,"message":"970","line":105,"column":5,"nodeType":"950","endLine":105,"endColumn":33},{"ruleId":"880","severity":1,"message":"915","line":4,"column":9,"nodeType":"882","messageId":"883","endLine":4,"endColumn":27},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"880","severity":1,"message":"888","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"889","line":6,"column":9,"nodeType":"882","messageId":"883","endLine":6,"endColumn":13},{"ruleId":"876","replacedBy":"986"},{"ruleId":"878","replacedBy":"987"},"no-native-reassign",["988"],"no-negated-in-lhs",["989"],"no-unused-vars","'getUserProfile' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getApplications', 'getJobs', and 'loaduserusingtoken'. Either include them or remove the dependency array. If 'loaduserusingtoken' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["990"],"'moment' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getApplications'. Either include it or remove the dependency array. If 'getApplications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["991"],"'Redirect' is defined but never used.","'recruiter' is assigned a value but never used.","'status' is assigned a value but never used.","'recruiter_id' is assigned a value but never used.","'title' is assigned a value but never used.","'salary' is assigned a value but never used.","'typeOfJob' is assigned a value but never used.","'rating' is assigned a value but never used.","'deadline' is assigned a value but never used.","'job_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array.",["992"],"'Applicant' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getApplicationsById', 'id', and 'loadJobWithId'. Either include them or remove the dependency array. If 'loadJobWithId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["993"],"React Hook useEffect has missing dependencies: 'getApplications' and 'loaduserusingtoken'. Either include them or remove the dependency array. If 'loaduserusingtoken' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["994"],"'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.contactnumber', 'profile.email', 'profile.name', 'profile.skills', and 'profile.who'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.name', you can also switch to useReducer instead of useState and read 'profile.name' in the reducer.",["995"],"React Hook useEffect has missing dependencies: 'cjob' and 'id'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'cjob', you can also switch to useReducer instead of useState and read 'cjob' in the reducer.",["996"],"'loaduserusingtoken' is defined but never used.","'ERROR_WHILE_DELETING_JOB' is defined but never used.","'GET_ALL_JOBS' is defined but never used.",["988"],["989"],["988"],["989"],"'AllApplicants' is defined but never used.","'axios' is defined but never used.","'API_BASE_URL' is defined but never used.","'ACCESS_TOKEN_NAME' is defined but never used.","'withRouter' is defined but never used.",["997"],["998"],["999"],["1000"],["1001"],["1002"],["1003"],"'Formik' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Badge' is defined but never used.","'socket' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialized'. Either include it or remove the dependency array.",["1004"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Loader' is defined but never used.","'joinChatRoom' is defined but never used.","'sppiner' is assigned a value but never used.","React Hook useEffect contains a call to 'setRedirectLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["1005"],"'Button' is defined but never used.","'rooms' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'handleClick' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect contains a call to 'setRedirectLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [initialized, connectToRoom] as a second argument to the useEffect Hook.",["1006"],"'useEffect' is defined but never used.","'PureComponent' is defined but never used.","'io' is defined but never used.","'Line' is defined but never used.","'ResponsiveContainer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1007"],"'NavDropdown' is defined but never used.",["988"],["989"],["1008"],["1009"],["1010"],["1011"],["1012"],["1013"],["1014"],["1015"],["1016"],["1017"],["1018"],["988"],["989"],"no-global-assign","no-unsafe-negation",{"desc":"1019","fix":"1020"},{"desc":"1021","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1025","fix":"1026"},{"desc":"1027","fix":"1028"},{"desc":"1029","fix":"1030"},{"desc":"1031","fix":"1032"},{"desc":"1019","fix":"1033"},{"desc":"1025","fix":"1034"},{"desc":"1031","fix":"1035"},{"desc":"1023","fix":"1036"},{"desc":"1027","fix":"1037"},{"desc":"1029","fix":"1038"},{"desc":"1021","fix":"1039"},{"desc":"1040","fix":"1041"},{"desc":"1042","fix":"1043"},{"desc":"1044","fix":"1045"},{"desc":"1027","fix":"1046"},{"desc":"1019","fix":"1047"},{"desc":"1027","fix":"1048"},{"desc":"1023","fix":"1049"},{"desc":"1025","fix":"1050"},{"desc":"1031","fix":"1051"},{"desc":"1021","fix":"1052"},{"desc":"1029","fix":"1053"},{"desc":"1027","fix":"1054"},{"desc":"1044","fix":"1055"},{"desc":"1042","fix":"1056"},{"desc":"1040","fix":"1057"},"Update the dependencies array to be: [getApplications, getJobs, loaduserusingtoken]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [getApplications]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [job, loadJobWithId]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [getApplicationsById, id, loadJobWithId]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [getApplications, loaduserusingtoken]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [loading, getUserProfile, profile.name, profile.skills, profile.who, profile.contactnumber, profile.bio, profile.email]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [loading, loadJobWithId, id, cjob]",{"range":"1070","text":"1071"},{"range":"1072","text":"1059"},{"range":"1073","text":"1065"},{"range":"1074","text":"1071"},{"range":"1075","text":"1063"},{"range":"1076","text":"1067"},{"range":"1077","text":"1069"},{"range":"1078","text":"1061"},"Update the dependencies array to be: [initialized, isLoading]",{"range":"1079","text":"1080"},"Add dependencies array: []",{"range":"1081","text":"1082"},"Add dependencies array: [initialized, connectToRoom]",{"range":"1083","text":"1084"},{"range":"1085","text":"1067"},{"range":"1086","text":"1059"},{"range":"1087","text":"1067"},{"range":"1088","text":"1063"},{"range":"1089","text":"1065"},{"range":"1090","text":"1071"},{"range":"1091","text":"1061"},{"range":"1092","text":"1069"},{"range":"1093","text":"1067"},{"range":"1094","text":"1084"},{"range":"1095","text":"1082"},{"range":"1096","text":"1080"},[713,715],"[getApplications, getJobs, loaduserusingtoken]",[497,499],"[getApplications]",[903,918],"[job, loadJobWithId]",[619,621],"[getApplicationsById, id, loadJobWithId]",[611,613],"[getApplications, loaduserusingtoken]",[1145,1170],"[loading, getUserProfile, profile.name, profile.skills, profile.who, profile.contactnumber, profile.bio, profile.email]",[904,928],"[loading, loadJobWithId, id, cjob]",[713,715],[619,621],[904,928],[903,918],[611,613],[1145,1170],[497,499],[1729,1740],"[initialized, isLoading]",[2015,2015],", []",[4347,4347],", [initialized, connectToRoom]",[603,605],[713,715],[611,613],[903,918],[619,621],[904,928],[497,499],[1145,1170],[603,605],[4347,4347],[2015,2015],[1729,1740]]