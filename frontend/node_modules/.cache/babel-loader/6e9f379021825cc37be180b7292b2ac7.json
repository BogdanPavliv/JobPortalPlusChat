{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\applicants\\\\DashboardApplicants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getApplications } from '../../actions/applications';\nimport { Recruiter } from '../../actions/types';\nimport { Link } from 'react-router-dom';\nimport { loaduserusingtoken } from '../../actions/auth';\nimport AllApplicants from '../applicants/AllApplicants';\n\nconst Dashboard = ({\n  auth,\n  applicationjobs: {\n    applicationjobs,\n    loading,\n    cjob\n  },\n  applications,\n  getApplications,\n  loaduserusingtoken\n}) => {\n  _s();\n\n  useEffect(() => {\n    loaduserusingtoken();\n    getJobs();\n    getApplications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading || auth.loading || !auth.user || cjob != null || auth.user.who === 'Recruiter' && !jobs || applications.loading ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 136\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), auth.user && auth.user.who === Recruiter ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), \"All applicants\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AllApplicants, {\n          applicationjobs: applicationjobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  applicationjobs: PropTypes.object.isRequired,\n  loaduserusingtoken: PropTypes.func.isRequired,\n  applications: PropTypes.object.isRequired,\n  getApplications: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.authReducer,\n  applicationjobs: state.applicationjobs,\n  applications: state.applications\n});\n\nexport default connect(mapStateToProps, {\n  getJobs,\n  loaduserusingtoken,\n  getApplications\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/applicants/DashboardApplicants.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getApplications","Recruiter","Link","loaduserusingtoken","AllApplicants","Dashboard","auth","applicationjobs","loading","cjob","applications","getJobs","user","who","jobs","propTypes","func","isRequired","object","mapStateToProps","state","authReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,kBAAR,QAAiC,oBAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAGC,EAAAA,IAAH;AAASC,EAAAA,eAAe,EAAE;AAACA,IAAAA,eAAD;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAA1B;AAA2DC,EAAAA,YAA3D;AAAyEV,EAAAA,eAAzE;AAA0FG,EAAAA;AAA1F,CAAD,KAAmH;AAAA;;AAEjIP,EAAAA,SAAS,CAAC,MAAK;AACXO,IAAAA,kBAAkB;AAClBQ,IAAAA,OAAO;AACPX,IAAAA,eAAe;AAChB,GAJM,EAIJ,EAJI,CAAT;AAKA,sBAAQ,QAAC,QAAD;AAAA,cACCQ,OAAO,IAAIF,IAAI,CAACE,OAAhB,IAA2B,CAACF,IAAI,CAACM,IAAjC,IAAyCH,IAAI,IAAE,IAA/C,IAAwDH,IAAI,CAACM,IAAL,CAAUC,GAAV,KAAkB,WAAlB,IAAiC,CAACC,IAA1F,IAAmGJ,YAAY,CAACF,OAAhH,gBAA0H,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1H,gBACT,QAAC,QAAD;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGSF,IAAI,CAACM,IAAL,IAAaN,IAAI,CAACM,IAAL,CAAUC,GAAV,KAAkBZ,SAA/B,gBACD,QAAC,QAAD;AAAA,gCACI;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,aAAD;AAAe,UAAA,eAAe,EAAEM;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBASD,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ;AAAA;AAAA;AAAA;AAAA,UAAR;AAoBH,CA3BD;;GAAMF,S;;KAAAA,S;AA6BNA,SAAS,CAACU,SAAV,GAAsB;AAClBJ,EAAAA,OAAO,EAAEb,SAAS,CAACkB,IAAV,CAAeC,UADN;AAElBX,EAAAA,IAAI,EAAER,SAAS,CAACoB,MAAV,CAAiBD,UAFL;AAGlBV,EAAAA,eAAe,EAAET,SAAS,CAACoB,MAAV,CAAiBD,UAHhB;AAIlBd,EAAAA,kBAAkB,EAAEL,SAAS,CAACkB,IAAV,CAAeC,UAJjB;AAKlBP,EAAAA,YAAY,EAAEZ,SAAS,CAACoB,MAAV,CAAiBD,UALb;AAMlBjB,EAAAA,eAAe,EAAEF,SAAS,CAACkB,IAAV,CAAeC;AANd,CAAtB;;AAQA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACC,WADoB;AAEhCd,EAAAA,eAAe,EAAEa,KAAK,CAACb,eAFS;AAGhCG,EAAAA,YAAY,EAAEU,KAAK,CAACV;AAHY,CAAZ,CAAxB;;AAMA,eAAeX,OAAO,CAACoB,eAAD,EAAkB;AAAER,EAAAA,OAAF;AAAWR,EAAAA,kBAAX;AAA+BH,EAAAA;AAA/B,CAAlB,CAAP,CAA0EK,SAA1E,CAAf","sourcesContent":["import React , {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getApplications } from '../../actions/applications';\r\nimport { Recruiter } from '../../actions/types';\r\nimport {Link} from 'react-router-dom';\r\nimport {loaduserusingtoken} from '../../actions/auth';\r\nimport AllApplicants from '../applicants/AllApplicants';\r\n\r\n\r\n\r\nconst Dashboard = ({  auth, applicationjobs: {applicationjobs, loading, cjob},applications, getApplications, loaduserusingtoken}) => {\r\n    \r\n    useEffect(()=> {\r\n        loaduserusingtoken();\r\n        getJobs();\r\n        getApplications();\r\n      }, []);\r\n    return (<Fragment>\r\n            {loading || auth.loading || !auth.user || cjob!=null || (auth.user.who === 'Recruiter' && !jobs) || applications.loading ? <Fragment>Loading...</Fragment> : \r\n    <Fragment>\r\n\r\n        <h1>Dashboard</h1>\r\n            {auth.user && auth.user.who === Recruiter ? \r\n            <Fragment>\r\n                <h3> \r\n                    <i className=\"fas fa-user\"></i>\r\n                    All applicants\r\n                </h3>\r\n                <AllApplicants applicationjobs={applicationjobs}/>\r\n            </Fragment>\r\n            :\r\n            <Fragment>\r\n               \r\n            </Fragment>\r\n            }\r\n    </Fragment>}\r\n    </Fragment>);\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getJobs: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    applicationjobs: PropTypes.object.isRequired,\r\n    loaduserusingtoken: PropTypes.func.isRequired,\r\n    applications: PropTypes.object.isRequired,\r\n    getApplications: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.authReducer,\r\n    applicationjobs: state.applicationjobs,\r\n    applications: state.applications, \r\n});\r\n\r\nexport default connect(mapStateToProps, { getJobs ,loaduserusingtoken, getApplications})(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}