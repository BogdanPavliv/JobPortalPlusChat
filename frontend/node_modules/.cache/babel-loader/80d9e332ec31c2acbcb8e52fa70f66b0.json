{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\salary\\\\SalaryChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Loader from \"react-loader-spinner\";\nimport io from \"socket.io-client\";\nimport { Redirect } from \"react-router\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from 'axios';\n\nconst SalaryChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [employeeSalary, setEmployeeSalary] = useState([]);\n  const [employeeAge, setEmployeeAge] = useState([]);\n\n  const chart = async () => {\n    const empSal = [];\n    const empAge = [];\n\n    try {\n      const res = await axios.get('http://dummy.restapiexample.com/api/v1/employees');\n      console.log(res);\n\n      for (const dataObj of res.data.data) {\n        empSal.push(parseInt(dataObj.employee_salary));\n        empAge.push(parseInt(dataObj.employee_age));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(empSal, empAge);\n    setChartData({\n      labels: empAge,\n      datasets: [{\n        label: \"level of thickness\",\n        data: empSal,\n        backgroundColor: [\"rgba(75,192,192,0.6)\"],\n        borderWidth: 4\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Dankmemes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        title: {\n          text: \"THICKNESS SCALE\",\n          display: true\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10,\n              beginAtZero: true\n            },\n            gridLines: {\n              display: false\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              display: false\n            }\n          }]\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SalaryChart, \"Gr2EyHXKfq5+vMNq33fK7I3+S40=\");\n\n_c = SalaryChart;\nexport default SalaryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryChart\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/salary/SalaryChart.js"],"names":["React","useEffect","useState","Button","Loader","io","Redirect","Line","axios","SalaryChart","chartData","setChartData","employeeSalary","setEmployeeSalary","employeeAge","setEmployeeAge","chart","empSal","empAge","res","get","console","log","dataObj","data","push","parseInt","employee_salary","employee_age","error","labels","datasets","label","backgroundColor","borderWidth","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AACC,QAAK,CAACY,WAAD,EAAaC,cAAb,IAA6Bb,QAAQ,CAAC,EAAD,CAA1C;;AAED,QAAMc,KAAK,GAAG,YAAY;AACtB,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAI;AACA,YAAOC,GAAG,GAAI,MAAMX,KAAK,CAACY,GAAN,CAAU,kDAAV,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,WAAK,MAAMI,OAAX,IAAsBJ,GAAG,CAACK,IAAJ,CAASA,IAA/B,EAAqC;AACjCP,QAAAA,MAAM,CAACQ,IAAP,CAAYC,QAAQ,CAACH,OAAO,CAACI,eAAT,CAApB;AACAT,QAAAA,MAAM,CAACO,IAAP,CAAYC,QAAQ,CAACH,OAAO,CAACK,YAAT,CAApB;AACH;AAEJ,KARD,CAQE,OAAOC,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAmBC,MAAnB;AACFP,IAAAA,YAAY,CAAC;AAEbmB,MAAAA,MAAM,EAAEZ,MAFK;AAGba,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,oBADT;AAEER,QAAAA,IAAI,EAAEP,MAFR;AAGEgB,QAAAA,eAAe,EAAE,CAAC,sBAAD,CAHnB;AAIEC,QAAAA,WAAW,EAAE;AAJf,OADQ;AAHG,KAAD,CAAZ;AAYH,GA3BC;;AA4BFjC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEN,SADR;AAEE,MAAA,OAAO,EAAE;AACPyB,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,iBAAR;AAA2BC,UAAAA,OAAO,EAAE;AAApC,SAFA;AAGPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAE,IADL;AAELC,cAAAA,aAAa,EAAE,EAFV;AAGLC,cAAAA,WAAW,EAAE;AAHR,aADT;AAMEC,YAAAA,SAAS,EAAE;AACTP,cAAAA,OAAO,EAAE;AADA;AANb,WADK,CADD;AAaNQ,UAAAA,KAAK,EAAE,CACL;AACED,YAAAA,SAAS,EAAE;AACTP,cAAAA,OAAO,EAAE;AADA;AADb,WADK;AAbD;AAHD;AAFX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAtED;;GAAM7B,W;;KAAAA,W;AAuEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport io from \"socket.io-client\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst SalaryChart = () => {\r\n    const [chartData, setChartData] = useState({});\r\n    const [employeeSalary, setEmployeeSalary] = useState([])\r\n     const[employeeAge,setEmployeeAge]=useState([])\r\n\r\n    const chart = async () => {\r\n        const empSal = [];\r\n        const empAge = [];\r\n        try {\r\n            const  res  = await axios.get('http://dummy.restapiexample.com/api/v1/employees')\r\n            console.log(res)\r\n            for (const dataObj of res.data.data) {\r\n                empSal.push(parseInt(dataObj.employee_salary))\r\n                empAge.push(parseInt(dataObj.employee_age))\r\n            }\r\n            \r\n        } catch (error) { \r\n            console.log(error)\r\n        }\r\n        console.log(empSal,empAge)\r\n      setChartData({\r\n        \r\n      labels: empAge,\r\n      datasets: [\r\n        {\r\n          label: \"level of thickness\",\r\n          data: empSal,\r\n          backgroundColor: [\"rgba(75,192,192,0.6)\"],\r\n          borderWidth: 4,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h3>Dankmemes</h3>\r\n      <Line\r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          title: { text: \"THICKNESS SCALE\", display: true },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  autoSkip: true,\r\n                  maxTicksLimit: 10,\r\n                  beginAtZero: true,\r\n                },\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n            xAxes: [\r\n              {\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n  \r\n}\r\nexport default SalaryChart;"]},"metadata":{},"sourceType":"module"}