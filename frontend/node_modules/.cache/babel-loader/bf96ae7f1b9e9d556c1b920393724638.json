{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\applicants\\\\AllApplicants.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../actions/jobs';\nimport moment from \"moment\";\nimport { Link } from 'react-router-dom'; // import deleteJob from '../../actions/jobs';\n\nimport { changeStatus } from '../../actions/applications';\nimport { getApplicationsById } from '../../actions/applications';\n\nconst AllApplicants = ({\n  applicationjobs,\n  changeStatus,\n  getApplicationsById\n}) => {\n  _s();\n\n  const id = match.params.id;\n  useEffect(() => {\n    getApplicationsById(id);\n  }, []);\n  applicationjobs = applicationjobs.filter(val => val.status !== 'Rejected' && val.status !== 'Accepted');\n  const code = applicationjobs.map(({\n    applicant: {\n      name,\n      skills\n    },\n    dateOfJoining,\n    dateOfApplication,\n    sop,\n    status,\n    job_id,\n    _id\n  }) => /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [name ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name Of Applicant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), skills ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Skills of Applicant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: skills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), dateOfApplication ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date Of Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: dateOfApplication\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this), sop ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Statement Of Purpose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: sop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), status ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Stage of application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: status === 'Applied' ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: e => changeStatus({\n              _id,\n              status,\n              newstatus: 'Shortlist',\n              nopositions: 0,\n              noapplications: 0,\n              job_id\n            }),\n            children: \"Shortlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this) : status === 'Shortlist' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: e => changeStatus({\n            _id,\n            status,\n            newstatus: 'Accepted',\n            nopositions: 1,\n            noapplications: 0,\n            job_id\n          }),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), status !== 'Accepted' ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: e => changeStatus({\n            _id,\n            status,\n            newstatus: 'Rejected',\n            nopositions: 0,\n            noapplications: -1,\n            job_id\n          }),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }, this)]\n  }, _id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 15\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllApplicants, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AllApplicants;\nAllApplicants.propTypes = {\n  applicationsjob: PropTypes.array.isRequired,\n  changeStatus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  applicationsjob: state.applications.applications\n});\n\nexport default connect(mapStateToProps, {\n  changeStatus\n})(AllApplicants);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllApplicants\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/applicants/AllApplicants.js"],"names":["React","Fragment","PropTypes","connect","moment","Link","changeStatus","getApplicationsById","AllApplicants","applicationjobs","id","match","params","useEffect","filter","val","status","code","map","applicant","name","skills","dateOfJoining","dateOfApplication","sop","job_id","_id","e","newstatus","nopositions","noapplications","propTypes","applicationsjob","array","isRequired","func","mapStateToProps","state","applications"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAe,oBAAf;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;;AACA,SAAQC,YAAR,QAA2B,4BAA3B;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBH,EAAAA,YAAlB;AAAgCC,EAAAA;AAAhC,CAAD,KAA0D;AAAA;;AAC5E,QAAMG,EAAE,GAAGC,KAAK,CAACC,MAAN,CAAaF,EAAxB;AACAG,EAAAA,SAAS,CAAC,MAAI;AAEVN,IAAAA,mBAAmB,CAACG,EAAD,CAAnB;AACH,GAHQ,EAGP,EAHO,CAAT;AAKAD,EAAAA,eAAe,GAAIA,eAAe,CAACK,MAAhB,CAAwBC,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAe,UAAf,IAA6BD,GAAG,CAACC,MAAJ,KAAc,UAA3E,CAAnB;AACA,QAAMC,IAAI,GAAGR,eAAe,CAACS,GAAhB,CAAoB,CAAC;AAC9BC,IAAAA,SAAS,EAAE;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,KADmB;AAE9BC,IAAAA,aAF8B;AAG9BC,IAAAA,iBAH8B;AAI9BC,IAAAA,GAJ8B;AAK9BR,IAAAA,MAL8B;AAM9BS,IAAAA,MAN8B;AAO9BC,IAAAA;AAP8B,GAAD,kBAQvB;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA,eAEbN,IAAI,gBACL,QAAC,QAAD;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADK,gBAQL,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVc,EAYbC,MAAM,gBACP,QAAC,QAAD;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADO,gBAQP,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBc,EAuBbE,iBAAiB,gBAClB,QAAC,QAAD;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADkB,gBAQlB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/Bc,EAkCbC,GAAG,gBACJ,QAAC,QAAD;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,gBAQJ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1Cc,EA4CbR,MAAM,gBACP,QAAC,QAAD;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADO,gBAQP,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApDc,eAsDd;AAAA,8BACI;AAAA,kBAGAA,MAAM,KAAK,SAAX,gBACA,QAAC,QAAD;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAGW,CAAD,IAAOrB,YAAY,CAAC;AAACoB,cAAAA,GAAD;AAAKV,cAAAA,MAAL;AAAaY,cAAAA,SAAS,EAAE,WAAxB;AAAqCC,cAAAA,WAAW,EAAE,CAAlD;AAAqDC,cAAAA,cAAc,EAAE,CAArE;AAAuEL,cAAAA;AAAvE,aAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,GAMIT,MAAM,KAAK,WAAX,gBACA;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAGW,CAAD,IAAOrB,YAAY,CAAC;AAACoB,YAAAA,GAAD;AAAKV,YAAAA,MAAL;AAAaY,YAAAA,SAAS,EAAE,UAAxB;AAAoCC,YAAAA,WAAW,EAAE,CAAjD;AAAoDC,YAAAA,cAAc,EAAE,CAApE;AAAuEL,YAAAA;AAAvE,WAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,gBAGA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAiBKT,MAAM,KAAK,UAAX,gBAAwB;AAAA,+BACzB;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAGW,CAAD,IAAOrB,YAAY,CAAC;AAACoB,YAAAA,GAAD;AAAKV,YAAAA,MAAL;AAAaY,YAAAA,SAAS,EAAE,UAAxB;AAAoCC,YAAAA,WAAW,EAAE,CAAjD;AAAoDC,YAAAA,cAAc,EAAE,CAAC,CAArE;AAAwEL,YAAAA;AAAxE,WAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADyB;AAAA;AAAA;AAAA;AAAA,cAAxB,gBAID,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtDc;AAAA,KAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA,UARG,CAAb;AAyFA,sBACI,QAAC,QAAD;AAAA,cAEKT;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvGD;;GAAMT,a;;KAAAA,a;AAyGNA,aAAa,CAACuB,SAAd,GAA0B;AACtBC,EAAAA,eAAe,EAAE9B,SAAS,CAAC+B,KAAV,CAAgBC,UADX;AAEtB5B,EAAAA,YAAY,EAAEJ,SAAS,CAACiC,IAAV,CAAeD;AAFP,CAA1B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BL,EAAAA,eAAe,EAAEK,KAAK,CAACC,YAAN,CAAmBA;AADN,CAAL,CAA7B;;AAGA,eAAenC,OAAO,CAACiC,eAAD,EAAkB;AAAC9B,EAAAA;AAAD,CAAlB,CAAP,CAAyCE,aAAzC,CAAf","sourcesContent":["import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {} from '../../actions/jobs';\r\nimport moment from \"moment\";\r\nimport {Link} from 'react-router-dom';\r\n// import deleteJob from '../../actions/jobs';\r\nimport {changeStatus} from '../../actions/applications';\r\nimport {getApplicationsById} from '../../actions/applications';\r\n\r\n\r\nconst AllApplicants = ({applicationjobs, changeStatus, getApplicationsById}) => {\r\n    const id = match.params.id;\r\n    useEffect(()=>{\r\n       \r\n        getApplicationsById(id);\r\n    },[]);\r\n    \r\n    applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\r\n    const code = applicationjobs.map(({\r\n        applicant: {name,skills},\r\n        dateOfJoining,\r\n        dateOfApplication,\r\n        sop,\r\n        status,\r\n        job_id,\r\n        _id\r\n        }) => <table className='table' key={_id}>\r\n        \r\n{name ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Name Of Applicant</th>\r\n        <td>{name}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{skills ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Skills of Applicant</th>\r\n        <td>{skills}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{dateOfApplication ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Date Of Application</th>\r\n        <td>{dateOfApplication}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{sop ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Statement Of Purpose</th>\r\n        <td>{sop}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{status ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Stage of application</th>\r\n        <td>{status}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n    \r\n<tr>\r\n    <td>\r\n    \r\n    {\r\n    status === 'Applied' ? \r\n    <Fragment>\r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Shortlist</button>\r\n    </Fragment>\r\n    :\r\n    (\r\n        status === 'Shortlist' ? \r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Accept</button>\r\n        :\r\n        <Fragment/>\r\n    )\r\n    }    \r\n    </td>\r\n    {status !== 'Accepted' ? <td>\r\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Reject</button>\r\n    </td>\r\n    :\r\n    <Fragment/>\r\n}\r\n    \r\n    </tr>\r\n\r\n</table>)\r\n    return (\r\n        <Fragment>\r\n            \r\n            {code}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nAllApplicants.propTypes = {\r\n    applicationsjob: PropTypes.array.isRequired,\r\n    changeStatus: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    applicationsjob: state.applications.applications\r\n});\r\nexport default connect(mapStateToProps, {changeStatus})(AllApplicants\r\n);\r\n"]},"metadata":{},"sourceType":"module"}