{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setalert } from '../../actions/alert';\nimport { registeruser } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport \"../../static/style.css\";\nexport const Register = ({\n  setalert,\n  registeruser,\n  isUserVerified,\n  user\n}) => {\n  _s();\n\n  const [registerdata, setregisterdata] = useState({\n    who: '',\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    who,\n    name,\n    email,\n    password,\n    password2\n  } = registerdata;\n\n  const onChange = e => {\n    // console.log(e.target.value);\n    setregisterdata({ ...registerdata,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setalert(\"Passwords donot match\", 'danger'); // console.log('Hi');\n    } else if (who !== 'Applicant' && who !== 'Recruiter') {\n      setalert(\"Please select your role\", 'danger'); // console.log(\"Nothing is selected\");\n    } else {\n      registeruser({\n        name,\n        email,\n        who,\n        password\n      });\n    }\n  };\n\n  if (isUserVerified && user) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this), \" Create Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"custom-select\",\n          name: \"who\",\n          value: who,\n          onChange: e => onChange(e),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            children: \"Which option best describes you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Applicant\",\n            children: \"Applicant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Recruiter\",\n            children: \"Recruiter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          minLength: \"6\",\n          required: true,\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          minLength: \"6\",\n          required: true,\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"9z2FK8HDSu9rX0UKn1P0LV2z6Hc=\");\n\n_c = Register;\nRegister.propTypes = {\n  setalert: PropTypes.func.isRequired,\n  registeruser: PropTypes.func.isRequired,\n  isUserVerified: PropTypes.bool,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isUserVerified: state.authReducer.userVerified,\n  user: state.authReducer.user\n});\n\nexport default connect(mapStateToProps, {\n  setalert,\n  registeruser\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setalert","registeruser","PropTypes","Register","isUserVerified","user","registerdata","setregisterdata","who","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","object","mapStateToProps","state","authReducer","userVerified"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Fragment , useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setalert} from '../../actions/alert';\nimport { registeruser } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport \"../../static/style.css\"\n\n\nexport const Register = ({setalert, registeruser, isUserVerified, user}) => {\n\n    const [registerdata, setregisterdata] = useState({\n      who: '',\n      name: '',\n      email: '',\n      password: '',\n      password2: ''\n    });\n    const {who , name , email, password, password2} = registerdata;\n\n    const onChange = (e) => {\n      // console.log(e.target.value);\n      setregisterdata({ ...registerdata, [e.target.name]: e.target.value});\n    };\n\n    const onSubmit = async (e) => {\n      e.preventDefault();\n      if(password !== password2)\n      {\n        setalert(\"Passwords donot match\", 'danger');\n        // console.log('Hi');\n      }\n      else if (who !== 'Applicant' && who !== 'Recruiter')\n      {\n        setalert(\"Please select your role\", 'danger');\n        // console.log(\"Nothing is selected\");\n      }\n      else{\n        registeruser({name, email, who, password});\n      }\n    }\n    if(isUserVerified && user)\n    {\n      return (\n        <Redirect to='/profile'></Redirect>\n      );\n    }\n    return (\n        <Fragment>\n        <h1>Sign Up</h1>\n      <p><i className=\"fas fa-user\"></i> Create Your Account</p>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select class=\"custom-select\" name=\"who\" value={who} onChange={e => onChange(e)} required>\n       <option selected>Which option best describes you</option>\n        <option value=\"Applicant\">Applicant</option>\n        <option value=\"Recruiter\">Recruiter</option>\n</select>\n</div>\n        \n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)} required />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)}/>\n        </div>\n        <div className=\"form-group\">\n          <input\n          className=\"form-control\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            minLength=\"6\"\n            required\n            value={password} onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n          className=\"form-control\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            minLength=\"6\"\n            required\n            value={password2} onChange={e => onChange(e)}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/Login\">Sign In</Link>\n      </p>\n        </Fragment>\n    )\n}\n\nRegister.propTypes = {\n  setalert: PropTypes.func.isRequired,\n  registeruser: PropTypes.func.isRequired,\n  isUserVerified: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isUserVerified: state.authReducer.userVerified,\n  user: state.authReducer.user\n});\n\n\nexport default connect(mapStateToProps, {setalert, registeruser})(Register);"]},"metadata":{},"sourceType":"module"}