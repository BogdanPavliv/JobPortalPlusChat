{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0424\\u0456\\u043D\\u0430\\u043B\\u044C\\u043D\\u0438\\u0439 \\u0432\\u0430\\u0440\\u0456\\u0430\\u043D\\u0442 \\u0434\\u0438\\u043F\\u043B\\u043E\\u043C\\u0443\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\dashboard\\\\AddSOP.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState, Redirect } from 'react';\nimport PropTypes from 'prop-types';\nimport { loadJobWithId } from '../../actions/jobs';\nimport { connect } from 'react-redux';\nimport { newApplication } from '../../actions/applications';\n\nconst AddSOP = ({\n  match,\n  jobs: {\n    cjob,\n    loading\n  },\n  loadJobWithId,\n  newApplication\n}) => {\n  _s();\n\n  const job = match.params.id; // console.log(job);\n\n  const [formData, setFormData] = useState({\n    recruiter: '',\n    status: 'Applied',\n    sop: '',\n    title: '',\n    salary: '',\n    typeOfJob: '',\n    rating: '',\n    job_id: '',\n    deadline: ''\n  });\n  const {\n    recruiter,\n    status,\n    sop,\n    recruiter_id,\n    title,\n    salary,\n    typeOfJob,\n    rating,\n    deadline,\n    job_id\n  } = formData;\n  useEffect(() => {\n    loadJobWithId(job);\n  }, [loadJobWithId]);\n\n  if (!cjob || loading) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  } // console.log(deadline);\n\n\n  const onChange = e => {\n    console.log(e.target.value);\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value,\n      recruiter: cjob.recruiter_id,\n      title: cjob.title,\n      salary: cjob.salary,\n      typeOfJob: cjob.typeOfJob,\n      job_id: job,\n      deadline: cjob.deadline\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    newApplication(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"id1\",\n          children: \"Statement Of Purpose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          id: \"id1\",\n          className: \"form-control\",\n          rows: \"5\",\n          placeholder: \"SOP\",\n          name: \"sop\",\n          value: sop,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Submit Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddSOP, \"o3ZtVaS/vkxuQ4IX2GxBtyMG3+Y=\");\n\n_c = AddSOP;\nAddSOP.propTypes = {\n  jobs: PropTypes.object.isRequired,\n  loadJobWithId: PropTypes.array,\n  newApplication: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs\n});\n\nexport default connect(mapStateToProps, {\n  newApplication,\n  loadJobWithId\n})(AddSOP);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSOP\");","map":{"version":3,"sources":["D:/0Фінальний варіант диплому/Job-Portal-Redux/frontend/src/components/dashboard/AddSOP.js"],"names":["React","Fragment","useEffect","useState","Redirect","PropTypes","loadJobWithId","connect","newApplication","AddSOP","match","jobs","cjob","loading","job","params","id","formData","setFormData","recruiter","status","sop","title","salary","typeOfJob","rating","job_id","deadline","recruiter_id","onChange","e","console","log","target","value","name","onSubmit","preventDefault","propTypes","object","isRequired","array","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState, Redirect} from 'react'\nimport PropTypes from 'prop-types'\nimport { loadJobWithId } from '../../actions/jobs';\nimport {connect} from 'react-redux';\nimport {newApplication} from '../../actions/applications';\n\nconst AddSOP = ({match, jobs: {cjob, loading}, loadJobWithId, newApplication}) => {\n    const job = match.params.id;\n\n    // console.log(job);\n    const [formData, setFormData] = useState({\n        recruiter: '',\n        status: 'Applied',\n        sop: '',\n        title: '',\n        salary: '',\n        typeOfJob: '',\n        rating: '',\n        job_id: '',\n        deadline: ''\n      });\n      \n    const {\n        recruiter,\n        status,\n        sop,\n        recruiter_id,\n        title,\n        salary,\n        typeOfJob,\n        rating,\n        deadline,\n        job_id\n    } = formData;\n    useEffect(()=>{\n        loadJobWithId(job);\n    },[loadJobWithId]);\n    if(!cjob || loading){\n      return <Fragment>Loading.....</Fragment>\n    }\n    // console.log(deadline);\n        const onChange = (e) => {\n            console.log(e.target.value);\n            setFormData({ ...formData, [e.target.name]: e.target.value,\n              recruiter: cjob.recruiter_id, title: cjob.title, salary: cjob.salary, typeOfJob: cjob.typeOfJob, job_id: job, deadline: cjob.deadline\n            });\n          };\n      \n        const onSubmit =  (e) => {\n            e.preventDefault();\n            newApplication(formData);\n          }\n    return (\n        <Fragment>\n        <h1>Подати заявку</h1>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <label for=\"id1\">Statement Of Purpose</label>\n          <textarea type=\"text\" id='id1' className=\"form-control\" rows='5' placeholder=\"SOP\"  name=\"sop\"  value={sop} onChange={e => onChange(e)} required></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Application\" />\n      </form>\n        </Fragment>\n    )\n}\n\nAddSOP.propTypes = {\n    jobs: PropTypes.object.isRequired,\n    loadJobWithId: PropTypes.array,\n    newApplication: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs,\n});\n\nexport default connect(mapStateToProps, {newApplication, loadJobWithId})(AddSOP);\n"]},"metadata":{},"sourceType":"module"}