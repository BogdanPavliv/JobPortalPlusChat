{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\applicants\\\\DashboardApplicants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getApplications } from '../../actions/applications';\nimport { Recruiter } from '../../actions/types';\nimport { Link } from 'react-router-dom';\nimport { loaduserusingtoken } from '../../actions/auth';\nimport AllApplicants from '../applicants/AllApplicants';\n\nconst Dashboard = ({\n  auth,\n  applicationjobs: {\n    applicationjobs,\n    loading,\n    cjob\n  },\n  applications,\n  getApplications,\n  loaduserusingtoken\n}) => {\n  _s();\n\n  useEffect(() => {\n    loaduserusingtoken();\n    getApplications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  applicationjobs: PropTypes.object.isRequired,\n  loaduserusingtoken: PropTypes.func.isRequired,\n  applications: PropTypes.object.isRequired,\n  getApplications: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.authReducer,\n  applicationjobs: state.applicationjobs,\n  applications: state.applications\n});\n\nexport default connect(mapStateToProps, {\n  loaduserusingtoken,\n  getApplications\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/applicants/DashboardApplicants.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getApplications","Recruiter","Link","loaduserusingtoken","AllApplicants","Dashboard","auth","applicationjobs","loading","cjob","applications","propTypes","getJobs","func","isRequired","object","mapStateToProps","state","authReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,kBAAR,QAAiC,oBAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAGC,EAAAA,IAAH;AAASC,EAAAA,eAAe,EAAE;AAACA,IAAAA,eAAD;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAA1B;AAA2DC,EAAAA,YAA3D;AAAyEV,EAAAA,eAAzE;AAA0FG,EAAAA;AAA1F,CAAD,KAAmH;AAAA;;AAEjIP,EAAAA,SAAS,CAAC,MAAK;AACXO,IAAAA,kBAAkB;AAElBH,IAAAA,eAAe;AAChB,GAJM,EAIJ,EAJI,CAAT;AAKA,sBAAQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAR;AAGH,CAVD;;GAAMK,S;;KAAAA,S;AAYNA,SAAS,CAACM,SAAV,GAAsB;AAClBC,EAAAA,OAAO,EAAEd,SAAS,CAACe,IAAV,CAAeC,UADN;AAElBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD,UAFL;AAGlBP,EAAAA,eAAe,EAAET,SAAS,CAACiB,MAAV,CAAiBD,UAHhB;AAIlBX,EAAAA,kBAAkB,EAAEL,SAAS,CAACe,IAAV,CAAeC,UAJjB;AAKlBJ,EAAAA,YAAY,EAAEZ,SAAS,CAACiB,MAAV,CAAiBD,UALb;AAMlBd,EAAAA,eAAe,EAAEF,SAAS,CAACe,IAAV,CAAeC;AANd,CAAtB;;AAQA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACC,WADoB;AAEhCX,EAAAA,eAAe,EAAEU,KAAK,CAACV,eAFS;AAGhCG,EAAAA,YAAY,EAAEO,KAAK,CAACP;AAHY,CAAZ,CAAxB;;AAMA,eAAeX,OAAO,CAACiB,eAAD,EAAkB;AAACb,EAAAA,kBAAD;AAAqBH,EAAAA;AAArB,CAAlB,CAAP,CAAgEK,SAAhE,CAAf","sourcesContent":["import React , {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getApplications } from '../../actions/applications';\r\nimport { Recruiter } from '../../actions/types';\r\nimport {Link} from 'react-router-dom';\r\nimport {loaduserusingtoken} from '../../actions/auth';\r\nimport AllApplicants from '../applicants/AllApplicants';\r\n\r\n\r\n\r\nconst Dashboard = ({  auth, applicationjobs: {applicationjobs, loading, cjob},applications, getApplications, loaduserusingtoken}) => {\r\n    \r\n    useEffect(()=> {\r\n        loaduserusingtoken();\r\n        \r\n        getApplications();\r\n      }, []);\r\n    return (<Fragment>\r\n            \r\n    </Fragment>);\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getJobs: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    applicationjobs: PropTypes.object.isRequired,\r\n    loaduserusingtoken: PropTypes.func.isRequired,\r\n    applications: PropTypes.object.isRequired,\r\n    getApplications: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.authReducer,\r\n    applicationjobs: state.applicationjobs,\r\n    applications: state.applications, \r\n});\r\n\r\nexport default connect(mapStateToProps, {loaduserusingtoken, getApplications})(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}