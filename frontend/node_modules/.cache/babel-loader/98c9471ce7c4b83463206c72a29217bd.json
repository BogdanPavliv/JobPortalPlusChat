{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\chat\\\\ChatRoomPage\\\\ChatRoomPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport io from \"socket.io-client\";\nimport \"../ChatRoomPage/\";\nimport { getChatRoomMessages, getChatRooms } from \"../../../utils/requests\";\nconst SOCKET_IO_URL = \"http://localhost:4000\";\nconst socket = io(SOCKET_IO_URL);\n\nconst getChatData = () => {\n  return JSON.parse(localStorage.getItem(\"chatData\"));\n};\n\nconst schema = yup.object({\n  message: yup.string().required(\"Message is required\")\n});\n\nfunction ChatRoomPage() {\n  _s();\n\n  const [initialized, setInitialized] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [rooms, setRooms] = useState([]);\n\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt);\n\n    if (!isValid) {\n      return;\n    }\n\n    const data = Object.assign({}, evt);\n    data.chatRoomName = getChatData().chatRoomName;\n    data.author = getChatData().handle;\n    data.message = evt.message;\n    socket.emit(\"message\", data);\n  };\n\n  const connectToRoom = () => {\n    socket.on(\"connect\", data => {\n      socket.emit(\"join\", getChatData().chatRoomName);\n    });\n    socket.on(\"newMessage\", data => {\n      getMessages();\n    });\n    setInitialized(true);\n  };\n\n  const getMessages = async () => {\n    const response = await getChatRoomMessages(getChatData().chatRoomName);\n    setMessages(response.data);\n    setInitialized(true);\n  };\n\n  const getRooms = async () => {\n    const response = await getChatRooms();\n    setRooms(response.data);\n    setInitialized(true);\n  };\n\n  useEffect(() => {\n    if (!initialized) {\n      getMessages();\n      connectToRoom();\n      getRooms();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat Room: \", getChatData().chatRoomName, \". Chat Handle:\", \" \", getChatData().handle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((m, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: m.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: m.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: m.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: handleSubmit,\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isInvalid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"12\",\n            controlId: \"handle\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"message\",\n              placeholder: \"Message\",\n              value: values.message || \"\",\n              onChange: handleChange,\n              isInvalid: touched.message && errors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatRoomPage, \"H8oY7g+Pkbm1Q/Lr0ABi7Ra3HTA=\");\n\n_c = ChatRoomPage;\nexport default ChatRoomPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoomPage\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/chat/ChatRoomPage/ChatRoomPage.js"],"names":["React","useEffect","useState","Formik","Form","Col","Button","yup","io","getChatRoomMessages","getChatRooms","SOCKET_IO_URL","socket","getChatData","JSON","parse","localStorage","getItem","schema","object","message","string","required","ChatRoomPage","initialized","setInitialized","messages","setMessages","rooms","setRooms","handleSubmit","evt","isValid","validate","data","Object","assign","chatRoomName","author","handle","emit","connectToRoom","on","getMessages","response","getRooms","map","m","i","createdAt","handleChange","handleBlur","values","touched","isInvalid","errors","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport io from \"socket.io-client\";\r\nimport \"../ChatRoomPage/\";\r\nimport { getChatRoomMessages, getChatRooms } from \"../../../utils/requests\";\r\nconst SOCKET_IO_URL = \"http://localhost:4000\";\r\nconst socket = io(SOCKET_IO_URL);\r\nconst getChatData = () => {\r\n  return JSON.parse(localStorage.getItem(\"chatData\"));\r\n};\r\nconst schema = yup.object({\r\n  message: yup.string().required(\"Message is required\"),\r\n});\r\nfunction ChatRoomPage() {\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  const handleSubmit = async evt => {\r\n    const isValid = await schema.validate(evt);\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n    const data = Object.assign({}, evt);\r\n    data.chatRoomName = getChatData().chatRoomName;\r\n    data.author = getChatData().handle;\r\n    data.message = evt.message;\r\n    socket.emit(\"message\", data);\r\n  };\r\n  const connectToRoom = () => {\r\n    socket.on(\"connect\", data => {\r\n      socket.emit(\"join\", getChatData().chatRoomName);\r\n    });\r\n    socket.on(\"newMessage\", data => {\r\n      getMessages();\r\n    });\r\n    setInitialized(true);\r\n  };\r\n  const getMessages = async () => {\r\n    const response = await getChatRoomMessages(getChatData().chatRoomName);\r\n    setMessages(response.data);\r\n    setInitialized(true);\r\n  };\r\n  const getRooms = async () => {\r\n    const response = await getChatRooms();\r\n    setRooms(response.data);\r\n    setInitialized(true);\r\n  };\r\n  useEffect(() => {\r\n   if (!initialized) {\r\n      getMessages();\r\n      connectToRoom();\r\n      getRooms();\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"chat-room-page\">\r\n      <h1>\r\n        Chat Room: {getChatData().chatRoomName}. Chat Handle:{\" \"}\r\n        {getChatData().handle}\r\n      </h1>\r\n      <div className=\"chat-box\">\r\n        {messages.map((m, i) => {\r\n          return (\r\n            <div className=\"col-12\" key={i}>\r\n              <div className=\"row\">\r\n                <div className=\"col-2\">{m.author}</div>\r\n                <div className=\"col\">{m.message}</div>\r\n                <div className=\"col-3\">{m.createdAt}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Formik validationSchema={schema} onSubmit={handleSubmit}>\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isInvalid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"12\" controlId=\"handle\">\r\n                <Form.Label>Message</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"message\"\r\n                  placeholder=\"Message\"\r\n                  value={values.message || \"\"}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.message && errors.message}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.message}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button type=\"submit\" style={{ marginRight: \"10px\" }}>\r\n              Send\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\nexport default ChatRoomPage;"]},"metadata":{},"sourceType":"module"}