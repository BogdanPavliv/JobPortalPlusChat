{"ast":null,"code":"import { GET_EDUCATION_LIST, ERROR_IN_GETTING_EDUCATIONS, ERROR_IN_ADDING_EDUCATION, ADD_EDUCATION, EDITED_PROFILE, ERROR_IN_UPDATING_PROFILE, GET_PROFILE_FAILURE, GET_PROFILE_SUCCESS, Applicant, FAILED_TO_DELETE_EDUCATION, DELETED_EDUCATION } from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport { loaduserusingtoken } from './auth';\nexport const getUserProfile = () => async dispatch => {\n  try {\n    const response = await axios.get('/profile/me');\n    dispatch({\n      type: GET_PROFILE_SUCCESS,\n      payload: response.data\n    });\n    dispatch(getEducation());\n  } catch (err) {\n    dispatch({\n      type: GET_PROFILE_FAILURE,\n      payload: {\n        msg: err.response && err.response.statusText ? err.response.statusText : '',\n        status: err.response && err.response.status ? err.response.status : ''\n      }\n    });\n  }\n};\nexport const updateProfile = (profileData, {\n  who\n}) => async dispatch => {\n  try {\n    // console.log(profileData);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    let response;\n    const data = JSON.stringify(profileData);\n\n    if (who === Applicant) {\n      response = await axios.post('/profile/me', data, config);\n    } else {\n      response = await axios.post('/profile/recruiter/me', data, config);\n    }\n\n    dispatch(setalert('Updated Profile', 'danger'));\n    dispatch({\n      type: EDITED_PROFILE,\n      payload: response.data\n    });\n    dispatch(loaduserusingtoken());\n  } catch (err) {\n    let errors;\n\n    if (err.response && err.response.data) {\n      errors = err.response.data.errors;\n    }\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setalert(error.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: ERROR_IN_UPDATING_PROFILE,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addEducation = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const data = JSON.stringify(formData);\n    const response = await axios.post('/education', data, config);\n    dispatch(setalert(\"Added education successfully\", 'danger'));\n    dispatch({\n      type: ADD_EDUCATION,\n      payload: response.data\n    });\n  } catch (err) {\n    let errors;\n    console.log(err);\n\n    if (err.response && err.response.data) {\n      errors = err.response.data.errors;\n    }\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setalert(error.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: ERROR_IN_ADDING_EDUCATION,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getEducation = () => async dispatch => {\n  try {\n    const response = await axios.get('/education');\n    dispatch({\n      type: GET_EDUCATION_LIST,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch(setalert('Failed to retrieve the educations of the user', 'danger'));\n    dispatch({\n      type: ERROR_IN_GETTING_EDUCATIONS\n    });\n  }\n};\nexport const deleteEducation = id => async dispatch => {\n  // console.log('heloiphone12')\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const data = JSON.stringify({\n      id\n    }); // console.log(data);\n\n    const response = await axios.post('/education/delete', data, config);\n    dispatch({\n      type: DELETED_EDUCATION,\n      payload: response.data\n    });\n    dispatch(setalert('Deleted education', 'danger'));\n  } catch (err) {\n    console.log(err.response);\n    dispatch(setalert('Failed to delete the education of the user', 'danger'));\n    dispatch({\n      type: FAILED_TO_DELETE_EDUCATION\n    });\n  }\n};","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/actions/profile.js"],"names":["GET_EDUCATION_LIST","ERROR_IN_GETTING_EDUCATIONS","ERROR_IN_ADDING_EDUCATION","ADD_EDUCATION","EDITED_PROFILE","ERROR_IN_UPDATING_PROFILE","GET_PROFILE_FAILURE","GET_PROFILE_SUCCESS","Applicant","FAILED_TO_DELETE_EDUCATION","DELETED_EDUCATION","axios","setalert","loaduserusingtoken","getUserProfile","dispatch","response","get","type","payload","data","getEducation","err","msg","statusText","status","updateProfile","profileData","who","config","headers","JSON","stringify","post","errors","forEach","error","addEducation","formData","console","log","deleteEducation","id"],"mappings":"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","sourcesContent":["import { GET_EDUCATION_LIST, ERROR_IN_GETTING_EDUCATIONS, ERROR_IN_ADDING_EDUCATION,  ADD_EDUCATION , EDITED_PROFILE, ERROR_IN_UPDATING_PROFILE,  GET_PROFILE_FAILURE, GET_PROFILE_SUCCESS, Applicant, FAILED_TO_DELETE_EDUCATION, DELETED_EDUCATION} from './types';\nimport axios from 'axios';\nimport { setalert } from './alert';\nimport {loaduserusingtoken} from './auth';\n\n\nexport const getUserProfile = () => async  dispatch => {\n    try {\n        const response = await axios.get('/profile/me');\n\n        dispatch({\n            type: GET_PROFILE_SUCCESS,\n            payload: response.data\n        });\n        dispatch(getEducation());\n    } catch (err) {\n        dispatch({\n            type: GET_PROFILE_FAILURE,\n            payload: {msg: err.response && err.response.statusText ? err.response.statusText : '', status: err.response && err.response.status ? err.response.status : ''}\n        });\n    }\n};\n\nexport const updateProfile = (profileData, {who}) => async dispatch => {\n    try {\n        // console.log(profileData);\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        };\n        let response;\n        const data = JSON.stringify(profileData);\n        if(who === Applicant){\n            response = await axios.post('/profile/me', data, config);\n        }\n        else{\n            response = await axios.post('/profile/recruiter/me',data, config);\n        }\n        dispatch(setalert('Updated Profile', 'danger'));\n        dispatch({\n            type: EDITED_PROFILE,\n            payload: response.data\n        });\n        dispatch(loaduserusingtoken());\n    } catch (err) {\n        let errors;\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_IN_UPDATING_PROFILE,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        })\n    }\n};\n\nexport const addEducation = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        };\n        const data = JSON.stringify(formData);\n        const response = await axios.post('/education', data, config);\n        dispatch(setalert(\"Added education successfully\", 'danger'));\n        dispatch({\n            type: ADD_EDUCATION,\n            payload: response.data\n        });\n    } catch (err) {\n        let errors;\n        console.log(err);\n        if(err.response && err.response.data){\n            errors = err.response.data.errors;\n        }\n        if(errors){\n            errors.forEach((error) => {dispatch(setalert(error.msg, 'danger'))});\n        }\n        dispatch({\n            type: ERROR_IN_ADDING_EDUCATION,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n\nexport const getEducation = () => async dispatch => {\n    try {\n        const response = await axios.get('/education');\n        dispatch({\n            type: GET_EDUCATION_LIST,\n            payload: response.data\n        });\n    } catch (err) {\n        dispatch(setalert('Failed to retrieve the educations of the user', 'danger'));\n        dispatch({\n            type: ERROR_IN_GETTING_EDUCATIONS\n        })\n    }\n}\n\nexport const deleteEducation = (id) => async dispatch => {\n    // console.log('heloiphone12')\n\n    try {\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n        };\n        const data = JSON.stringify({id});\n        // console.log(data);\n        const response = await axios.post('/education/delete', data, config);\n        dispatch({\n            type: DELETED_EDUCATION,\n            payload: response.data\n        });\n        dispatch(setalert('Deleted education', 'danger'));\n    } catch (err) {\n        console.log(err.response);\n        dispatch(setalert('Failed to delete the education of the user', 'danger'));\n        dispatch({\n            type: FAILED_TO_DELETE_EDUCATION\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}