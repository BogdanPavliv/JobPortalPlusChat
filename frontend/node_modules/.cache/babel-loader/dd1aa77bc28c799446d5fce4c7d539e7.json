{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\chat\\\\CreateRoom\\\\CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport { Redirect } from \"react-router\";\nimport Loader from \"react-loader-spinner\";\nimport \"./CreateRoom.css\";\nimport { createRoomApi, joinChatRoom } from \"../../utils/requests\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../../../';\nconst schema = yup.object({\n  name: yup.string().required(\"Room name is required\")\n});\n\nfunction CreateRoom() {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const [redirectLogin, setRedirectLogin] = useState(false);\n  const [sppiner, setSpinner] = useState(false);\n  const [state, setState] = useState({\n    successMessage: null,\n    errorMessage: null\n  });\n\n  const handleSubmit = async evt => {\n    setSpinner(true);\n    console.log(\"handleSubmit\");\n    console.log(evt);\n    const isValid = await schema.validate(evt);\n\n    if (!isValid) {\n      console.log(\"not Valid data in handleSubmit function\");\n      return;\n    } else {\n      console.log(\"valid data\");\n    }\n\n    let token = localStorage.getItem(ACCESS_TOKEN_NAME);\n\n    try {\n      const response = await createRoomApi(evt.name, token);\n      console.log(response.data._id);\n      setState({\n        successMessage: 'Room created, redirecting you to room chat..'\n      });\n      localStorage.setItem(\"chatRoomId\", response.data._id);\n      localStorage.setItem(\"chatRoomName\", response.data.name);\n      setSpinner(false);\n      setRedirect(true);\n    } catch (err) {\n      setSpinner(false);\n      console.log(\"create room err\");\n      console.log(err);\n      setState({\n        errorMessage: 'Room not created, choose unique room name and try again.'\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(ACCESS_TOKEN_NAME)) {\n      setRedirectLogin(true);\n    }\n  });\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/chatroom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (redirectLogin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid h-100  mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mt-2\",\n        style: {\n          display: state.successMessage ? 'block' : 'none'\n        },\n        role: \"alert\",\n        children: state.successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-2\",\n        style: {\n          display: state.errorMessage ? 'block' : 'none'\n        },\n        role: \"alert\",\n        children: state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center h-100\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        validationSchema: schema,\n        onSubmit: handleSubmit,\n        initialValues: {\n          name: ''\n        },\n        children: ({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isInvalid,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"12\",\n              controlId: \"handle\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Room Name?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"My Awesome Room\",\n                value: values.name || \"\",\n                onChange: handleChange,\n                isInvalid: touched.message && errors.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-secondary\",\n            type: \"submit\",\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Create Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 6\n  }, this);\n}\n\n_s(CreateRoom, \"kMX93c9UU3qCHFPmsgUCw+DwHiw=\");\n\n_c = CreateRoom;\nexport default CreateRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/chat/CreateRoom/CreateRoom.js"],"names":["React","useEffect","useState","Formik","Form","Col","Button","yup","Redirect","Loader","createRoomApi","joinChatRoom","API_BASE_URL","ACCESS_TOKEN_NAME","schema","object","name","string","required","CreateRoom","redirect","setRedirect","redirectLogin","setRedirectLogin","sppiner","setSpinner","state","setState","successMessage","errorMessage","handleSubmit","evt","console","log","isValid","validate","token","localStorage","getItem","response","data","_id","setItem","err","display","handleChange","handleBlur","values","touched","isInvalid","errors","message","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }  from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport { Redirect } from \"react-router\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./CreateRoom.css\";\r\nimport {createRoomApi, joinChatRoom } from \"../../utils/requests\";\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../../';\r\n\r\nconst schema = yup.object({\r\n\tname: yup.string().required(\"Room name is required\"),\r\n});\r\n\r\nfunction CreateRoom(){\r\n\r\n\tconst [redirect, setRedirect] = useState(false);\r\n\tconst [redirectLogin, setRedirectLogin] = useState(false);\r\n\tconst [sppiner, setSpinner] = useState(false);\r\n\t\r\n\tconst [state , setState] = useState({\r\n        successMessage: null,\r\n        errorMessage: null,\r\n    });\r\n\r\n    const handleSubmit = async evt => {\r\n    \tsetSpinner(true)\r\n    \tconsole.log(\"handleSubmit\")\r\n    \tconsole.log(evt)\r\n    \tconst isValid = await schema.validate(evt);\r\n\t    if (!isValid) {\r\n\t      console.log(\"not Valid data in handleSubmit function\")\r\n\t      return;\r\n\t    }else{\r\n\t      console.log(\"valid data\")\r\n\t    }\r\n\r\n\t    let token = localStorage.getItem(ACCESS_TOKEN_NAME)\r\n    \ttry{\r\n    \t\tconst response = await createRoomApi(evt.name, token);\r\n    \t\tconsole.log(response.data._id)\r\n    \t\tsetState({successMessage : 'Room created, redirecting you to room chat..'})\r\n    \t \r\n    \t\tlocalStorage.setItem(\"chatRoomId\", response.data._id);\r\n    \t\tlocalStorage.setItem(\"chatRoomName\", response.data.name);\r\n    \t\tsetSpinner(false)\r\n    \t\tsetRedirect(true);\r\n\r\n    \t }catch(err){\r\n    \t \tsetSpinner(false)\r\n    \t \tconsole.log(\"create room err\")\r\n    \t \tconsole.log(err)\r\n    \t \tsetState({errorMessage : 'Room not created, choose unique room name and try again.'})\r\n    \t }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\t    if(! localStorage.getItem(ACCESS_TOKEN_NAME) ){\r\n\t      setRedirectLogin(true)\r\n\t    }\r\n\t});\r\n\r\n\r\n\tif(redirect) {\r\n    \treturn (<Redirect to=\"/chatroom\" />);\r\n\t}\r\n\tif(redirectLogin){\r\n\t\treturn (<Redirect to='/login' />);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t\r\n    \t<div className=\"container-fluid h-100  mt-5\">\r\n        \t<div className=\"row justify-content-center h-100\">\r\n\r\n\t        \t<div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n\t                {state.successMessage}\r\n\t            </div>\r\n\r\n\t            <div className=\"alert alert-danger mt-2\" style={{display: state.errorMessage ? 'block' : 'none' }} role=\"alert\">\r\n\t                {state.errorMessage}\r\n\t            </div>\r\n\t        </div>\r\n\r\n\t        <div className=\"row justify-content-center h-100\">\r\n\r\n        \t\t<Formik validationSchema={schema} onSubmit={handleSubmit}\r\n                          initialValues={{name:''}}\r\n                          >\r\n                          {({\r\n                          handleSubmit,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          values,\r\n                          touched,\r\n                          isInvalid,\r\n                          errors,\r\n                          }) => (\r\n                          <Form noValidate onSubmit={handleSubmit}>\r\n                              <Form.Row>\r\n                                  <Form.Group as={Col} md=\"12\" controlId=\"handle\">\r\n                                      <Form.Label>Room Name?</Form.Label>\r\n                                      <Form.Control\r\n                                      type=\"text\"\r\n                                      name=\"name\"\r\n                                      placeholder=\"My Awesome Room\"\r\n                                      value={values.name || \"\"}\r\n                                      onChange={handleChange}\r\n                                      isInvalid={touched.message && errors.message}\r\n                                      />\r\n                                      <Form.Control.Feedback type=\"invalid\">\r\n                                          {errors.message}\r\n                                      </Form.Control.Feedback>\r\n                                  </Form.Group>\r\n                              </Form.Row>\r\n                              <Button className=\"btn btn-secondary\" type=\"submit\" style={{ marginRight: \"10px\" }}>Create Room</Button>\r\n                          </Form>\r\n                          )}\r\n                </Formik>\r\n\r\n        \t</div>\r\n        </div>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default CreateRoom;"]},"metadata":{},"sourceType":"module"}