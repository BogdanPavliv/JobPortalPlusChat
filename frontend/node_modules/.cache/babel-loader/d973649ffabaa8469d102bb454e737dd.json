{"ast":null,"code":"// import React, {Fragment} from 'react'\n// import PropTypes from 'prop-types'\n// import {connect} from 'react-redux';\n// import {} from '../../actions/jobs';\n// import moment from \"moment\";\n// import {Link} from 'react-router-dom';\n// // import deleteJob from '../../actions/jobs';\n// import {changeStatus} from '../../actions/applications';\n// const AllApplicants = ({applicationjobs, changeStatus}) => {\n//     applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\n//     const code = applicationjobs.map(({\n//         applicant: {name,skills},\n//         dateOfJoining,\n//         dateOfApplication,\n//         sop,\n//         status,\n//         job_id,\n//         _id\n//         }) => <table className='table' key={_id}>\n// {name ? \n// <Fragment>\n//     <tr>\n//         <th>Name Of Applicant</th>\n//         <td>{name}</td>\n//     </tr>\n// </Fragment>\n// : \n// <Fragment> </Fragment>}\n// {skills ? \n// <Fragment>\n//     <tr>\n//         <th>Skills of Applicant</th>\n//         <td>{skills}</td>\n//     </tr>\n// </Fragment>\n// : \n// <Fragment> </Fragment>}\n// {dateOfApplication ? \n// <Fragment>\n//     <tr>\n//         <th>Date Of Application</th>\n//         <td>{dateOfApplication}</td>\n//     </tr>\n// </Fragment>\n// : \n// <Fragment> </Fragment>}\n// {sop ? \n// <Fragment>\n//     <tr>\n//         <th>Statement Of Purpose</th>\n//         <td>{sop}</td>\n//     </tr>\n// </Fragment>\n// : \n// <Fragment> </Fragment>}\n// {status ? \n// <Fragment>\n//     <tr>\n//         <th>Stage of application</th>\n//         <td>{status}</td>\n//     </tr>\n// </Fragment>\n// : \n// <Fragment> </Fragment>}\n// <tr>\n//     <td>\n//     {\n//     status === 'Applied' ? \n//     <Fragment>\n//         <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Shortlist</button>\n//     </Fragment>\n//     :\n//     (\n//         status === 'Shortlist' ? \n//         <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Accept</button>\n//         :\n//         <Fragment/>\n//     )\n//     }    \n//     </td>\n//     {status !== 'Accepted' ? <td>\n//     <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Reject</button>\n//     </td>\n//     :\n//     <Fragment/>\n// }\n//     </tr>\n// </table>)\n//     return (\n//         <Fragment>\n//             {code}\n//         </Fragment>\n//     );\n// }\n// AllApplicants.propTypes = {\n//     applicationsjob: PropTypes.array.isRequired,\n//     changeStatus: PropTypes.func.isRequired,\n// }\n// const mapStateToProps = state => ({\n//     applicationsjob: state.applications.applications\n// });\n// export default connect(mapStateToProps, {changeStatus})(AllApplicants\n// );","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/applicants/AllApplicants.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, {Fragment} from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import {connect} from 'react-redux';\r\n// import {} from '../../actions/jobs';\r\n// import moment from \"moment\";\r\n// import {Link} from 'react-router-dom';\r\n// // import deleteJob from '../../actions/jobs';\r\n// import {changeStatus} from '../../actions/applications';\r\n\r\n\r\n// const AllApplicants = ({applicationjobs, changeStatus}) => {\r\n    \r\n//     applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\r\n//     const code = applicationjobs.map(({\r\n//         applicant: {name,skills},\r\n//         dateOfJoining,\r\n//         dateOfApplication,\r\n//         sop,\r\n//         status,\r\n//         job_id,\r\n//         _id\r\n//         }) => <table className='table' key={_id}>\r\n        \r\n// {name ? \r\n// <Fragment>\r\n//     <tr>\r\n//         <th>Name Of Applicant</th>\r\n//         <td>{name}</td>\r\n//     </tr>\r\n// </Fragment>\r\n// : \r\n// <Fragment> </Fragment>}\r\n\r\n// {skills ? \r\n// <Fragment>\r\n//     <tr>\r\n//         <th>Skills of Applicant</th>\r\n//         <td>{skills}</td>\r\n//     </tr>\r\n// </Fragment>\r\n// : \r\n// <Fragment> </Fragment>}\r\n\r\n\r\n// {dateOfApplication ? \r\n// <Fragment>\r\n//     <tr>\r\n//         <th>Date Of Application</th>\r\n//         <td>{dateOfApplication}</td>\r\n//     </tr>\r\n// </Fragment>\r\n// : \r\n// <Fragment> </Fragment>}\r\n\r\n\r\n// {sop ? \r\n// <Fragment>\r\n//     <tr>\r\n//         <th>Statement Of Purpose</th>\r\n//         <td>{sop}</td>\r\n//     </tr>\r\n// </Fragment>\r\n// : \r\n// <Fragment> </Fragment>}\r\n\r\n// {status ? \r\n// <Fragment>\r\n//     <tr>\r\n//         <th>Stage of application</th>\r\n//         <td>{status}</td>\r\n//     </tr>\r\n// </Fragment>\r\n// : \r\n// <Fragment> </Fragment>}\r\n    \r\n// <tr>\r\n//     <td>\r\n    \r\n//     {\r\n//     status === 'Applied' ? \r\n//     <Fragment>\r\n//         <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Shortlist</button>\r\n//     </Fragment>\r\n//     :\r\n//     (\r\n//         status === 'Shortlist' ? \r\n//         <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Accept</button>\r\n//         :\r\n//         <Fragment/>\r\n//     )\r\n//     }    \r\n//     </td>\r\n//     {status !== 'Accepted' ? <td>\r\n//     <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Reject</button>\r\n//     </td>\r\n//     :\r\n//     <Fragment/>\r\n// }\r\n    \r\n//     </tr>\r\n\r\n// </table>)\r\n//     return (\r\n//         <Fragment>\r\n            \r\n//             {code}\r\n//         </Fragment>\r\n//     );\r\n// }\r\n\r\n// AllApplicants.propTypes = {\r\n//     applicationsjob: PropTypes.array.isRequired,\r\n//     changeStatus: PropTypes.func.isRequired,\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n//     applicationsjob: state.applications.applications\r\n// });\r\n// export default connect(mapStateToProps, {changeStatus})(AllApplicants\r\n// );\r\n"]},"metadata":{},"sourceType":"module"}