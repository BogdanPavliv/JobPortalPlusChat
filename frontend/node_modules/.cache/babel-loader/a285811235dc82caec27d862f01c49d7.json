{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\0\\u0412\\u0441\\u0456 \\u0432\\u0435\\u0440\\u0441\\u0456\\u0457\\\\Job-Portal-Redux\\\\frontend\\\\src\\\\components\\\\applicants\\\\AllApplicants.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../../actions/jobs';\nimport moment from \"moment\";\nimport { Link } from 'react-router-dom'; // import deleteJob from '../../actions/jobs';\n\nimport { changeStatus } from '../../actions/applications';\n\nconst AllApplicants = ({\n  applicationjobs,\n  changeStatus\n}) => {\n  if (applicationjobs) {\n    applicationjobs = applicationjobs.filter(val => val.status !== 'Rejected' && val.status !== 'Accepted');\n    const code = applicationjobs.map(({\n      applicant: {\n        name,\n        skills\n      },\n      dateOfJoining,\n      dateOfApplication,\n      sop,\n      status,\n      job_id,\n      _id\n    }) => /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [name ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name Of Applicant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 1\n      }, this), skills ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Skills of Applicant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: skills\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this), dateOfApplication ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Of Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dateOfApplication\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), sop ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Statement Of Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 1\n      }, this), status ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stage of application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: status === 'Applied' ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: e => changeStatus({\n                _id,\n                status,\n                newstatus: 'Shortlist',\n                nopositions: 0,\n                noapplications: 0,\n                job_id\n              }),\n              children: \"Shortlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 5\n          }, this) : status === 'Shortlist' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: e => changeStatus({\n              _id,\n              status,\n              newstatus: 'Accepted',\n              nopositions: 1,\n              noapplications: 0,\n              job_id\n            }),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this), status !== 'Accepted' ? /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: e => changeStatus({\n              _id,\n              status,\n              newstatus: 'Rejected',\n              nopositions: 0,\n              noapplications: -1,\n              job_id\n            }),\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }, this)]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = AllApplicants;\nAllApplicants.propTypes = {\n  applicationsjob: PropTypes.array.isRequired,\n  changeStatus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  applicationsjob: state.applications.applications\n});\n\nexport default connect(mapStateToProps, {\n  changeStatus\n})(AllApplicants);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllApplicants\");","map":{"version":3,"sources":["D:/0Всі версії/Job-Portal-Redux/frontend/src/components/applicants/AllApplicants.js"],"names":["React","Fragment","PropTypes","connect","moment","Link","changeStatus","AllApplicants","applicationjobs","filter","val","status","code","map","applicant","name","skills","dateOfJoining","dateOfApplication","sop","job_id","_id","e","newstatus","nopositions","noapplications","propTypes","applicationsjob","array","isRequired","func","mapStateToProps","state","applications"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {} from '../../actions/jobs';\r\nimport moment from \"moment\";\r\nimport {Link} from 'react-router-dom';\r\n// import deleteJob from '../../actions/jobs';\r\nimport {changeStatus} from '../../actions/applications';\r\n\r\n\r\nconst AllApplicants = ({applicationjobs, changeStatus}) => {\r\n    if (applicationjobs){\r\n         applicationjobs =  applicationjobs.filter((val) => val.status !== 'Rejected' && val.status!== 'Accepted');\r\n    \r\n    \r\n    const code = applicationjobs.map(({\r\n        applicant: {name,skills},\r\n        dateOfJoining,\r\n        dateOfApplication,\r\n        sop,\r\n        status,\r\n        job_id,\r\n        _id\r\n        }) => <table className='table' key={_id}>\r\n        \r\n{name ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Name Of Applicant</th>\r\n        <td>{name}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{skills ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Skills of Applicant</th>\r\n        <td>{skills}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{dateOfApplication ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Date Of Application</th>\r\n        <td>{dateOfApplication}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n\r\n{sop ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Statement Of Purpose</th>\r\n        <td>{sop}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n\r\n{status ? \r\n<Fragment>\r\n    <tr>\r\n        <th>Stage of application</th>\r\n        <td>{status}</td>\r\n    </tr>\r\n</Fragment>\r\n: \r\n<Fragment> </Fragment>}\r\n    \r\n<tr>\r\n    <td>\r\n    \r\n    {\r\n    status === 'Applied' ? \r\n    <Fragment>\r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Shortlist', nopositions: 0, noapplications: 0,job_id})}>Shortlist</button>\r\n    </Fragment>\r\n    :\r\n    (\r\n        status === 'Shortlist' ? \r\n        <button className=\"btn btn-success\" onClick={(e) => changeStatus({_id,status, newstatus: 'Accepted', nopositions: 1, noapplications: 0, job_id})}>Accept</button>\r\n        :\r\n        <Fragment/>\r\n    )\r\n    }    \r\n    </td>\r\n    {status !== 'Accepted' ? <td>\r\n    <button className=\"btn btn-danger\" onClick={(e) => changeStatus({_id,status, newstatus: 'Rejected', nopositions: 0, noapplications: -1, job_id})}>Reject</button>\r\n    </td>\r\n    :\r\n    <Fragment/>\r\n}\r\n    \r\n    </tr>\r\n\r\n</table>)\r\n    return (\r\n        <Fragment>\r\n            \r\n            {code}\r\n        </Fragment>\r\n    );\r\n}\r\n}\r\nAllApplicants.propTypes = {\r\n    applicationsjob: PropTypes.array.isRequired,\r\n    changeStatus: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    applicationsjob: state.applications.applications\r\n});\r\nexport default connect(mapStateToProps, {changeStatus})(AllApplicants\r\n);\r\n"]},"metadata":{},"sourceType":"module"}